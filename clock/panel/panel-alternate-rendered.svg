<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="15.2mm"
   height="128.5mm"
   viewBox="0 0 15.200001 128.5"
   version="1.1"
   id="svg5"
   inkscape:version="1.1.2 (b8e25be8, 2022-02-05)"
   sodipodi:docname="panel-alternate-rendered.svg"
   inkscape:export-filename="panel2.png"
   inkscape:export-xdpi="835.52631"
   inkscape:export-ydpi="835.52631"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="true"
     inkscape:document-units="mm"
     showgrid="false"
     width="15.2mm"
     inkscape:zoom="8"
     inkscape:cx="7.9375"
     inkscape:cy="40.625"
     inkscape:window-width="1512"
     inkscape:window-height="916"
     inkscape:window-x="408"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer3"
     fit-margin-left="0"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1"
     inkscape:snap-others="false"
     inkscape:snap-nodes="true"
     inkscape:snap-global="false"
     inkscape:snap-bbox="true" /><defs
     id="defs2"><linearGradient
       inkscape:collect="always"
       id="linearGradient5561"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop5557" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop5559" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient5517"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop5513" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop5515" /></linearGradient><linearGradient
       id="linearGradient5485"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop5483" /></linearGradient><inkscape:path-effect
       effect="skeletal"
       id="path-effect7987"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.89907,108.16853 c -0.338789,0.63556 -0.585494,-0.57936 -0.860249,-0.20058 -0.768779,0.0861 -1.507842,0.174 -2.196331,0.30929 -0.344351,0.19158 0.02876,-1.10206 -0.487767,-0.64983 -0.180124,0.72359 -1.239807,0.4176 -1.411902,-0.15597 0.01887,-0.52776 1.431831,-0.33795 0.615002,-1.01349 -0.442386,-0.23728 -0.787965,-0.68139 -0.315453,-1.0599 -0.37431,-0.65229 0.645377,-1.09297 0.740224,-0.37751 0.305472,-0.4237 -0.01624,-1.36047 0.714106,-1.41598 0.480545,0.53152 1.318054,-0.64569 1.883412,-0.19636 0.386683,0.22745 1.173709,0.053 1.114937,0.82179 -0.02317,0.44575 -0.684853,0.79525 -0.05521,1.07806 0.240972,0.46794 0.88755,0.68729 1.03094,1.13763 -0.252134,0.28806 -1.45258,0.0717 -0.841107,0.69478 0.238067,0.2626 0.174138,0.7156 0.06939,1.02807 z"
       copytype="single_stretched"
       prop_scale="0.10029086"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><inkscape:path-effect
       effect="skeletal"
       id="path-effect7983"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.652558,101.20258 c -0.417859,-0.40208 -0.968261,-0.29558 -1.422837,-0.44856 -0.303851,0.37021 -0.325379,1.0434 -0.792582,1.36595 -0.430089,-0.41766 0.480085,-1.58367 -0.53556,-1.37293 -0.409691,0.10072 -0.461121,0.33364 -0.09002,0.50117 0.248014,0.7508 -0.659882,0.27131 -0.242199,-0.24727 0.0345,-0.6748 -1.080887,-0.36613 -1.444107,-0.66172 -0.732783,0.0924 0.27673,-0.550217 0.572566,-0.491238 0.50788,-0.184058 0.416304,-1.732194 -0.302692,-1.122269 -0.07592,-0.548969 0.766383,-0.835316 1.25196,-0.961868 0.559898,-0.0054 0.247278,-1.551309 0.122836,-0.62837 -0.168775,0.512229 0.934826,0.155888 0.859534,0.115997 -0.17566,-0.695639 1.053497,-1.009749 1.254207,-0.298809 0.348155,0.559155 -1.004184,0.498484 -0.161131,0.671428 0.265778,0.177804 1.527071,-0.4244 0.86592,0.11709 -0.659291,0.146458 -0.445537,0.767553 0.14033,0.775843 0.80391,0.03167 -0.223413,1.635886 -0.118889,0.884774 0.476513,-0.354336 0.384258,0.295956 0.04208,0.428159 -0.317166,0.365023 -0.714992,1.174823 5.88e-4,1.372623 z"
       copytype="single_stretched"
       prop_scale="0.08225781"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><linearGradient
       id="linearGradient13080"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop13078" /></linearGradient><inkscape:path-effect
       effect="skeletal"
       id="path-effect1214"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.89907,108.16853 c -0.338789,0.63556 -0.585494,-0.57936 -0.860249,-0.20058 -0.768779,0.0861 -1.507842,0.174 -2.196331,0.30929 -0.344351,0.19158 0.02876,-1.10206 -0.487767,-0.64983 -0.180124,0.72359 -1.239807,0.4176 -1.411902,-0.15597 0.01887,-0.52776 1.431831,-0.33795 0.615002,-1.01349 -0.442386,-0.23728 -0.787965,-0.68139 -0.315453,-1.0599 -0.37431,-0.65229 0.645377,-1.09297 0.740224,-0.37751 0.305472,-0.4237 -0.01624,-1.36047 0.714106,-1.41598 0.480545,0.53152 1.318054,-0.64569 1.883412,-0.19636 0.386683,0.22745 1.173709,0.053 1.114937,0.82179 -0.02317,0.44575 -0.684853,0.79525 -0.05521,1.07806 0.240972,0.46794 0.88755,0.68729 1.03094,1.13763 -0.252134,0.28806 -1.45258,0.0717 -0.841107,0.69478 0.238067,0.2626 0.174138,0.7156 0.06939,1.02807 z"
       copytype="single_stretched"
       prop_scale="0.10029086"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><inkscape:path-effect
       effect="skeletal"
       id="path-effect1210"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.652558,101.20258 c -0.417859,-0.40208 -0.968261,-0.29558 -1.422837,-0.44856 -0.303851,0.37021 -0.325379,1.0434 -0.792582,1.36595 -0.430089,-0.41766 0.480085,-1.58367 -0.53556,-1.37293 -0.409691,0.10072 -0.461121,0.33364 -0.09002,0.50117 0.248014,0.7508 -0.659882,0.27131 -0.242199,-0.24727 0.0345,-0.6748 -1.080887,-0.36613 -1.444107,-0.66172 -0.732783,0.0924 0.27673,-0.550217 0.572566,-0.491238 0.50788,-0.184058 0.416304,-1.732194 -0.302692,-1.122269 -0.07592,-0.548969 0.766383,-0.835316 1.25196,-0.961868 0.559898,-0.0054 0.247278,-1.551309 0.122836,-0.62837 -0.168775,0.512229 0.934826,0.155888 0.859534,0.115997 -0.17566,-0.695639 1.053497,-1.009749 1.254207,-0.298809 0.348155,0.559155 -1.004184,0.498484 -0.161131,0.671428 0.265778,0.177804 1.527071,-0.4244 0.86592,0.11709 -0.659291,0.146458 -0.445537,0.767553 0.14033,0.775843 0.80391,0.03167 -0.223413,1.635886 -0.118889,0.884774 0.476513,-0.354336 0.384258,0.295956 0.04208,0.428159 -0.317166,0.365023 -0.714992,1.174823 5.88e-4,1.372623 z"
       copytype="single_stretched"
       prop_scale="0.08225781"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><inkscape:path-effect
       effect="skeletal"
       id="path-effect3756"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.89907,108.16853 c -0.338789,0.63556 -0.585494,-0.57936 -0.860249,-0.20058 -0.768779,0.0861 -1.507842,0.174 -2.196331,0.30929 -0.344351,0.19158 0.02876,-1.10206 -0.487767,-0.64983 -0.180124,0.72359 -1.239807,0.4176 -1.411902,-0.15597 0.01887,-0.52776 1.431831,-0.33795 0.615002,-1.01349 -0.442386,-0.23728 -0.787965,-0.68139 -0.315453,-1.0599 -0.37431,-0.65229 0.645377,-1.09297 0.740224,-0.37751 0.305472,-0.4237 -0.01624,-1.36047 0.714106,-1.41598 0.480545,0.53152 1.318054,-0.64569 1.883412,-0.19636 0.386683,0.22745 1.173709,0.053 1.114937,0.82179 -0.02317,0.44575 -0.684853,0.79525 -0.05521,1.07806 0.240972,0.46794 0.88755,0.68729 1.03094,1.13763 -0.252134,0.28806 -1.45258,0.0717 -0.841107,0.69478 0.238067,0.2626 0.174138,0.7156 0.06939,1.02807 z"
       copytype="single_stretched"
       prop_scale="0.10029086"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><inkscape:path-effect
       effect="skeletal"
       id="path-effect3053"
       is_visible="true"
       lpeversion="1"
       pattern="m 18.652558,101.20258 c -0.417859,-0.40208 -0.968261,-0.29558 -1.422837,-0.44856 -0.303851,0.37021 -0.325379,1.0434 -0.792582,1.36595 -0.430089,-0.41766 0.480085,-1.58367 -0.53556,-1.37293 -0.409691,0.10072 -0.461121,0.33364 -0.09002,0.50117 0.248014,0.7508 -0.659882,0.27131 -0.242199,-0.24727 0.0345,-0.6748 -1.080887,-0.36613 -1.444107,-0.66172 -0.732783,0.0924 0.27673,-0.550217 0.572566,-0.491238 0.50788,-0.184058 0.416304,-1.732194 -0.302692,-1.122269 -0.07592,-0.548969 0.766383,-0.835316 1.25196,-0.961868 0.559898,-0.0054 0.247278,-1.551309 0.122836,-0.62837 -0.168775,0.512229 0.934826,0.155888 0.859534,0.115997 -0.17566,-0.695639 1.053497,-1.009749 1.254207,-0.298809 0.348155,0.559155 -1.004184,0.498484 -0.161131,0.671428 0.265778,0.177804 1.527071,-0.4244 0.86592,0.11709 -0.659291,0.146458 -0.445537,0.767553 0.14033,0.775843 0.80391,0.03167 -0.223413,1.635886 -0.118889,0.884774 0.476513,-0.354336 0.384258,0.295956 0.04208,0.428159 -0.317166,0.365023 -0.714992,1.174823 5.88e-4,1.372623 z"
       copytype="single_stretched"
       prop_scale="0.08225781"
       scale_y_rel="false"
       spacing="0"
       normal_offset="0"
       tang_offset="0"
       prop_units="false"
       vertical_pattern="false"
       hide_knot="false"
       fuse_tolerance="0" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7664-1"
       id="linearGradient7666"
       x1="7.4242997"
       y1="125.55603"
       x2="15.082046"
       y2="125.55603"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(-3.2285625,-3.861614)" /><linearGradient
       inkscape:collect="always"
       id="linearGradient7664-1"><stop
         style="stop-color:#e6e4c3;stop-opacity:1;"
         offset="0"
         id="stop7660" /><stop
         style="stop-color:#b9a45c;stop-opacity:1;"
         offset="1"
         id="stop7662" /></linearGradient><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient3906"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       id="linearGradient3912"><stop
         style="stop-color:#b7a157;stop-opacity:1;"
         offset="0"
         id="stop3908" /><stop
         style="stop-color:#eeefd6;stop-opacity:1;"
         offset="1"
         id="stop3910" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient3902"><stop
         style="stop-color:#fefefe;stop-opacity:1;"
         offset="0"
         id="stop3898" /><stop
         style="stop-color:#bba761;stop-opacity:1;"
         offset="1"
         id="stop3900" /></linearGradient><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath20232"><path
         style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
         d="M 15.369119,41.927468 0.0308224,43.071902 1.6604201,99.152422 14.186535,99.095446 Z"
         id="path20234"
         sodipodi:nodetypes="ccccc" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient2708"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.81543235,0,0,0.81543245,55.762379,4.4734101)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3902"
       id="linearGradient2177"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,59.655744,0.05466558)"
       x1="0.19631793"
       y1="6.1962652"
       x2="3.7429979"
       y2="6.1962652" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient2542"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,43.802568,84.446326)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3902"
       id="linearGradient2712"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,46.002321,80.755266)"
       x1="0.19631793"
       y1="6.1962652"
       x2="3.7429979"
       y2="6.1962652" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3902"
       id="linearGradient1503"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,90.990382,-0.17583858)"
       x1="0.19631793"
       y1="6.1962652"
       x2="3.7429979"
       y2="6.1962652" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient1501"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,87.245531,2.6035914)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath20232-7"><path
         style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
         d="M 15.369119,41.927468 0.0308224,43.071902 1.6604201,99.152422 14.186535,99.095446 Z"
         id="path20234-4"
         sodipodi:nodetypes="ccccc" /></clipPath><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath20232-77"><path
         style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
         d="M 15.369119,41.927468 0.0308224,43.071902 1.6604201,99.152422 14.186535,99.095446 Z"
         id="path20234-1"
         sodipodi:nodetypes="ccccc" /></clipPath><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath20232-77-5"><path
         style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
         d="M 15.369119,41.927468 0.0308224,43.071902 1.6604201,99.152422 14.186535,99.095446 Z"
         id="path20234-1-3"
         sodipodi:nodetypes="ccccc" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient3838"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,87.245531,2.6035914)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient1429"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.72008957,0,0,0.72008957,-63.936712,0.2278687)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7664-1"
       id="linearGradient1679"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(-3.8619865,-3.861614)"
       x1="7.4242997"
       y1="125.55603"
       x2="15.082046"
       y2="125.55603" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7664-1"
       id="linearGradient1683"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(-63.526176,-6.5662344)"
       x1="7.4242997"
       y1="125.55603"
       x2="15.082046"
       y2="125.55603" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7664-1"
       id="linearGradient2605"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(-3.8619865,-3.861614)"
       x1="7.4242997"
       y1="125.55603"
       x2="15.082046"
       y2="125.55603" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3902"
       id="linearGradient2607"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,37.601341,84.363106)"
       x1="0.19631793"
       y1="6.1962652"
       x2="3.7429979"
       y2="6.1962652" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3912"
       id="linearGradient2609"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.75193895,0,0,0.75193895,44.016579,84.446326)"
       x1="2.4332001"
       y1="7.4750853"
       x2="15.566238"
       y2="7.4750853" /><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath2032"><rect
         style="fill:#008000;stroke-width:0.06501"
         id="rect2034"
         width="15.2"
         height="128.5"
         x="0"
         y="0" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient5517"
       id="linearGradient5519"
       x1="-23.551407"
       y1="5.3482758"
       x2="-13.582524"
       y2="5.3482758"
       gradientUnits="userSpaceOnUse" /><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient5561"
       id="radialGradient5563"
       cx="-18.566966"
       cy="5.3482758"
       fx="-18.566966"
       fy="5.3482758"
       r="4.9844413"
       gradientTransform="matrix(1,0,0,0.45497944,0,2.9149203)"
       gradientUnits="userSpaceOnUse" /></defs><g
     inkscape:groupmode="layer"
     id="layer6"
     inkscape:label="Silkscreen"
     style="display:inline"
     sodipodi:insensitive="true"><path
       id="path2687-2"
       style="stroke-width:0.108195"
       d="M 9.609375,42.21875 C 9.1061158,42.21645 8.5870638,42.25825 8.0546875,42.351562 6.7534215,42.579619 5.6113626,43.256629 4.4550781,43.863281 3.0766679,44.586452 3.0791868,44.591638 1.828125,43.9375 1.70889,44.156826 1.7677031,44.391827 1.7753906,44.615234 1.8545576,46.914219 0.8361434,49.990609 0,52.152344 v 8.349609 c 0.47629095,-0.267704 0.72802629,-0.884853 0.57617188,-1.529297 -0.32512646,-1.379599 -0.60376467,-1.53392 -0.125,-1.859375 1.27594912,-0.867405 2.31456892,-2.425732 3.86328122,-3.427734 1.8988282,-1.228452 3.2055965,0.01776 4.1386719,0.701172 -0.2469014,-0.739193 -0.4594602,-1.3229 -0.4433594,-1.957031 0.053012,-2.081685 2.2175134,-2.923303 4.2753904,-1.421876 0.137885,0.100587 0.238765,0.274772 0.41211,0.326172 a 15.11811,15.11811 0 0 1 0.11914,-0.705078 c -0.12688,-0.671722 -0.09328,-1.335417 0.0625,-2.001953 0.256814,-1.099225 0.804841,-1.520355 1.390625,-1.654297 a 15.11811,15.11811 0 0 1 1.177735,-1.875 C 14.29189,43.422998 12.172744,42.230669 9.609375,42.21875 Z M 9.2402344,61.619141 C 8.8412066,63.516558 7.7604111,64.9252 6.6269531,66.457031 6.4298205,65.714811 6.4445303,65.035039 5.8730469,64.580078 c -0.2844435,0.48796 0.1685104,0.886989 -0.5117188,1.28125 -0.333891,0.19355 -0.3747518,-0.410555 -0.8164062,-0.363281 -0.056587,0.544116 0.300904,1.038559 0.2304687,1.654297 C 2.9829165,67.245282 1.8848243,66.08924 0.77539062,64.861328 0.70635945,65.073813 0.65894837,65.167508 0.6484375,65.265625 0.55666698,66.123306 0.3062787,66.681746 0,67.138672 v 3.482422 c 0.30717026,0.02759 0.63746704,0.146492 0.98242188,0.394531 0.31181972,-0.20092 0.47298812,-2.142108 2.28515622,-1.150391 0.9258294,0.50668 0.7533633,-0.6758 1.46875,-1.171875 0.4372214,-0.303193 0.5038003,-0.302095 0.7695313,0.144532 0.2130368,0.357996 0.3948503,0.824174 0.9199218,0.65625 0.9257197,-0.296013 -0.030879,-1.256162 0.78125,-1.66211 1.2711893,-0.635308 2.7718492,-1.999747 3.7656248,-0.441406 0.0093,0.01474 0.08055,-0.01159 0.13086,-0.01953 0.0633,-0.589561 0.02986,-1.254065 0.746093,-1.494141 0.754992,-0.252964 1.218227,0.256592 1.751953,0.845703 0.155585,-0.655018 0.19231,-1.217798 0.582032,-1.640625 0.494238,-0.536061 1.029558,-0.191715 1.572265,0.0039 0,-2.402699 -2.539974,-4.128998 -5.30664,-3.142579 -0.4578815,0.163276 -0.8442564,0.08333 -1.2089846,-0.324218 z m 30.6816406,1.003906 a 15.11811,15.11811 0 0 1 -5.966797,5.193359 c -0.447488,0.534371 -0.906058,1.024578 -1.333984,1.376953 -0.09532,0.0785 -0.227993,0.138514 -0.197266,0.302735 l -0.0078,0.0098 c 0.594572,-0.390296 1.248546,-0.636996 1.951172,-0.724609 1.352416,-0.168718 1.771566,1.344678 2.021484,1.943359 0.239698,-0.151332 2.451962,-1.710624 3.05664,-0.765625 0.47791,0.74685 -0.08918,1.269755 -0.111328,1.583985 0.875726,-1.011477 2.570992,-5.186999 0.587891,-8.919922 z M 29.693359,69.03125 a 15.11811,15.11811 0 0 1 -2.197265,0.248047 15.11811,15.11811 0 0 1 -0.640625,-0.07227 c -0.722721,1.5915 -2.15374,2.709894 -4.001953,3.001953 -0.09651,-1.876758 -0.05227,-2.462733 -0.646485,-3.048828 -0.05983,0.626884 -0.0061,1.253613 -0.154297,1.90625 -0.597995,-0.232403 -1.135789,6.45e-4 -1.679687,0.144532 -0.188696,-0.427155 -0.192131,-0.929646 -0.783203,-1.105469 0.08365,0.822395 0.06014,1.599671 0.0293,2.375 -0.02283,0.575486 -0.03028,0.573397 -0.560547,0.621093 -2.144868,0.192806 -4.115441,-0.897144 -5.091797,-2.822265 -0.14109,-0.278064 -0.262948,-0.566977 -0.425781,-0.921875 -0.403138,0.949633 -0.402617,0.950041 -1.326172,1.5 -2.6773002,1.594586 -5.3518666,4.432301 -4.6289065,7.451172 0.2663807,-0.05744 0.3245679,-0.251878 0.4453125,-0.378906 0.418501,-0.440247 0.8856458,-0.812065 1.4550781,-1.039063 1.9988069,-0.796641 2.4723409,1.306217 2.7011719,1.464844 1.199672,-2.044025 1.987128,-1.540354 4.074219,-0.216797 0.485148,-0.668863 0.909723,-1.626385 2.794922,-2.824219 0.72545,-0.461019 0.773097,-0.431406 0.880859,0.404297 0.144119,1.1182 -0.164761,1.820016 0.421875,2.048828 1.00481,0.391994 1.73479,-2.502441 2.216797,-2.74414 1.307326,-0.655556 2.947674,-0.272455 3.84375,0.935546 0.126266,-0.263996 0.225232,-0.524868 0.367187,-0.759765 0.68531,-1.134323 1.701418,-0.383171 1.900391,1.189453 0.01969,0.156125 -0.03604,0.34863 0.146484,0.49414 2.238887,-3.039975 2.27541,-0.379183 2.433594,-0.177734 1.265446,-2.765327 0.239967,-5.76383 -1.574219,-7.673828 z M 0,71.835938 v 6.697265 c 0.8430238,-1.614077 2.46372,1.862105 2.75,1.974609 1.0989405,-1.804262 1.8742118,-3.576628 3.0332031,-1.472656 0.1230161,0.223219 0.1289347,0.549065 0.4785157,0.667969 C 6.7777039,76.774271 4.840504,73.18425 2.0917969,72.771484 1.2910154,72.651231 0.52597802,72.44929 0,71.835938 Z m 36.607422,3.505859 c -0.199078,0.323527 -0.534737,0.235891 -0.841797,0.257812 -1.580952,0.112309 -3.722497,0.813028 -3.742187,2.390625 1.577491,-0.431161 2.043964,-0.241036 2.578124,0.988282 2.073997,-0.84847 1.561964,1.435569 2.845704,0.648437 0.403026,-0.247128 0.88144,-0.316596 1.347656,-0.388672 0.718401,-0.111008 0.355741,0.433442 0.529297,1.097657 0.161968,0.620193 0.801772,0.18225 0.914062,0.01758 0.621581,-0.911116 2.40512,-0.163298 2.689453,0.818359 0.918686,-0.596697 1.113398,-0.444616 1.263672,0.927734 1.105637,-0.346008 1.15787,-0.33245 1.458985,0.388672 1.197505,-1.316523 0.841445,-3.46582 -0.865235,-5.011719 -0.700565,1.410868 -1.951485,1.339877 -3.228515,1.244141 -0.07313,-0.531243 0.41826,-0.988155 0.09961,-1.472656 -0.312355,0.103544 -0.158599,0.646495 -0.558594,0.572265 -0.419259,-0.0779 -0.946017,-0.08269 -1.007812,-0.763671 -0.475302,0.831481 -0.380357,1.355364 -0.919922,1.136718 -1.146335,-0.464485 -2.032202,-1.170067 -2.363281,-2.425781 -0.03711,-0.140666 -0.0074,-0.316515 -0.199219,-0.425781 z m -44.0781251,0.65625 c -0.024907,0.04218 -0.020645,0.0421 -0.039063,0.02539 z m 18.9921871,0.433594 c -0.0011,0.0041 0.0037,9.55e-4 0.002,0.0059 0,0 -0.02239,0.0044 -0.01953,0.0039 0.0098,-0.0011 0.01034,-0.0068 0.01758,-0.0098 z m 0.5625,3.283203 c -0.74103,0.01623 -0.256808,0.563977 -0.511718,0.779297 -0.472165,0.03073 -0.878659,-0.427657 -1.396485,-0.283203 0.0198,0.312157 0.579863,0.256665 0.429688,0.65039 -0.174085,0.456268 -0.54832,0.555514 -1.0136721,0.458984 0.2546925,0.179271 0.5683671,0.187996 0.7597651,0.542969 -2.1302602,0.399133 -2.9243719,0.501696 -3.7167964,0.941407 -0.390909,0.216819 -0.5505375,0.557896 -0.3144531,0.736328 1.0644268,0.804434 -0.9687753,1.501423 0.53125,3.541015 0.4411106,-0.989231 0.7699666,-1.977723 2.0136719,-1.851562 -0.1441145,-0.984461 -0.00443,-1.152464 0.8710937,-1.121094 0.5297239,0.01904 0.5301799,0.0187 0.5742189,-0.572266 0.06989,-0.937296 1.719561,-2.422296 1.888672,-1.439453 0.209121,1.214393 0.02768,1.250083 0.0332,2.146485 0.473788,-0.545836 0.932349,-0.872233 1.517578,-0.628907 1.188745,0.494234 0.521342,-1.168508 2.091797,-0.822265 -0.334646,-1.669459 -2.104043,-3.114409 -3.757813,-3.078125 z m -39.117187,1.568359 c -0.14942,-0.04002 -0.0096,0.168714 -0.07617,0.06055 0.04219,0.147704 0.203196,-0.02646 0.07617,-0.06055 z m 37.759765,6.210938 c -0.287365,-0.0087 -0.570285,0.0085 -0.8437495,0.05078 0.8382985,1.111601 0.8556105,1.048117 1.2812495,2.308594 0.185556,0.549309 0.420557,1.083578 1.021485,1.384765 0.03992,-0.387337 -0.282577,-0.689609 -0.06445,-1.050781 0.241918,0 0.331698,0.01359 0.466797,0.02734 a 15.11811,15.11811 0 0 1 0.572265,-2.322266 c -0.331087,-0.05794 -0.812241,-0.15143 -1.5625,-0.298828 -0.292508,-0.05745 -0.583727,-0.09087 -0.871094,-0.09961 z m -7.7773432,0.853515 c 0.085478,0.764293 0.9883574,0.934295 0.2226562,1.628906 -0.9261522,0.840186 -1.0150241,-0.321289 -1.5976562,-0.02539 l 0.023437,-0.0039 C 1.8971435,90.39825 2.5359595,90.61747 2.5546871,91.279303 2.1225784,91.434669 1.1013241,91.031586 0,90.775391 v 3.689453 c 0.46869293,0.121171 0.9761365,0.602179 1.2402344,0.599609 0.3607234,-0.496509 0.096037,-1.222027 0.7773437,-1.832031 1.4893114,-1.333391 1.8088983,-1.495138 2.5175781,-1.238281 0.5193385,0.188258 -0.2497437,2.623041 -1.140625,4.392578 0.6137928,-0.379983 1.0147344,-0.861941 1.6484376,-0.810547 0.6613956,0.05367 0.9419148,0.661628 1.3828124,1.046875 C 6.8298921,96.192423 7.1598037,95.744726 7.640625,95.462891 8.5663477,94.9204 8.6428875,96.000917 8.8261719,96.052734 9.1748862,94.614492 9.0983736,90.838948 5.9550781,88.792969 4.7766131,88.025864 5.1017123,89.433056 4.8144531,89.849609 4.1490495,89.38859 3.8224678,88.551486 2.9492188,88.347656 Z M 12.861328,96.375 c -0.188724,1.039118 -0.511215,1.571339 -1.496094,2.589844 -0.562509,0.581782 -0.564114,0.580425 -1.238281,0.283203 -0.251448,0.14087 0.1317,0.468485 -0.1796874,0.601562 -0.7313987,0.312581 -0.8821963,0.06964 -1.0820312,-0.08789 C 8.2651826,99.288669 8.6158955,100.16514 7.9785156,99.671875 5.4734645,97.733336 3.6977664,97.381501 3.8339844,98.169922 4.0838108,99.616385 4.0347481,103.48215 5.25,103.8457 c 0.289423,-1.02525 -0.1018335,-1.25173 1.0488281,-0.94336 0.061565,0.0165 0.1052336,0.0123 0.1738281,-0.10937 0.1680288,-1.6292 0.9891257,-0.44223 1.546875,0.22461 0.041333,-0.57917 -0.017138,-1.06053 0.2851563,-1.4668 0.3411398,-0.45869 0.5832789,-0.47071 0.9042969,-0.002 0.748281,1.09275 1.9182836,0.53796 1.9902346,-0.3711 0.06189,-0.78216 0.903694,-0.66661 1.183593,-0.27148 0.111549,0.15744 0.13322,0.38845 0.3125,0.45508 0.280876,-0.0454 0.297373,-1.647601 1.488282,-0.52735 0.160348,0.15093 0.242803,0.4186 0.533203,0.40235 0.07377,-0.11123 0.06692,-0.33434 0.08398,-0.5586 A 15.11811,15.11811 0 0 1 12.861328,96.375 Z M 40.25,100.41797 a 15.11811,15.11811 0 0 1 -1.378906,1.96094 c 0.125078,0.17416 0.231258,0.3753 0.296875,0.61132 0.07449,0.005 0.05403,-0.0546 0.328125,-0.28515 0.444181,-0.37353 1.022734,-0.60888 1.304687,-0.10156 0.120983,0.21764 0.139159,0.41594 0.181641,0.68164 1.467047,-0.76834 0.129062,-1.88732 -0.732422,-2.86719 z m -30.5839844,2.79101 c -0.1863114,1.12221 -0.458194,2.63264 -1.3515625,3.43946 -0.6611833,0.59714 -0.607407,-0.37929 -1.2441406,-0.28125 -0.0225,0.0497 -0.061774,0.0955 -0.060547,0.14062 0.034837,1.37052 -0.8908185,0.45066 -1.3730468,0.6543 -0.026073,0.36581 0.4524769,0.48704 0.4238281,0.92383 -1.3498462,0.14422 -2.5703237,-0.1642 -3.7050781,-1.00391 -0.6870399,2.12723 -2.92928313,4.42951 -0.3378907,5.16016 0.2027547,-0.2733 -0.3421674,-1.84348 1.3769531,-1.37305 0.3655898,0.10007 0.7110564,0.27344 1.0917969,0.42383 0.2030816,-1.07784 0.2616082,-1.73159 1.6171875,-1.85352 0.6649686,-0.0598 0.1895928,-1.09599 0.9921875,-0.51953 0.1055962,0.0759 0.2011665,0.16674 0.3125,0.23242 0.4376508,0.25815 0.8093882,0.11297 0.9726563,-0.37109 0.2464705,-0.73065 -0.3746059,-1.07976 0.3652344,-1.45703 1.4559883,-0.74255 1.7722413,-0.0242 1.9609373,-0.64258 0.271246,-0.88827 0.600249,-0.57975 1.839844,0.17383 0.200595,-0.18067 0.198977,-0.37821 0.265625,-0.54492 0.440464,-1.10165 0.60471,-1.16939 1.623047,-0.64453 0.426941,-0.5042 -1.08614,-2.69116 -2.927735,-2.41797 -0.610544,0.0905 -1.210477,0.22455 -1.8417965,-0.0391 z m 27.2753904,1.09961 a 15.11811,15.11811 0 0 1 -5.544922,2.78321 c -0.141832,0.53072 -0.31972,0.99131 -0.548828,1.35351 -0.378951,-0.22564 -0.516529,-0.77905 -1.052734,-0.79297 0.153907,1.41253 -0.453547,0.59352 -0.808594,0.90625 0.06405,0.36722 0.507138,0.51931 0.53711,0.93164 -1.3466,0.52183 -2.600353,0.0423 -3.875,-0.40234 0.143467,1.36218 0.13853,1.35867 -0.476563,2.61914 -0.470648,0.96446 -0.477897,2.14606 0.529297,2.49219 0.01244,-1.59338 1.679531,-1.30689 1.890625,-1.30274 0.428344,-2.36764 1.896572,-0.57845 2.152344,-1.74804 0.409954,-1.8746 1.219697,0.0322 1.925781,-0.6543 0.522909,-0.50841 -0.599872,-0.73048 0.251953,-1.33594 0.516308,-0.36699 1.324311,-1.84307 2.789063,-1.15429 -0.187829,-2.11447 1.725386,-1.05201 1.958984,-1.20703 -0.35012,-1.71588 0.747403,-1.42583 1.316406,-1.50977 -0.280495,-0.47627 -0.638668,-0.77121 -1.044922,-0.97852 z m -7.146484,3.34375 c -7.72e-4,-0.007 -0.0011,-0.0104 -0.002,-0.0176 l -0.02148,0.0117 c 0.0093,-8e-5 0.01433,0.006 0.02344,0.006 z m 19.310547,-2.62109 c -0.364289,0.0424 -0.102259,0.47734 -0.369141,0.60742 -0.300673,-0.0119 -0.544092,-0.28612 -0.888672,-0.24023 0.355847,0.52074 0.356891,0.51985 -0.05273,0.93164 l 0.0039,0.01 c -0.0046,0.25264 0.01175,0.47833 -0.361328,0.52149 -0.648306,0.0751 -1.288261,0.2249 -1.876953,0.52148 -0.449651,0.22656 -0.528536,0.41342 -0.300781,0.86719 0.33064,0.6588 -0.261004,0.57274 -0.08594,2.13281 0.02487,0.22149 0.04989,0.46079 0.34961,0.55664 0.29278,-0.68585 0.437164,-1.2378 0.998046,-1.33203 0.755728,-0.12702 -0.06992,-1.10119 0.935547,-1.0039 0.557632,0.0539 0.408398,-0.0682 0.4375,-0.47071 0.06124,-0.85008 1.259407,-2.03731 1.359375,-0.93945 0.04158,0.45691 0.0098,0.92106 0.0098,1.50391 0.322099,-0.28413 0.582293,-0.54407 0.902344,-0.4043 0.743198,0.32458 0.632685,-0.3938 1.154296,-0.70508 0.137522,-0.082 0.296839,0.11882 0.435547,-0.0801 -0.315496,-1.0892 -0.87173,-1.98287 -2.035156,-2.36328 -0.303546,-0.0992 -0.493805,-0.12743 -0.615234,-0.11328 z m -7.056641,0.53906 c -0.165437,0.007 -0.337695,0.0368 -0.519531,0.0937 0.500413,0.76668 0.248479,1.45913 -0.128906,2.15039 -0.12875,0.23551 -0.178118,0.51786 -0.539063,0.27344 -0.09056,-0.0612 -0.230215,-0.0349 -0.222656,0.10352 0.03267,0.60599 -0.440684,0.39355 -0.75,0.47265 0.03636,0.16371 0.302095,0.2302 0.1875,0.47852 -1.92155,-0.56555 -2.462342,-0.80088 -3.138672,-0.45313 0.311713,0.33162 0.856028,0.45795 0.673828,1.00391 -0.282459,0.84652 0.50503,1.06779 1.691406,1.62695 0.04339,-0.80973 0.04322,-0.80949 0.84961,-0.5625 0.01541,0.005 0.03547,-0.006 0.05469,-0.0137 -0.09096,-0.34972 -0.191088,-0.73082 0.08398,-1.03906 0.232512,-0.26052 0.421511,0.0177 0.630859,0.0547 0.378675,0.0673 0.608862,-0.12165 0.697266,-0.4668 0.236621,-0.92442 0.69467,-0.49523 1.033203,-0.38672 0.101053,-1.14287 0.679408,-0.37025 1.001953,-0.45703 -0.007,-0.74981 -0.05608,-0.9332 0.818359,-0.57422 -0.499962,-1.23697 -1.265771,-2.35082 -2.423828,-2.30469 z m -1.841797,5.17383 v 0.002 l 0.01758,-0.006 c -0.0059,0.002 -0.01144,0.002 -0.01758,0.004 z m -18.61914,-4.31641 c -1.100475,1.11121 -1.684724,2.51725 -2.619141,3.64844 -0.321335,-0.31712 -0.01262,-0.5767 -0.02539,-0.9082 -0.407465,0.005 -0.444503,0.3042 -0.578125,0.51562 -0.220068,0.34849 -0.609066,0.3708 -0.955078,0.46094 -0.263561,0.0686 -0.260849,-0.16288 -0.335937,-0.32226 -0.08299,-0.1761 -0.253403,-0.10457 -0.304688,0.002 -0.219202,0.45475 -0.503514,0.42236 -0.857422,0.16992 -0.329996,-0.23543 -1.200632,-0.0836 -1.464843,-1.32031 -0.142602,-0.66757 -0.454891,-1.26734 -0.917969,-0.76758 -1.303972,1.40741 -0.518072,3.82304 0.291015,5.5625 0.159704,-0.23932 0.01603,-0.40848 0.03516,-0.58203 0.05161,-0.46689 0.341148,-0.65435 0.71875,-0.25781 0.154722,0.16252 0.189612,0.42921 0.470703,0.52929 0.05485,-0.55677 0.0252,-0.91619 0.373047,-1.05664 0.508846,-0.20535 0.563669,0.63325 0.857422,0.44922 -0.06535,-0.32643 -0.218302,-0.78543 0.125,-0.91601 0.192049,-0.073 0.231087,0.15827 0.332031,0.26171 0.927996,0.95093 2.26301,0.15355 2.296875,-0.75 0.03235,-0.86514 1.427005,-0.80717 2.115234,0.002 0.632403,-1.38609 0.988102,-0.77014 1.605469,-0.64258 0,-1.50089 -0.07856,-1.82814 1.242188,-0.92969 0.137418,-0.94653 -1.007033,-1.42026 -2.335938,-3.125 a 15.11811,15.11811 0 0 1 -0.06836,-0.0234 z m 10.443359,5.87305 c 0.01156,-0.002 -0.05516,0.0197 -0.06641,0.0234 0,0 0.06208,-0.0227 0.06641,-0.0234 z m -0.886719,0.54297 c -0.0074,0.004 -0.0092,0.0216 -0.0039,0.0449 0.02621,0.0143 0.01045,0.0521 0.02148,-0.0254 0.0023,-0.0164 -0.0093,-0.0238 -0.01758,-0.0195 z m -0.0039,0.0449 c -0.0083,-0.005 -0.0033,-0.0147 -0.02734,-0.008 0,0 0.02857,0.0149 0.02734,0.0137 -0.0011,-0.003 6.87e-4,-0.003 0,-0.006 z m 8.142578,0.22266 c -0.149091,1.08347 -0.974566,1.35532 -1.826172,1.60156 -0.243012,-0.29862 -0.05615,-0.69772 -0.376953,-0.89062 -0.126047,0.0984 -0.03591,0.33466 -0.222656,0.37695 -0.316363,0.0717 -0.635473,0.0846 -0.957031,-0.19922 0,0.98285 0.09981,1.09866 -1.035157,0.88867 -0.729237,-0.13492 -1.250154,-0.60164 -1.716796,-1.11914 -1.102094,0.4964 -2.62171,1.32171 -2.552735,2.41797 a 15.11811,15.11811 0 0 1 0.544922,0.11523 c 0.558342,-0.26345 1.095212,-0.29476 1.574219,0.40821 0.766457,-1.20182 1.48384,0.45904 2.126953,-0.34961 0.279253,-0.35121 0.690043,-0.54123 1.121094,-0.68945 0.323395,0.51963 0.198591,0.77791 0.546875,0.80664 0.622879,0.0512 0.321536,-0.78421 1.009765,-0.82227 0.363319,-0.0201 0.746156,-0.0951 1.074219,0.0977 1.017793,0.59857 0.534081,-0.98974 1.591797,0.61523 0.329673,-0.35875 0.695926,-0.54739 1.134765,-0.19922 0.233054,-1.41173 -0.563267,-2.58102 -2.037109,-3.05859 z m 8.25,0.14648 c -0.115315,-0.005 -0.230436,0.003 -0.341797,0.0254 -0.47119,0.0952 -0.943448,0.20179 -1.427734,0.27149 0.03927,0.75098 0.142121,1.45522 -0.08594,2.14648 -0.360619,1.09321 -0.52523,0.3225 -1.035156,0.47266 0.03203,0.64464 0.03128,0.64456 -0.789062,0.6875 -0.102237,0.22765 0.342581,0.26717 0.162109,0.54297 -0.854963,0.27535 -1.673132,0.0223 -2.5625,-0.30664 0.03776,1.31468 -1.190561,3.18346 0.685547,3.47656 0.06127,-0.25115 0.0064,-0.15567 -0.01172,-0.29102 -0.124422,-0.93546 0.408148,-0.77276 1.482422,-0.62109 0.138709,-0.1307 -0.159151,-1.22881 0.792969,-1.32617 0.339318,-0.0347 0.23404,-0.36937 0.46289,-0.48438 0.122041,0.0687 0.256025,0.14679 0.392578,0.21875 0.159262,0.0838 0.318899,0.20378 0.503907,0.0684 0.221367,-0.16208 0.240348,-0.38696 0.173828,-0.63086 -0.117506,-0.42964 -0.472507,-0.5828 0.21875,-1.03711 0.537082,-0.35305 0.976936,-0.0345 0.953125,-0.57617 -0.03484,-0.79687 1.07128,-0.0311 1.326172,-0.0606 0.191074,-1.18549 0.02358,-1.27976 1.013672,-1.06054 -0.250403,-0.81114 -1.106856,-1.48121 -1.914063,-1.51563 z m 7.570313,0.17969 c -0.115019,-0.0114 -0.229242,-0.009 -0.341797,0.004 -0.750373,0.0887 -1.421981,0.6555 -1.712891,0.75781 -0.599599,0.21087 -0.170607,0.54595 -0.9375,2.18359 -0.257492,0.016 -0.30975,-0.30701 -0.558594,-0.27148 -0.113952,0.16423 -0.01118,0.49263 -0.357422,0.50586 -0.133076,0.005 -0.181084,0.092 -0.107421,0.20703 0.475517,0.74188 -1.071283,0.63909 -1.935547,0.37305 0.03829,1.62596 -1.272633,2.03744 -0.353516,3.0957 0.225808,-0.95818 1.337147,-0.8932 1.601563,-1.71094 0.01863,-0.0573 0.190604,-0.10351 0.283203,-0.0918 0.896398,0.11252 0.42578,-1.26581 1.292968,-0.80273 0.767864,0.41006 0.06853,-1.37707 2.013672,-1.79297 0.602325,-0.12875 -0.27853,-0.85285 1.345704,-0.81445 -0.0858,-0.59519 0.287807,-0.88144 0.794921,-1.07813 -0.330651,-0.371 -0.682289,-0.53022 -1.027343,-0.56445 z m -4.925782,7.30469 c -0.07279,0.27406 0.06628,0.60807 -0.130859,0.83008 -0.204816,0.23068 -0.137801,0.97508 -0.814453,0.5 -0.03907,-0.0275 -0.490975,0.0737 -0.408203,0.49023 0.127018,0.63922 -0.640663,0.54786 -1.03125,0.21484 -0.217905,-0.18587 -0.376938,-0.12737 -0.488281,0.10938 -0.338117,0.71917 -0.559463,1.45323 -0.220704,2.39453 0.149632,-0.78621 0.896363,-0.38807 1.1875,-0.81836 0.482756,0.18133 0.461425,-0.14203 0.703125,-0.85547 0.294293,-0.0375 0.543894,0.5823 0.636719,0.0566 0.200058,-1.13152 0.734176,-0.40572 1.080078,-0.86523 0.335293,-0.44553 0.583226,0.49259 0.705078,0.043 0.08039,-0.29669 0.580679,-0.12747 0.490235,-0.57032 -0.15634,-0.76526 -0.888752,-1.45669 -1.708985,-1.52929 z m -6.470703,1.51953 c -0.01017,-0.0159 -0.201273,0.0473 -0.269531,0.11328 -0.631211,0.61044 -0.513519,0.90543 -1.138672,0.90625 -1.160198,0.002 -1.012761,1.08463 -0.359375,1.91211 0.178201,0.22559 0.710893,0.21311 1.148438,-0.72852 -0.231217,-0.18113 -0.58176,-0.22553 -0.679688,-0.50586 0.31344,-0.64906 0.978323,0.0877 1.292969,-0.42773 0.478549,0.003 0.866647,-0.39877 1.43164,-0.24805 -0.305214,-0.72545 -1.09923,-0.51361 -1.425781,-1.02148 z m 7.28125,4.0625 c -0.188908,0.28228 -1.136222,2.1542 -1.529297,1.32812 -0.251769,-0.52905 -0.166392,0.43033 -0.673828,0.0547 -0.405192,-0.29983 -0.29083,0.37191 -0.830078,0.0352 -0.398268,-0.24875 -0.633797,-0.66816 -0.976562,-1 -0.871614,0.96421 -1.253958,1.30972 -1.238282,1.70312 0.01034,0.007 0.03105,0.006 0.03906,0.0137 0.04103,0.041 0.02432,0.0755 -0.0332,0.0996 0.03367,0.14785 0.118306,0.31036 0.253906,0.51953 0.55948,-0.57167 0.559798,-0.57193 1.316406,0.0898 0.197998,0.0193 0.331793,-0.667 0.888672,-0.47852 0.265727,0.0899 0.649285,-0.17125 0.796875,0.34571 0.08559,0.30013 0.377158,0.23458 0.525391,-0.14844 0.481905,-1.24544 1.044103,0.0942 1.513672,-0.60742 0.107977,-0.16132 0.494706,0.43279 0.621093,0.60351 0.268524,-0.0829 0.332852,-0.3504 0.539063,-0.4707 0.281201,-0.16403 0.350979,0.26616 0.595703,0.19141 0.0991,-0.44588 -0.09478,-0.82044 -0.261719,-1.20313 -0.286828,-0.65772 -0.982742,-0.72434 -1.546875,-1.07617 z m -5.242187,2.23437 c -0.0089,-0.039 -0.0044,-0.0757 -0.0059,-0.11328 -0.04368,-0.028 -0.0953,-0.0517 -0.166015,-0.0547 -0.08746,-0.004 -0.186484,0.0125 -0.277344,0.0488 -0.200844,0.0804 -0.142901,0.14025 0.150391,0.15235 0.13268,0.005 0.238535,-0.009 0.298828,-0.0332 z m -2.972656,-0.83398 c -0.10823,-0.0104 -0.215763,0.0386 -0.345704,0.14648 -0.06959,0.0578 -0.127513,0.0915 -0.177734,0.0977 a 15.11811,15.11811 0 0 1 0.310547,2.99219 15.11811,15.11811 0 0 1 -6.464844,12.30664 c 0.01213,0.11272 0.01238,0.2328 -0.01367,0.36914 -0.07119,0.3724 0.03337,0.63207 0.294922,0.73242 0.222716,0.0855 0.332611,0.28475 0.246094,0.44336 -0.08652,0.15859 0.338752,-0.25096 0.945312,-0.91016 1.319182,-1.43393 2.179752,-1.64392 2.667969,-0.65039 0.235049,0.47833 0.257449,0.85572 0.08008,1.32227 -0.294576,0.77468 -0.877071,0.90015 -0.634765,0.13672 0.156283,-0.49243 -0.227261,-1.2461 -0.634766,-1.2461 -0.106091,0 -0.265226,0.38477 -0.353516,0.85547 -0.08833,0.47071 -0.326778,0.99208 -0.529297,1.16016 -0.202506,0.16807 -0.320301,0.38377 -0.261718,0.47851 0.05858,0.0948 0.0064,0.33521 -0.117188,0.53516 -0.176579,0.2857 -0.290305,0.29953 -0.53125,0.0586 -0.215055,-0.21505 -0.401593,-0.22874 -0.623047,-0.0449 -0.405057,0.33619 -0.917477,-0.53989 -0.703125,-1.20117 0.123636,-0.38143 0.103157,-0.39397 -0.121093,-0.0801 -0.148354,0.20769 -0.204741,0.58777 -0.125,0.84375 0.118597,0.38075 0.04847,0.43438 -0.384766,0.29688 -0.362169,-0.11498 -0.577991,-0.0436 -0.681641,0.22656 -0.169867,0.44266 -1.355468,0.54862 -1.355468,0.12109 0,-0.15076 -0.339265,0.0106 -0.753907,0.35938 -0.414641,0.34889 -0.957364,0.69873 -1.205078,0.77734 -0.506403,0.16075 -1.314453,1.39515 -1.314453,2.00782 0,0.22094 -0.141373,0.37453 -0.314453,0.33984 -0.439548,-0.0879 -0.263035,1.61579 0.205078,1.97851 0.198399,0.15372 0.361328,0.40511 0.361328,0.5586 0,0.15341 0.169268,0.21252 0.376953,0.13281 0.232237,-0.0891 0.378907,0.002 0.378907,0.23438 0,0.44158 0.524199,0.68302 1.466797,0.67773 0.872301,-0.005 1.246502,-0.26722 1.162109,-0.81445 -0.03738,-0.24231 0.03591,-0.43946 0.162109,-0.43946 0.12621,0 0.228516,-0.23248 0.228516,-0.51757 0,-0.28509 0.114468,-0.44946 0.253906,-0.36329 0.139442,0.0862 0.320254,-0.0185 0.402344,-0.23242 0.116421,-0.30338 0.26013,-0.32893 0.648437,-0.12109 0.273827,0.14653 0.438153,0.42127 0.365235,0.61133 -0.08597,0.2242 -0.0052,0.29547 0.230468,0.20508 0.199862,-0.0767 0.305071,-0.23134 0.234376,-0.34571 -0.0707,-0.11437 -0.01376,-0.28022 0.126953,-0.36719 0.140719,-0.087 0.255859,-0.27171 0.255859,-0.41015 0,-0.13848 -0.125353,-0.17329 -0.279297,-0.0781 -0.153944,0.0951 -0.379138,0.017 -0.5,-0.17382 -0.159129,-0.25112 -0.219863,-0.26101 -0.222656,-0.0332 -0.0068,0.55772 -0.513359,0.33589 -0.769531,-0.33789 -0.136702,-0.35955 -0.472788,-0.71319 -0.748047,-0.78516 -0.275259,-0.072 -0.5,-0.23121 -0.5,-0.35351 0,-0.12231 0.08365,-0.19745 0.1875,-0.16797 0.103846,0.0295 0.455553,-0.0951 0.78125,-0.27539 0.325697,-0.18017 0.819581,-0.26803 1.097656,-0.19531 0.355563,0.093 0.543209,-0.0129 0.632813,-0.35547 0.07007,-0.26797 0.288482,-0.48633 0.484374,-0.48633 0.195878,0 0.420294,-0.16927 0.5,-0.37695 0.177219,-0.46181 0.595704,-0.50043 0.595704,-0.0547 0,0.17802 0.22698,0.32422 0.503906,0.32422 0.276926,0 0.501953,-0.11429 0.501953,-0.25391 0,-0.13958 0.165286,-0.0189 0.367187,0.26953 0.463877,0.66228 0.09698,2.22127 -0.630859,2.67578 -0.411451,0.25698 -0.490234,0.59559 -0.490234,2.11329 0,1.79181 -0.0079,1.81243 -0.876953,2.34961 -0.786451,0.48595 -1.576898,0.50725 -1.285157,0.0351 0.06235,-0.10087 -0.0021,-0.34775 -0.144531,-0.54883 -0.211064,-0.29809 -0.232731,-0.28493 -0.117187,0.0742 0.07795,0.24235 0.04649,0.44141 -0.07031,0.44141 -0.11681,0 -0.212891,0.29632 -0.21289,0.6582 0,0.36193 -0.107026,0.73026 -0.238282,0.81836 -0.439313,0.29488 -0.610708,1.11894 -0.27539,1.32617 0.247022,0.15266 0.214507,0.27742 -0.140625,0.53711 -0.254604,0.18618 -0.4803,0.6461 -0.501953,1.02149 -0.03617,0.62691 -0.06788,0.64471 -0.38086,0.23632 -0.318675,-0.4158 -0.33191,-0.4103 -0.207031,0.0605 0.357139,1.34673 0.452455,2.64258 0.193359,2.64258 -0.150637,0 -0.273437,0.229 -0.273437,0.50781 0,1.23095 -1.289121,2.48728 -3.013672,2.9375 -1.259687,0.32886 -2.363242,0.19194 -2.109375,-0.26172 0.0967,-0.17283 0.02582,-0.1634 -0.177734,0.0254 -0.186463,0.17307 -0.410774,0.31446 -0.498047,0.31446 -0.402229,0 -2.259204,-1.9484 -2.332032,-2.44727 -0.04496,-0.30795 -0.151945,-0.63045 -0.238281,-0.7168 -0.08633,-0.0863 -0.09602,-0.31563 -0.02148,-0.50976 0.07451,-0.19415 0.01312,-0.35352 -0.136719,-0.35352 -0.186614,0 -0.197124,-0.19786 -0.0332,-0.6289 0.15964,-0.41989 0.152184,-0.62891 -0.02148,-0.62891 -0.143207,0 -0.173824,-0.1399 -0.06836,-0.31055 0.10546,-0.17064 0.207148,-0.50524 0.22461,-0.74218 0.02517,-0.34171 -0.06449,-0.37902 -0.429688,-0.1836 -0.475561,0.25455 -0.549101,0.16169 -0.472656,-0.58984 0.02551,-0.25077 -0.125657,-0.43945 -0.34961,-0.43945 -0.216396,0 -0.392578,-0.18607 -0.392578,-0.41211 0,-0.22609 -0.251497,-0.62819 -0.558594,-0.89453 -0.448559,-0.38905 -0.490059,-0.52673 -0.210937,-0.69922 0.290177,-0.17934 0.281727,-0.28078 -0.05273,-0.61524 -0.22026,-0.22027 -0.521572,-0.40039 -0.669922,-0.40039 -0.148354,0 -0.271485,-0.16633 -0.271485,-0.36914 0,-0.20281 -0.225026,-0.49048 -0.501953,-0.63867 -0.276926,-0.1482 -0.503906,-0.43391 -0.503906,-0.63672 0,-0.20281 -0.104255,-0.36914 -0.230469,-0.36914 -0.251735,0 -0.218152,0.64123 0.04687,0.90625 0.09144,0.0915 0.05842,0.36517 -0.07227,0.60938 -0.168514,0.31486 -0.12931,0.53473 0.134765,0.7539 0.414441,0.34398 0.502739,1.00195 0.134766,1.00195 -0.130292,0 -0.305049,-0.1135 -0.390625,-0.25195 -0.298904,-0.48364 -0.967796,-0.34166 -1.59961,0.24024 a 5.6692912,5.6692912 0 0 1 1.619141,3.96093 5.6692912,5.6692912 0 0 1 -5.667969,5.66993 5.6692912,5.6692912 0 0 1 -4.21289,-1.96485 c -0.09736,0.0794 -0.184202,0.15704 -0.275391,0.23047 -0.7947573,0.64 -1.8516385,1.51285 -2.3496092,1.93945 -0.8747895,0.74943 -1.2018137,0.84197 -2.4433594,0.69336 -0.4695243,-0.0562 -0.7272731,0.1929 -1.3554688,1.31446 -1.3726009,2.45058 -1.9535976,4.62065 -1.9609375,7.32617 -0.00629,2.3171 0.3123103,4.0039 0.7558594,4.0039 0.5745654,0 0.956297,0.79148 0.8183594,1.69727 -0.1452699,0.95399 -0.1432633,6.97103 0.00781,17.51758 0.065749,4.58996 0.1539161,5.79275 0.4355468,5.96679 0.2891566,0.1787 0.3012604,0.41225 0.0625,1.30079 -0.1808767,0.6731 -0.2029457,1.17369 -0.056641,1.32226 0.3484498,0.35384 0.2871035,1.21317 -0.1640625,2.29297 -0.2665058,0.63779 -0.3468237,1.29919 -0.2421875,1.98242 0.2969424,1.93892 0.4009642,11.53353 0.1289063,11.86133 -0.1568391,0.18898 -0.1953112,0.94334 -0.099609,1.91211 0.086975,0.88042 0.1862338,3.01726 0.2207031,4.74805 0.034469,1.73077 0.1511497,3.9688 0.2597656,4.97265 0.1411767,1.30478 0.115335,1.82422 -0.087891,1.82422 -0.1563553,0 -0.2950642,-0.31065 -0.3085937,-0.6914 -0.013516,-0.38078 -0.069082,-1.2031 -0.125,-1.82618 -0.055918,-0.62308 -0.1329581,-1.47328 -0.1699219,-1.88867 -0.036964,-0.41538 -0.1546183,-0.89325 -0.2617188,-1.0625 -0.1071003,-0.16925 -0.191895,-0.79247 -0.1894531,-1.38476 0.010874,-2.63136 -0.3890174,-15.67774 -0.4804687,-15.67774 -0.026782,0 -0.077791,-0.26559 -0.1132813,-0.58984 -0.03549,-0.32429 -0.1747493,-0.66474 -0.3085937,-0.75586 -0.3337342,-0.22723 -0.2078771,-1.70934 0.2519531,-2.98047 0.243631,-0.67348 0.3101933,-1.30793 0.1875,-1.76172 -0.1054915,-0.39018 -0.1010063,-1.10522 0.00781,-1.58984 0.1088243,-0.48463 0.1172451,-0.91091 0.019531,-0.94532 -0.097717,-0.0344 -0.1567189,-0.94047 -0.1308593,-2.01367 l 0.046875,-1.95117 -1.2363281,0.0879 c -1.01354349,0.0711 -1.17775706,0.14453 -0.9101563,0.41211 0.17961668,0.1796 0.54536715,0.3702 0.8125,0.42383 0.426946,0.0857 0.4338025,0.11805 0.064453,0.26367 -0.25160045,0.0992 -0.64565007,-0.0303 -0.98242185,-0.32226 C 0.16940593,202.53019 0.08646527,202.47549 0,202.41406 v 0.95508 c 0.00772021,0.04 0.02734375,0.0592 0.02734375,0.11133 0,0.0261 -0.02189473,0.0514 -0.02734375,0.0781 v 10.77344 c 0.00318959,2.8e-4 0.00457828,-0.002 0.0078125,-0.002 0.04513799,0.005 0.09456096,0.0171 0.14648438,0.0371 0.20769372,0.0797 0.37695312,0.18968 0.37695312,0.24414 0,0.0544 -0.1692594,0.0976 -0.37695312,0.0976 -0.05981844,0 -0.10374963,-0.0249 -0.15429688,-0.041 V 309.11511 485.6698 H 57.449219 V 309.11523 150.97461 c -0.263509,-0.35365 -0.488514,-0.63039 -0.583985,-0.67188 -0.106204,-0.0461 -0.193359,-0.22197 -0.193359,-0.39062 0,-0.16861 -0.453964,-1.00311 -1.007813,-1.85547 -0.55385,-0.85236 -1.005859,-1.66808 -1.005859,-1.8125 0,-0.14442 -0.103112,-0.26172 -0.228515,-0.26172 -0.125405,0 -0.579252,-0.53957 -1.007813,-1.19726 -0.824889,-1.26595 -1.591972,-2.15756 -4.820313,-5.60157 -0.932501,-0.9948 -1.731603,-1.94231 -2.013671,-2.36914 -0.01041,-7.7e-4 -0.02085,8.1e-4 -0.03125,0 -0.494665,-0.0385 -0.800115,0.42969 -1.359375,0.35547 -0.475518,-0.0632 -1.022839,0.10493 -1.607422,0.17383 0.0291,-0.5967 0.590459,-0.68431 0.691406,-1.12305 0.632617,0.421 0.827923,0.62293 1.021484,0.32032 0.273752,-0.42824 0.52218,0.34973 0.837891,-0.2793 0.0072,-0.0144 0.01936,-0.0234 0.02734,-0.0371 -0.03521,-0.02 -0.07069,-0.0606 -0.103516,-0.0606 -0.139011,0 -0.410798,-0.15884 -0.603515,-0.35156 -0.299377,-0.29938 -0.245216,-0.36514 0.380859,-0.45703 0.767162,-0.11258 1.374077,0.12047 1.492187,0.54297 0.288435,0.0928 0.545988,0.28075 0.685547,0.55078 0.190635,0.0382 0.34375,0.11842 0.34375,0.23242 0,0.14653 0.113471,0.1969 0.251953,0.11133 0.138482,-0.0856 0.251953,0.0747 0.251954,0.35547 0,0.35044 0.119732,0.46471 0.378906,0.36523 0.230173,-0.0883 0.376953,-0.001 0.376953,0.22461 0,0.20364 0.300814,0.66997 0.667969,1.03711 0.667661,0.66763 1.083118,0.73605 0.679687,0.11133 -0.117732,-0.18229 -0.214844,-0.6139 -0.214844,-0.95899 0,-0.38601 -0.144625,-0.63142 -0.376953,-0.63671 -0.232705,-0.005 -0.356659,-0.21294 -0.322265,-0.54297 0.05579,-0.53651 -0.529547,-0.96267 -0.958985,-0.69727 -0.125745,0.0777 -0.200409,-0.11985 -0.166015,-0.43945 0.05295,-0.49187 -0.05506,-0.58008 -0.695313,-0.58008 -0.614086,0 -0.761535,-0.111 -0.791016,-0.58789 -0.03175,-0.51384 0.04543,-0.56722 0.628907,-0.42383 0.366841,0.0901 0.922375,0.45758 1.234375,0.81641 0.312,0.35883 0.821757,0.77819 1.132812,0.93164 0.311055,0.15345 0.677786,0.53075 0.814453,0.83984 0.136668,0.30909 0.394994,0.5625 0.574219,0.5625 0.179225,0 0.389619,0.16401 0.466797,0.36524 0.111761,0.29128 0.236596,0.30625 0.611328,0.0723 0.457512,-0.28573 0.456971,-0.30633 -0.02539,-0.75586 -0.272918,-0.25428 -0.593129,-0.40289 -0.710937,-0.33008 -0.336529,0.20799 -2.429093,-1.91567 -2.349609,-2.38476 0.01487,-0.0878 -0.02369,-0.1999 -0.08398,-0.31445 -0.254298,0.15271 -0.487247,0.39095 -0.841797,0.16015 -0.01926,-0.0125 -0.0952,0.0606 -0.154296,0.10938 -0.258668,-0.35139 0.118629,-1.03943 -0.208985,-1.14649 -0.195931,-0.0641 -0.43737,0.1848 -0.505859,0.29297 -0.191282,0.30229 -0.244183,0.76498 -0.78125,0.65234 -0.129525,0.56122 -0.888033,0.47845 -1.00586,1.13282 -0.522912,-0.76008 0.258652,-1.28401 0.0098,-1.79102 -0.129232,-0.26328 0.239666,-0.38461 0.517578,-0.42578 -0.01139,-0.0716 -0.02994,-0.13662 -0.01953,-0.23047 0.03439,-0.31154 0.07227,-0.66963 0.08398,-0.79492 0.01172,-0.12529 0.236828,-0.0333 0.5,0.20508 0.334753,0.30297 0.531122,0.34773 0.654297,0.14844 0.157455,-0.25478 -0.505937,-0.97764 -0.916016,-0.99805 -0.08886,-0.005 -0.233421,-0.2925 -0.320312,-0.63867 -0.09763,-0.38892 -0.335885,-0.62891 -0.625,-0.62891 -0.47046,0 -1.13102,-0.57406 -0.912109,-0.79297 0.06455,-0.0645 -0.299869,-0.26846 -0.810547,-0.45312 -0.510671,-0.18467 -1.086466,-0.49272 -1.279297,-0.68555 -0.132454,-0.13245 -0.241381,-0.20244 -0.349609,-0.21289 z m 3.99414,5.08203 c 0.0585,0.36776 0.365145,0.45083 0.728516,0.11133 0.38431,-0.35906 1.46172,-0.62731 1.269531,-0.31641 -0.09097,0.14722 0.124475,0.45817 0.480469,0.69141 0.220646,0.14456 0.393865,0.34253 0.492187,0.5293 0.06255,-0.0376 0.124039,-0.0757 0.191407,-0.0937 0.684444,-0.18329 -0.961391,-2.25678 -1.160157,-1.85938 -0.144982,0.28993 -0.555363,0.0924 -0.597656,0.25195 -0.19118,0.72145 -0.738057,0.63496 -1.263672,0.65235 -0.03832,0.001 -0.09351,0.0262 -0.140625,0.0332 z m 1.251953,3.64258 c -0.0546,-0.0109 -0.09655,-0.0352 -0.158203,-0.0352 -0.276911,0 -0.503906,-0.16247 -0.503906,-0.36328 0,-0.0537 -0.0098,-0.1035 -0.02344,-0.15234 -0.442444,-0.14235 -0.94311,-0.0557 -1.166015,0.32617 0.113876,0.0647 0.230197,0.19382 0.289062,0.37891 0.01192,0.0375 0.07922,0.13279 0.13086,0.21093 0.498593,0.0368 1.008529,0.0256 1.453125,-0.33398 -0.0054,-0.0117 -0.01561,-0.0199 -0.02148,-0.0312 z m -4.226562,-7.01563 c 0.48559,0.0215 1.802734,0.75555 1.802734,1.06836 0,0.48076 -0.355388,0.47849 -0.755859,-0.004 -0.172385,-0.20769 -0.463933,-0.37696 -0.646485,-0.37696 -0.35142,0 -0.740853,-0.45838 -0.550781,-0.64843 0.0291,-0.0291 0.08104,-0.0422 0.150391,-0.0391 z m 10.148437,0.0234 c -0.227425,0.006 -0.344443,0.17392 -0.189453,0.47461 0.232074,0.45009 0.0012,0.83815 -0.322265,1.00195 -0.358455,0.18146 -0.735642,0.61382 -1.25,0.23438 -0.328808,-0.24258 -0.715209,-0.39719 -1.142579,-0.44727 -0.03129,0.26529 0.252067,0.39459 0.185547,0.60352 -0.239765,0.75228 0.279371,1.02295 0.796875,1.30078 3.45e-4,0.005 0.002,0.0108 0.002,0.0176 0.113927,-0.39849 0.767327,-0.26048 0.771485,-0.77149 0.0021,-0.24763 0.487267,0.73146 0.964843,-0.35742 0.01149,-0.0261 0.114988,-0.0462 0.142579,-0.0254 0.283256,0.21422 0.496902,-0.31448 0.777343,-0.0684 0.158181,-0.21562 0.618878,-0.26878 0.564454,-0.5039 -0.237423,-1.02691 -0.921739,-1.46853 -1.300782,-1.45899 z m -41.599609,1.65625 c -0.826394,0.73738 -1.865817,1.72437 -2.4628908,2.38281 -0.364369,0.40182 -1.1997251,1.27284 -1.8574218,1.9375 -0.6576975,0.66468 -1.1953125,1.32134 -1.1953125,1.45703 0,0.13573 -0.2003035,0.30894 -0.4453125,0.38672 -0.2450079,0.0777 -0.6604602,0.53997 -0.921875,1.02539 -0.2614148,0.48542 -0.5708411,0.88086 -0.6875,0.88086 -0.1166589,0 -0.2109375,0.227 -0.2109375,0.50391 0,0.27693 -0.085607,0.49086 -0.1894531,0.47461 -0.5378514,-0.0849 -0.7878523,0.0684 -0.6582032,0.40625 0.081846,0.21328 0.00644,0.37891 -0.1738281,0.37891 -0.3440175,0 -1.7480469,1.46069 -1.7480469,1.81835 0,0.2052 -0.2190021,0.50846 -0.94531248,1.31836 -0.17308416,0.19308 -0.31445312,0.45556 -0.31445312,0.58399 0,0.091 -0.23594432,0.46322 -0.53125,0.88867 v 32.68555 l 0.30273438,-0.0117 c 0.63394475,-0.0246 0.6480257,-0.0587 0.47070312,-1.2207 -0.17619515,-1.1546 -0.13214672,-2.54274 0.15429688,-4.7793 0.0750527,-0.58601 0.63284832,-2.06087 1.23828122,-3.2793 0.9010041,-1.81326 1.2622112,-2.29354 1.9941406,-2.64258 0.751804,-0.35852 0.9447634,-0.3717 1.2128907,-0.084 0.3338343,0.35822 0.8307289,0.0507 2.8730469,-1.7832 0.4598409,-0.41292 1.0270606,-0.88048 1.6113281,-1.34766 a 5.6692912,5.6692912 0 0 1 -0.8808594,-2.8418 5.6692912,5.6692912 0 0 1 5.6699215,-5.66992 5.6692912,5.6692912 0 0 1 3.421875,1.15235 c 0.538231,-0.79237 0.543468,-0.93937 0.216797,-2.17774 -0.416612,-1.5794 -1.507262,-2.84762 -3.066406,-3.5625 -1.225167,-0.56175 -1.414697,-0.91929 -0.808594,-1.52539 0.372197,-0.37221 0.559263,-0.39636 1.210938,-0.15039 0.424119,0.1601 0.771484,0.41784 0.771484,0.57226 0,0.39907 1.366215,1.56726 1.949219,1.66602 0.269197,0.0456 0.686265,-0.0805 0.925781,-0.2793 0.351054,-0.29125 0.474774,-0.29714 0.636719,-0.0352 0.159522,0.2581 0.33642,0.23456 0.861328,-0.10938 0.627707,-0.41129 0.662109,-0.40935 0.662109,0.0137 0,0.42182 0.02547,0.42175 0.478516,0.0117 0.340906,-0.30848 0.528525,-0.34915 0.65625,-0.14258 0.129101,0.20875 0.25604,0.21306 0.453125,0.0156 0.385246,-0.38523 1.179689,-0.3403 1.179687,0.0664 0,0.37459 -1.919043,1.27373 -2.517578,1.17968 -0.207692,-0.0325 -0.460774,-0.19037 -0.5625,-0.34961 -0.120873,-0.1892 -0.184982,-0.14334 -0.1875,0.13086 -0.0021,0.23078 -0.124385,0.46075 -0.271484,0.50977 -0.487051,0.16237 0.205217,1.41692 1.011719,1.83398 0.682368,0.35286 0.765625,0.35451 0.765625,0.0117 0,-0.22957 0.372094,0.0261 0.921875,0.63477 0.679408,0.75203 0.975967,0.93445 1.128906,0.69336 0.159575,-0.25168 0.207975,-0.25382 0.210937,-0.0117 0.0056,0.45319 0.333743,0.3876 0.953126,-0.18945 0.965179,-0.89921 1.113613,-0.75491 1.164062,1.13281 0.02226,0.83341 0.106669,0.99376 0.492188,0.92773 0.279612,-0.0479 0.400416,0.0283 0.300781,0.18946 -0.0913,0.1477 -0.336854,0.26757 -0.544922,0.26757 -0.236886,0 -0.06856,0.28294 0.449219,0.75586 0.454791,0.4154 0.963037,0.75391 1.130859,0.75391 0.684612,0 1.597656,-0.51595 1.597656,-0.9043 0,-0.33452 -0.07146,-0.35673 -0.367187,-0.11133 -0.21083,0.175 -0.504088,0.21645 -0.691406,0.0977 -0.179143,-0.11365 -0.439663,-0.20893 -0.578126,-0.21094 -0.138458,-0.002 -0.280021,-0.45591 -0.314453,-1.00976 -0.342546,-5.51106 -0.392373,-5.91602 -0.734375,-5.91602 -0.193175,0 -0.422047,-0.19911 -0.507812,-0.4414 -0.252677,-0.7139 -1.499725,-1.754 -2.525391,-2.10743 -1.110497,-0.38267 -2.065642,-0.45555 -2.242187,-0.16992 -0.06824,0.1104 -0.372415,0.19424 -0.675782,0.18555 l -0.552734,-0.0176 0.566406,-0.22656 c 0.57854,-0.23256 0.774808,-1.09246 0.314454,-1.37695 -0.44036,-0.27217 -0.269829,-0.62854 0.316406,-0.66407 l 0.566406,-0.0332 -0.585938,-0.11328 c -0.368155,-0.0702 -0.536274,-0.23841 -0.453124,-0.45508 0.02549,-0.0664 0.01758,-0.13535 -0.0039,-0.20117 a 15.11811,15.11811 0 0 1 -2.236328,-1.16016 c -0.02733,0.42031 -0.139196,0.87744 -0.376953,1.56446 -0.288722,0.83427 -0.506825,1.75454 -0.484375,2.04492 0.02245,0.29038 0.02902,0.72644 0.01367,0.96875 -0.03488,0.55144 -0.7019,0.55541 -1.582031,0.01 -0.749472,-0.46495 -1.168488,-1.2362 -1.025391,-1.88672 0.101446,-0.46119 0.913464,-0.8292 1.300781,-0.58984 0.361467,0.22341 0.515149,-0.18909 0.66211,-1.77734 0.0325,-0.35128 0.112953,-0.7431 0.220703,-1.13282 A 15.11811,15.11811 0 0 1 12.341808,131.1134 Z m 32.763672,0.0508 c 0.0887,-0.003 0.188277,0.001 0.298828,0.0117 0.537502,0.052 0.843483,0.22938 0.898437,0.51953 0.09449,0.49882 -0.558003,0.58469 -1.273437,0.16797 -0.618346,-0.36019 -0.544617,-0.68158 0.07617,-0.69922 z m 14.841797,2.71289 c -0.01058,8.2e-4 -0.02067,9.6e-4 -0.03125,0.002 0.0074,0.005 0.01414,0.009 0.02148,0.0137 0.0029,-0.006 0.0068,-0.0101 0.0098,-0.0156 z m -0.0098,0.0156 c -0.0041,0.008 -0.0075,0.0154 -0.01172,0.0234 0,0 0.02807,-0.0101 0.0293,-0.0117 -0.0059,-0.004 -0.01149,-0.008 -0.01758,-0.0117 z m -15.972656,0.33594 c 0.195855,-0.0352 0.884857,0.16778 1.378906,0.44726 0.403544,0.22832 0.183984,0.24487 -0.630859,0.0488 -0.276926,-0.0666 -0.615463,-0.23643 -0.753907,-0.37695 -0.06962,-0.0707 -0.05983,-0.1075 0.0059,-0.11914 z m -31.720703,3.94921 c 0.04457,0.007 0.08013,0.0214 0.105468,0.0449 0.05707,0.0452 0.08987,0.0984 0.0957,0.16015 0.0038,0.0554 0.01161,0.13406 0.02344,0.23633 0.03428,0.45583 0.112138,0.87215 0.234375,1.25 0.120166,0.37145 0.18413,0.63715 0.193359,0.79688 0.0071,0.15333 0.0092,0.28743 0.0039,0.40234 -0.0053,0.1149 -0.01367,0.23068 -0.02539,0.34766 -0.02789,0.26369 -0.03344,0.48188 -0.01367,0.65234 0.0098,0.0959 0.0026,0.18318 -0.02148,0.26172 -0.02619,0.0721 -0.04687,0.14953 -0.0625,0.23242 -0.03824,0.23169 9.03e-4,0.50284 0.115234,0.8125 0.224704,0.58523 0.291283,0.92613 0.203125,1.02539 -0.03674,0.0614 -0.07321,0.0923 -0.109375,0.0898 -0.02975,-0.005 -0.04929,0.0159 -0.0625,0.0625 -0.01523,0.0403 -0.01433,0.1241 0.0059,0.25196 0.0181,0.12147 0.0252,0.26048 0.01953,0.41797 -0.01,0.40647 -0.137041,0.68499 -0.378907,0.83398 -0.147668,0.0902 -0.264432,0.11881 -0.353515,0.084 -0.08062,-0.0306 -0.151866,-0.0867 -0.212891,-0.16601 -0.05669,-0.0878 -0.109862,-0.17579 -0.160156,-0.26563 -0.05235,-0.0963 -0.113514,-0.15406 -0.183594,-0.17382 -0.296662,-0.15164 -0.480013,-0.41918 -0.546875,-0.80078 -0.02449,-0.1194 -0.0556,-0.19783 -0.0957,-0.23438 -0.04219,-0.0429 -0.07804,-0.0877 -0.107422,-0.13477 -0.02298,-0.0491 -0.05059,-0.10081 -0.08203,-0.15429 -0.0776,-0.13055 -0.142502,-0.20841 -0.193359,-0.23438 -0.05086,-0.0261 -0.0963,-0.0487 -0.138672,-0.0703 -0.03805,-0.0302 -0.07726,-0.075 -0.117188,-0.13281 -0.109428,-0.14147 -0.205807,-0.31959 -0.289062,-0.53321 -0.08325,-0.21361 -0.152595,-0.37198 -0.2070315,-0.47461 -0.0565,-0.10906 -0.1132214,-0.20716 -0.1699219,-0.29492 -0.1427716,-0.22265 -0.2528548,-0.42064 -0.3300781,-0.59375 -0.070817,-0.17518 -0.1448622,-0.31653 -0.2226563,-0.42578 -0.073463,-0.11773 -0.1487723,-0.23058 -0.2265624,-0.33984 -0.210206,-0.29987 -0.3525846,-0.53447 -0.4277344,-0.70117 -0.070817,-0.17518 -0.1281052,-0.30512 -0.1699219,-0.39063 -0.035414,-0.0876 -0.066632,-0.16262 -0.09375,-0.22461 -0.1126337,-0.26067 -0.015874,-0.42304 0.2890625,-0.48633 0.066134,-0.0144 0.1363788,-0.0273 0.2109375,-0.0371 0.080961,-0.0121 0.1612876,-0.0265 0.2402344,-0.0449 0.076849,-0.0249 0.1399744,-0.056 0.1914062,-0.0937 0.051432,-0.0378 0.1047229,-0.072 0.1582031,-0.10351 0.115476,-0.0585 0.2393235,-0.0671 0.3730469,-0.0254 0.08702,0.0283 0.1532635,0.0911 0.1992188,0.18945 0.050279,0.0898 0.097115,0.20146 0.1406251,0.33594 0.04784,0.12601 0.09676,0.26623 0.146484,0.41992 0.05612,0.15163 0.13372,0.30308 0.232422,0.45508 0.105101,0.14993 0.175523,0.26981 0.210938,0.35742 0.03333,0.0812 0.05966,0.16132 0.07813,0.24023 0.05989,0.20701 0.12943,0.37531 0.207031,0.50586 0.07553,0.12412 0.123505,0.2106 0.146484,0.25977 0.0209,0.0427 0.04344,0.0895 0.06641,0.13867 0.02729,0.0407 0.05636,0.0738 0.08594,0.0996 0.02748,0.0193 0.05761,0.0122 0.08984,-0.0195 0.03012,-0.038 0.03088,-0.085 0.0059,-0.14063 -0.0646,-0.15594 -0.0616,-0.31518 0.0059,-0.47851 0.08458,-0.17594 0.06541,-0.34337 -0.05664,-0.50196 -0.11565,-0.16066 -0.190262,-0.33388 -0.222656,-0.52148 -0.03447,-0.19404 -0.05871,-0.36635 -0.07227,-0.51758 -0.01357,-0.15125 -0.04052,-0.27852 -0.08008,-0.3789 -0.04162,-0.10681 -0.07983,-0.20341 -0.115234,-0.29102 -0.03749,-0.094 -0.06706,-0.17564 -0.08984,-0.24609 -0.02279,-0.0704 -0.01711,-0.15446 0.01563,-0.25 0.03277,-0.0955 0.123878,-0.17378 0.273437,-0.23633 0.1475,-0.0689 0.314621,-0.0947 0.503906,-0.0781 0.02374,-0.0359 0.07046,-0.0586 0.138672,-0.0664 0.06815,-0.008 0.125319,0.006 0.171875,0.041 0.06668,-0.0782 0.164959,-0.12491 0.294922,-0.13867 0.06394,-0.01 0.117536,-0.0108 0.16211,-0.004 z m 32.662109,0.5 c 0.108684,0.0206 0.19602,0.0949 0.214844,0.24024 0.07056,0.54574 0.654141,0.50853 0.863281,0.87109 0.694613,-0.007 0.528723,0.4435 0.404297,0.86914 -0.805837,-0.9229 -1.041702,-0.6072 -1.732422,-1.47265 -0.09585,-0.12012 -0.349539,-0.25178 -0.0957,-0.42383 0.106998,-0.0726 0.237019,-0.10457 0.345703,-0.084 z m 1.726562,0.40039 c 0.399349,-0.0671 0.638462,0.18772 0.94336,0.14649 -0.424018,0.12801 -0.425538,0.13441 -0.94336,-0.14649 z m -40.4316401,0.8125 c 0.065993,-0.0303 0.1383467,-0.029 0.2167969,0.006 0.1587816,0.0972 0.2788757,0.15758 0.3574218,0.18164 0.135806,0.048 0.3132738,0.0439 0.5351563,-0.0137 0.1898305,-0.0473 0.3884082,-0.005 0.59375,0.12696 0.038048,0.0302 0.075229,0.0597 0.1132812,0.0898 0.035981,0.0238 0.068389,0.0569 0.095703,0.0977 0.069502,0.0836 0.126672,0.2169 0.171875,0.40039 0.045211,0.18346 0.1025813,0.3267 0.171875,0.43164 0.067242,0.0985 0.1340408,0.19496 0.1992188,0.28711 0.1156498,0.16066 0.1576618,0.41148 0.1269531,0.7539 -0.00699,0.30645 -0.072957,0.50866 -0.1972656,0.60547 l -0.1542969,0.11328 c -0.1478627,0.1115 -0.2843342,0.18046 -0.4101562,0.20703 -0.1214778,0.0181 -0.2139696,0.009 -0.2753906,-0.0273 -0.1819465,-0.12506 -0.2748439,-0.30841 -0.28125,-0.54687 -0.0017,-0.049 -0.02449,-0.11902 -0.068359,-0.21094 -0.04388,-0.0919 -0.118296,-0.13435 -0.2226563,-0.12891 -0.055344,0.004 -0.097348,-0.007 -0.1269531,-0.0332 -0.023168,-0.028 -0.045419,-0.0495 -0.064453,-0.0644 -0.014702,-0.0234 -0.028081,-0.0367 -0.042969,-0.0391 -0.010507,-0.0106 -0.035376,0.0117 -0.074219,0.0664 -0.038801,0.055 -0.062071,0.0872 -0.066406,0.0957 -0.00639,0.002 -0.029746,0.002 -0.072266,0.002 -0.036132,-0.002 -0.067932,0.0113 -0.09375,0.041 -0.025814,0.0295 -0.045115,0.0751 -0.060547,0.13672 -0.05105,0.2358 0.030615,0.56668 0.2460938,0.99219 0.069124,0.1262 0.1343554,0.24261 0.1972656,0.34961 0.1444649,0.27159 0.2292336,0.45656 0.2539062,0.55468 0.031068,0.096 0.046174,0.20489 0.042969,0.32618 0.00113,0.11282 0.0042,0.22519 0.011719,0.33593 0.00809,0.28744 0.08995,0.50747 0.2460937,0.66211 0.1898608,0.19325 0.3071077,0.30399 0.3515625,0.33203 0.076282,0.039 0.1551439,0.0409 0.2363281,0.008 0.079143,-0.0396 0.1303394,-0.10051 0.1523438,-0.18555 0.019956,-0.0914 0.035378,-0.18559 0.046875,-0.28125 0.00941,-0.10209 0.024943,-0.19963 0.044922,-0.29102 0.019956,-0.0914 0.055868,-0.15214 0.109375,-0.18359 0.059932,-0.0333 0.1400655,-0.0597 0.2402343,-0.0781 0.098158,-0.0246 0.1632924,-0.0405 0.1953125,-0.0508 0.038426,-0.0125 0.090513,-0.005 0.15625,0.0234 0.063666,0.0219 0.1203165,0.1067 0.1679688,0.25391 0.05198,0.13882 0.095449,0.25223 0.1308594,0.33984 0.033335,0.0812 0.034318,0.16496 0.00586,0.25195 -0.030501,0.0806 -0.044355,0.15297 -0.044922,0.2168 0.00378,0.0554 0.00936,0.10882 0.019531,0.16211 0.037115,0.13656 0.043629,0.24373 0.019531,0.32227 -0.017726,0.0765 -0.038583,0.14391 -0.0625,0.20117 -0.019578,0.0488 -0.1060523,0.0987 -0.2597657,0.14844 -0.1472957,0.0477 -0.2578837,0.16155 -0.3339843,0.34179 -0.076101,0.18025 -0.1720266,0.27698 -0.2871094,0.29297 -0.1129814,0.0223 -0.2108094,-0.0162 -0.2929688,-0.11719 -0.077979,-0.088 -0.195793,-0.10972 -0.3515625,-0.0664 -0.046923,0.008 -0.090274,0.0121 -0.1328125,0.0117 -0.044632,-0.007 -0.09512,-0.006 -0.1484375,0.004 -0.055344,0.004 -0.1122029,-4e-4 -0.1738281,-0.0156 -0.150875,-0.0291 -0.2927888,-0.10761 -0.4257812,-0.23438 -0.082307,-0.0795 -0.1604748,-0.14397 -0.2324219,-0.1914 -0.065548,-0.0496 -0.1231561,-0.0973 -0.1738281,-0.14453 -0.124698,-0.10118 -0.1967814,-0.21251 -0.2148438,-0.33399 -0.06102,-0.31982 -0.1675478,-0.50776 -0.3203125,-0.56445 -0.08496,-0.0219 -0.1323365,-0.0465 -0.140625,-0.0723 -0.00828,-0.0257 -0.037305,-0.0754 -0.089844,-0.15039 -0.075727,-0.10284 -0.11957,-0.23622 -0.1308594,-0.40234 -0.00488,-0.16819 -0.03035,-0.29869 -0.074219,-0.39063 -0.045853,-0.0983 -0.095841,-0.20008 -0.1503906,-0.30273 -0.1295887,-0.26933 -0.1924049,-0.45274 -0.1894531,-0.55274 0.00302,-0.10004 -0.032278,-0.23036 -0.1054688,-0.39062 -0.066576,-0.16241 -0.115291,-0.29597 -0.1484375,-0.39844 -0.035225,-0.10885 -0.090897,-0.2454 -0.1660156,-0.41211 -0.068648,-0.16883 -0.1281725,-0.35596 -0.1796875,-0.55859 -0.1167761,-0.51403 -0.058731,-0.91038 0.1757813,-1.19141 0.3569422,-0.40553 0.5987855,-0.62188 0.7246093,-0.64844 0.03843,-0.0125 0.085281,-0.0212 0.140625,-0.0254 0.059732,-0.0121 0.1131087,-0.0329 0.1601563,-0.0625 0.047123,-0.0291 0.08513,-0.0614 0.1152344,-0.0996 0.030123,-0.038 0.05982,-0.0806 0.087891,-0.125 0.05406,-0.0953 0.113694,-0.15723 0.1796875,-0.1875 z m 47.0742191,0.16602 c -0.03874,-0.0102 -0.07001,-0.008 -0.08789,0.01 -0.07151,0.0715 0.08863,0.29617 0.355469,0.49804 0.680764,0.51504 0.767777,0.46843 0.232422,-0.12304 -0.188523,-0.20833 -0.383746,-0.35444 -0.5,-0.38477 z m -9.871094,0.27734 c 0.383225,0.28184 1.043377,-0.0926 1.259765,0.54688 -0.396966,-0.26033 -0.97229,-0.0454 -1.259765,-0.54688 z M 55.5,140.52148 c -0.312302,-0.0238 -0.589844,0.20583 -0.589844,0.62696 0,0.35376 0.184745,0.46875 0.753906,0.46875 0.847166,0 0.893707,-0.0909 0.382813,-0.76563 -0.159798,-0.21101 -0.359509,-0.31575 -0.546875,-0.33008 z m 1.675781,1.93555 c -0.138482,0 -0.251953,0.11351 -0.251953,0.25195 0,0.13849 0.113471,0.25196 0.251953,0.25196 0.138482,0 0.251953,-0.1134 0.251953,-0.25196 0,-0.13848 -0.113471,-0.25195 -0.251953,-0.25195 z m -3.570312,0.29102 c -0.08806,-0.0144 -0.121706,0.0871 -0.16211,0.29687 -0.04838,0.25119 0.120525,0.61576 0.375,0.8086 0.964335,0.73073 1.173577,0.19699 0.275391,-0.70118 -0.25886,-0.25886 -0.400218,-0.38985 -0.488281,-0.40429 z m 2.630859,0.97851 c -0.08428,-0.0166 -0.114115,0.19011 -0.191406,0.91211 -0.03916,0.36594 0.05313,0.5028 0.279297,0.41602 0.336529,-0.12911 0.346848,-0.9184 0.01758,-1.24805 -0.0443,-0.0443 -0.07731,-0.0746 -0.105469,-0.0801 z m -35.929687,2.10547 c 0.08644,0.008 0.187889,0.0272 0.302734,0.0547 0.380772,0.0914 0.732211,0.19911 0.78125,0.24023 0.04909,0.0411 0.04786,0.19641 -0.002,0.34571 -0.05893,0.1768 -0.276484,0.14119 -0.623047,-0.10157 -0.29263,-0.20504 -0.602033,-0.30031 -0.689453,-0.21289 -0.08742,0.0874 -0.160156,0.0257 -0.160156,-0.13867 0,-0.14857 0.131305,-0.21218 0.390625,-0.1875 z m 18.058593,0.49609 c 0.02646,-0.0265 0.06139,0.009 0.101563,0.10938 0.07257,0.18176 0.06231,0.39878 -0.02148,0.48242 -0.08364,0.0837 -0.14182,-0.0647 -0.130859,-0.33008 0.006,-0.1466 0.02421,-0.23518 0.05078,-0.26172 z m -18.099609,0.24415 c 0.09028,-0.0151 0.154297,0.0404 0.154297,0.15039 0,0.14664 0.16926,0.26562 0.376953,0.26562 0.207693,0 0.378906,0.0996 0.378906,0.2207 0,0.12114 -0.284704,0.22071 -0.630859,0.22071 -0.625678,0 -0.863766,-0.51747 -0.376953,-0.81836 0.03462,-0.0216 0.06756,-0.034 0.09766,-0.0391 z m 19.261719,0.40234 c 0.0525,-0.005 0.113747,0.0182 0.177734,0.082 0.08353,0.0837 0.105198,0.29579 0.04687,0.4707 -0.08527,0.25584 -0.146136,0.25472 -0.304687,-0.002 -0.157493,-0.25482 -0.07745,-0.53446 0.08008,-0.55078 z m -18.966797,0.51758 c 0.06106,0 0.111328,0.11351 0.111328,0.25195 0,0.13848 -0.120944,0.25195 -0.267578,0.25195 -0.146619,0 -0.194951,-0.11347 -0.109375,-0.25195 0.08558,-0.13848 0.204567,-0.25195 0.265625,-0.25195 z m -1.205078,0.25195 c 0.140602,0 0.320689,0.16934 0.40039,0.37695 0.07972,0.20769 0.104574,0.37891 0.05664,0.37891 -0.04793,0 -0.228022,-0.17121 -0.400391,-0.37891 -0.180642,-0.21766 -0.203994,-0.37695 -0.05664,-0.37695 z m 17.246093,0.28125 c -0.01999,0.0223 0.004,0.11625 0.06836,0.28516 0.193723,0.50883 0.34649,0.53613 0.86914,0.16015 0.326589,-0.23482 0.321087,-0.25295 -0.0332,-0.14062 -0.225437,0.0715 -0.543494,-0.004 -0.707031,-0.16602 -0.114002,-0.11308 -0.177287,-0.16112 -0.197266,-0.13867 z m -4.292968,2.18359 c 0.698483,-0.003 1.188957,0.62953 0.539062,1.34766 -0.23249,0.25693 -0.545646,0.45048 -0.697265,0.42969 -1.369022,-0.18732 -1.660157,-0.29507 -1.660157,-0.60938 0,-0.1985 0.10385,-0.35937 0.232422,-0.35937 0.128576,0 0.394929,-0.16243 0.591797,-0.35938 0.314967,-0.31494 0.676649,-0.44784 0.994141,-0.44922 z m -0.240235,0.33204 c -0.02124,0.0212 0.0059,0.11746 0.07422,0.29687 0.09454,0.24828 0.23499,0.38804 0.3125,0.31055 0.07751,-0.0775 1.75e-4,-0.28041 -0.171875,-0.45117 -0.12432,-0.12341 -0.193613,-0.1775 -0.214845,-0.15625 z m 4.951172,0.47656 c -0.146532,0 -0.194943,0.11152 -0.109375,0.25 0.08557,0.13848 0.204586,0.25195 0.265625,0.25195 0.06104,0 0.111328,-0.11347 0.111328,-0.25195 0,-0.13848 -0.120932,-0.25 -0.267578,-0.25 z m -11.486328,0.24219 c 0.315606,-0.0344 0.767944,0.21347 0.935547,0.65429 0.135035,0.3552 0.244141,0.67705 0.244141,0.71485 0,0.0378 -0.424125,0.0814 -0.94336,0.0977 -0.88005,0.0276 -0.910622,0.006 -0.455078,-0.33594 0.268774,-0.20155 0.35438,-0.36718 0.189453,-0.36718 -0.164927,0 -0.300781,-0.16927 -0.300781,-0.37696 0,-0.24317 0.140716,-0.36605 0.330078,-0.38671 z m -0.802734,0.0156 c 0.0384,1.3e-4 0.07097,0.0125 0.09766,0.0391 0.06446,0.0644 -0.03364,0.32301 -0.21875,0.57617 -0.206203,0.282 -0.399088,0.35932 -0.498047,0.19922 -0.144064,-0.23308 0.35037,-0.81534 0.619141,-0.81445 z m -2.644531,1 c 0.05308,0 0.0957,0.22696 0.0957,0.50391 0,0.27692 -0.103024,0.5039 -0.228516,0.5039 -0.125503,0 -0.168126,-0.22697 -0.0957,-0.5039 0.07242,-0.27693 0.175436,-0.50391 0.228516,-0.50391 z m -2.826172,0.008 c -0.18906,0.0246 -0.34961,0.14059 -0.34961,0.32813 0,0.18463 0.07296,0.41086 0.164063,0.50195 0.227663,0.22768 0.870545,-0.33801 0.699219,-0.61523 -0.10726,-0.17356 -0.324612,-0.23945 -0.513672,-0.21485 z m 25.716796,2.29883 a 5.6692912,5.6692912 0 0 1 5.669922,5.66992 5.6692912,5.6692912 0 0 1 -5.669922,5.66993 5.6692912,5.6692912 0 0 1 -5.669921,-5.66993 5.6692912,5.6692912 0 0 1 5.669921,-5.66992 z m -14.472656,0.46289 c -0.146634,0 -0.265625,0.11344 -0.265625,0.25196 0,0.13847 0.05028,0.25195 0.111328,0.25195 0.06106,0 0.180049,-0.11348 0.265625,-0.25195 0.08558,-0.13849 0.0353,-0.25196 -0.111328,-0.25196 z m -5.507812,2.81055 c -0.09984,-0.005 -0.228999,0.0563 -0.363282,0.20117 -0.246496,0.26581 -0.245887,0.2973 0.0039,0.15625 0.18,-0.10159 0.322608,-0.0363 0.333984,0.15234 0.01633,0.27077 0.04375,0.27137 0.152344,0 0.122128,-0.30519 0.03944,-0.50076 -0.126953,-0.50976 z m 5.6875,2 c -0.325043,-0.007 -0.82115,0.42766 -0.75,0.82031 0.04944,0.27288 -0.05207,0.35459 -0.314453,0.25391 -0.213256,-0.0818 -0.388672,-0.0223 -0.388672,0.13086 0,0.47632 -0.437463,0.30385 -0.576172,-0.22657 -0.08558,-0.32723 -0.0074,-0.50195 0.222656,-0.50195 0.194729,0 0.353516,-0.12708 0.353516,-0.28125 0,-0.60079 -3.348202,0.49335 -3.478516,1.13672 -0.04703,0.23221 0.0856,0.40234 0.314453,0.40234 0.217845,0 0.40348,0.0856 0.414063,0.18946 0.06739,0.66059 0.231827,1.14056 0.496093,1.45898 0.349089,0.42062 0.996094,0.4892 0.996094,0.10547 0,-0.14283 -0.171213,-0.32458 -0.378906,-0.4043 -0.207693,-0.0797 -0.376953,-0.35898 -0.376953,-0.62109 0,-0.34696 0.189309,-0.48293 0.693359,-0.49805 0.380773,-0.0117 0.918387,-0.0603 1.195313,-0.10937 0.276926,-0.049 0.979849,-0.16636 1.5625,-0.26172 0.582648,-0.0954 1.036612,-0.30138 1.007812,-0.45703 -0.0288,-0.15561 0.08864,-0.25548 0.261719,-0.22071 0.17308,0.0348 0.314453,-0.1122 0.314453,-0.32812 0,-0.21574 -0.11349,-0.32385 -0.251953,-0.23828 -0.138463,0.0856 -0.251953,0.0231 -0.251953,-0.14063 0,-0.22684 -0.08438,-0.22871 -0.353516,-0.006 -0.271245,0.22511 -0.380081,0.21872 -0.470703,-0.0312 -0.04293,-0.1183 -0.131887,-0.1696 -0.240234,-0.17187 z m 3.597656,0.47656 c 0.146619,0 0.196912,0.11347 0.111328,0.25195 -0.08558,0.13849 -0.20652,0.25 -0.267578,0.25 -0.06106,0 -0.111328,-0.11148 -0.111328,-0.25 0,-0.13848 0.120936,-0.25195 0.267578,-0.25195 z m -9.945312,0.75391 c 0.06106,0 0.111328,0.11347 0.111328,0.25195 0,0.13848 -0.118991,0.25195 -0.265625,0.25195 -0.14662,0 -0.196904,-0.11351 -0.111329,-0.25195 0.08557,-0.13848 0.204567,-0.25195 0.265626,-0.25195 z m 4.109374,2.01562 c -0.138461,0 -0.181282,0.11152 -0.0957,0.25 0.08558,0.13848 0.269743,0.25196 0.408203,0.25196 0.138463,0 0.181284,-0.11351 0.0957,-0.25196 -0.08557,-0.13848 -0.269734,-0.25 -0.408204,-0.25 z m 24.591797,1.76172 c 0.215736,0 0.321896,0.11347 0.236329,0.25195 -0.08557,0.13849 -0.262298,0.25196 -0.392579,0.25196 -0.130318,0 -0.236328,-0.11344 -0.236328,-0.25196 0,-0.13848 0.17673,-0.25195 0.392578,-0.25195 z M 0,178.35156 v 4.15821 c 0.0485441,0.0914 0.10834097,0.17681 0.18164062,0.25781 0.23587843,0.26063 0.30917142,0.47265 0.1640625,0.47265 C 0.2259578,183.24024 0.09210304,183.11403 0,182.95703 v 2.44727 c 0.14235711,-0.0284 0.22216122,-0.008 0.15234375,0.10547 -0.0224748,0.0363 -0.09856372,0.0626 -0.15234375,0.0937 v 2.98046 c 0.12106099,-0.1463 0.2662862,-0.0451 0.44335938,0.33008 0.17196017,0.36435 0.18609663,0.58133 0.0351562,0.54883 -0.13689599,-0.0295 -0.28631908,0.34156 -0.33203124,0.82617 -0.0457123,0.48457 -0.015451,0.715 0.0664062,0.50977 0.0818575,-0.20523 0.29893401,-0.52548 0.484375,-0.71094 0.18544101,-0.18542 0.34948216,-0.64083 0.36328126,-1.01172 0.023962,-0.64391 0.033124,-0.64882 0.1894531,-0.0937 0.2330336,0.8274 0.6365309,0.693 0.609375,-0.20312 -0.03532,-1.16553 -0.045218,-1.19668 -0.4335938,-1.34571 -0.2465328,-0.0946 -0.3194208,-0.0178 -0.2226562,0.23438 0.1212125,0.31585 0.042674,0.32659 -0.51562498,0.0723 -0.75049654,-0.34193 -0.87694976,-0.73483 -0.21875,-0.67968 0.24230967,0.0204 0.71668208,0.0181 1.05468748,-0.004 0.5955172,-0.0387 0.6004942,-0.05 0.1269531,-0.4082 -0.4421733,-0.33442 -0.4474637,-0.37172 -0.048828,-0.37891 0.5596981,-0.0102 0.5720036,-0.40715 0.019531,-0.61914 -0.4978997,-0.19105 -0.85213268,0.27413 -0.64062503,0.83984 0.12759873,0.3413 0.0875346,0.3522 -0.26171875,0.0684 -0.55695189,-0.4527 -0.27414082,-1.04634 0.57812498,-1.21679 0.4139208,-0.0828 0.7547241,-0.34696 0.8320312,-0.64258 0.1514495,-0.57915 -0.038697,-1.20703 -0.3652343,-1.20703 -0.1236488,0 -0.2246094,-0.17673 -0.2246094,-0.39258 0,-0.22934 0.1196272,-0.3184 0.2871094,-0.21484 0.3502564,0.21645 0.1600112,-0.94715 -0.4785157,-2.92579 -0.3378911,-1.04722 -0.58212835,-1.39493 -1.0683593,-1.52929 z m 0.53125,2.3711 c 0.13846261,0 0.25195313,0.11351 0.25195312,0.25195 0,0.13848 -0.11349051,0.25195 -0.25195312,0.25195 -0.13846261,0 -0.25195312,-0.11351 -0.25195312,-0.25195 0,-0.13848 0.11349054,-0.25195 0.25195312,-0.25195 z m 0.40234375,2.89062 c 0.0457251,-0.009 0.0899344,-0.002 0.13085935,0.0234 0.1583581,0.0978 0.09542,0.33241 -0.16406248,0.61914 -0.23027866,0.25447 -0.34291992,0.58329 -0.25195312,0.73047 0.0909687,0.14721 0.0973743,0.26758 0.015625,0.26758 -0.0817485,0 -0.20960841,-0.16055 -0.28515625,-0.35743 -0.15833427,-0.4126 0.23461269,-1.22258 0.5546875,-1.2832 z m 0.60546875,6.42383 c -0.2797225,0 -0.5039061,0.16711 -0.5039063,0.37695 0,0.20769 -0.11349046,0.37696 -0.25195308,0.37696 -0.1384626,0 -0.25195312,0.15807 -0.25195312,0.3496 0,0.17908 -0.24873508,0.32882 -0.53125,0.41993 v 0.24609 c 0.2514254,0.0125 0.26158421,0.0909 0.03710937,0.36133 C 0.01938029,192.18931 0.01481923,192.19989 0,192.21875 v 0.22266 c 0.06147942,0.009 0.11285961,0.0218 0.27539062,-0.01 0.34783427,-0.067 0.50272618,0.003 0.43359376,0.19727 -0.0593768,0.16694 -0.35020684,0.27702 -0.64648438,0.24414 -0.02440743,-0.003 -0.03894878,0.005 -0.0625,0.004 v 0.4668 c 0.14974681,0.037 0.28786784,0.11749 0.32617188,0.23242 0.0487955,0.14638 0.28456455,0.19124 0.5234375,0.0996 0.23887292,-0.0917 0.37733522,-0.25868 0.30664062,-0.37305 -0.070695,-0.1144 -0.013769,-0.28022 0.1269531,-0.36718 0.1478487,-0.0914 0.2558594,0.11402 0.2558594,0.48633 0,0.35432 -0.1260204,0.64453 -0.2792969,0.64453 -0.1532764,0 -0.21257,0.17384 -0.1308594,0.38671 0.084397,0.21994 -0.011369,0.44823 -0.2226562,0.5293 -0.20456277,0.0785 -0.30902986,0.24517 -0.23242188,0.36914 0.0766076,0.12397 -0.0415076,0.22461 -0.26171874,0.22461 C 0.25952308,195.57643 0.11438997,195.47815 0,195.35547 v 1.65039 c 0.4598175,0.41812 0.4453624,0.86625 0,1.11133 v 1.41015 c 0.11633892,-0.0208 0.26603387,-0.0215 0.48242188,-0.0117 0.58384312,0.0268 0.80468752,-0.0731 0.80468752,-0.36523 0,-0.1564 0.016346,-0.24055 0.0625,-0.25586 0.046154,-0.0151 0.1227508,0.0387 0.2402344,0.15625 0.3505881,0.35059 0.066808,0.71215 -0.6601563,0.84375 -0.64449535,0.11668 -0.79253068,0.64523 -0.22265625,0.79297 0.41762755,0.10825 0.41850085,0.11965 0.0136719,0.14648 -0.24230965,0.0163 -0.44140625,0.14828 -0.44140624,0.29493 0,0.1466 -0.10383228,0.20327 -0.23046876,0.125 -0.01582842,-0.01 -0.03240887,0.003 -0.04882812,-0.002 v 0.41016 c 0.29377043,-0.0552 0.59035436,-0.0887 0.84570312,-0.0606 0.24230925,0.0268 0.44140625,-0.0596 0.44140625,-0.1914 0,-0.13176 0.1971435,-0.22436 0.4394531,-0.20508 0.366932,0.0291 0.4427738,-0.18436 0.4511719,-1.28516 0.007,-0.91662 -0.089217,-1.32226 -0.3144532,-1.32226 -0.4480179,0 -0.4093942,-0.48672 0.052734,-0.66407 0.425596,-0.16331 0.5113209,-0.98705 0.1269532,-1.22461 -0.1384627,-0.0856 -0.2519532,-0.0121 -0.2519532,0.16211 0,0.25259 -0.063556,0.25304 -0.3125,0.004 -0.2489442,-0.24896 -0.2387136,-0.35819 0.050781,-0.53711 0.1999256,-0.12355 0.4645516,-0.16141 0.5898437,-0.084 0.1252921,0.0774 0.1601049,-0.0754 0.076172,-0.33985 -0.083933,-0.26445 -0.2008847,-1.10068 -0.2597656,-1.85742 -0.1442245,-1.85357 -0.3428792,-2.30735 -0.9296875,-2.12109 -0.52037864,0.16516 -0.59841528,-0.0572 -0.22265625,-0.63867 0.15434306,-0.23883 0.24560865,-0.26438 0.24804685,-0.0703 0.00215,0.17114 0.1745885,0.24037 0.3886719,0.15821 0.2961558,-0.11365 0.3166091,-0.22559 0.09375,-0.49415 -0.2258491,-0.27211 -0.200056,-0.3496 0.1191406,-0.3496 0.2246483,0 0.4101563,-0.11543 0.4101563,-0.25391 0,-0.13848 -0.226981,-0.25 -0.5039063,-0.25 z M 0,194.00391 v 0.30664 c 0.00736483,7e-4 0.01199922,0.008 0.01953125,0.008 0.13411729,0 0.17288704,0.18554 0.0859375,0.41211 -0.1062564614,0.27704 -0.04625699,0.3748 0.18164063,0.29883 0.54136746,-0.181 0.53921243,-0.56407 -0.005859,-0.90449 C 0.16615715,194.05313 0.08131876,194.02683 0,194.00391 Z m 0.68359375,1.82421 c 0.49503795,2e-5 0.61916675,0.0981 0.50390625,0.39844 -0.084045,0.21903 -0.1523437,0.50177 -0.1523438,0.62891 0,0.12714 -0.11349046,0.23047 -0.25195308,0.23047 -0.1384626,0 -0.25195312,-0.11898 -0.25195312,-0.26563 0,-0.14653 -0.11349056,-0.19686 -0.25195312,-0.11133 -0.13846262,0.0856 -0.25195313,-0.0782 -0.25195313,-0.36328 0,-0.39075 0.16150309,-0.51758 0.65625,-0.51758 z M 0.9375,197.67773 c 0.0300926,0.005 0.0630412,0.0178 0.0976562,0.0391 0.1384627,0.0856 0.2519532,0.20458 0.2519532,0.26562 0,0.061 -0.1134905,0.11133 -0.2519532,0.11133 -0.13846251,0 -0.25195307,-0.11898 -0.25195308,-0.26563 0,-0.10986 0.0640206,-0.16554 0.15429688,-0.15039 z m -0.41796875,5.57813 c 0.0398154,0.002 0.0894344,0.0155 0.15039063,0.0391 0.20064225,0.077 0.36523432,0.24157 0.36523432,0.36524 3e-7,0.36192 -0.43703929,0.25758 -0.5898437,-0.14063 -0.0701733,-0.18278 -0.0452283,-0.27074 0.0742188,-0.26367 z m 1.21289065,2.45312 c 0.3857802,-9.4e-4 0.4003425,0.25006 0.00781,0.64258 -0.3731641,0.37319 -0.6257164,0.38272 -0.8417969,0.0332 -0.2093658,-0.33876 0.0100006,-0.56303 0.6464844,-0.66016 0.070202,-0.0106 0.1323884,-0.0156 0.1875,-0.0156 z m -1.23046878,0.75977 c 0.0154054,0.005 0.0261703,0.0238 0.03125,0.0586 0.0203263,0.13849 0.0722358,0.43114 0.11523438,0.65039 0.0429985,0.21925 -0.079429,0.39844 -0.27148438,0.39844 -0.39329116,0 -0.4038532,-0.0843 -0.0976562,-0.79687 0.089249,-0.2078 0.17644265,-0.32416 0.22265624,-0.31055 z m 0.171875,1.54687 c 0.068075,-0.011 0.109375,0.0159 0.109375,0.0859 0,0.13848 -0.16925939,0.39402 -0.37695312,0.56641 -0.2106497,0.1748 -0.37890625,0.20094 -0.37890625,0.0606 0,-0.13849 0.17121252,-0.39207 0.37890625,-0.56446 0.10532447,-0.0874 0.19950317,-0.13725 0.26757812,-0.14844 z m 0.109375,2.41407 c 0.13846262,0 0.25195318,0.1693 0.25195308,0.37695 3e-7,0.20769 -0.11349046,0.37891 -0.25195308,0.37891 -0.1384626,0 -0.25195312,-0.17121 -0.25195312,-0.37891 0,-0.20768 0.11349052,-0.37695 0.25195312,-0.37695 z m 48.84960888,21.4707 c 0.419585,0.008 0.938712,0.0299 1.587891,0.0606 1.682748,0.0794 3.512558,0.22485 4.066406,0.32422 l 1.007813,0.17968 0.06836,3.59375 c 0.05374,2.76145 -0.02153,3.86271 -0.328125,4.76563 -0.219326,0.64604 -0.468375,1.91481 -0.552734,2.81836 -0.109115,1.16841 -0.351495,1.95456 -0.839844,2.72461 -0.748411,1.18012 -3.223743,3.6344 -4.328125,4.29101 -0.380768,0.2264 -0.691406,0.50075 -0.691406,0.60938 0,0.28002 -0.445045,0.24545 -0.626953,-0.0488 -0.08383,-0.13561 -0.04805,-0.44818 0.07813,-0.69336 0.126274,-0.24518 0.175441,-0.59617 0.109375,-0.78125 -0.06607,-0.18508 0.213996,-0.6948 0.623047,-1.13281 1.613892,-1.72812 2.399845,-4.66871 1.457031,-5.45117 -0.309808,-0.25713 -0.416573,-0.19515 -0.628906,0.36328 -0.14075,0.3702 -0.25586,0.79728 -0.25586,0.94922 0,0.15193 -0.339515,0.80543 -0.753906,1.45117 -0.414372,0.64574 -1.197751,2.01504 -1.740234,3.04297 -0.932705,1.76735 -1.757835,2.51312 -1.808594,1.63476 -0.09543,-1.65151 0.112744,-3.2196 0.503906,-3.79492 0.269972,-0.3971 1.233686,-2.89695 1.650391,-4.2793 0.499789,-1.65797 0.46835,-2.82516 -0.105469,-3.90234 l -0.46875,-0.88086 -0.261719,0.62891 c -0.143697,0.34616 -0.477477,1.14517 -0.742187,1.77539 -0.554929,1.3211 -2.74554,4.39258 -3.132813,4.39258 -0.143697,0 -0.383836,-0.19291 -0.533203,-0.42969 -0.366463,-0.58095 0.356714,-3.31305 1.453125,-5.49219 0.454847,-0.90401 0.911171,-2.09217 1.013672,-2.63867 0.110249,-0.58761 0.536904,-1.38104 1.044922,-1.94336 0.472479,-0.52298 0.859375,-1.05543 0.859375,-1.18359 0,-0.12821 0.181226,-0.41562 0.402344,-0.63672 0.255911,-0.25591 0.614291,-0.34117 1.873046,-0.31641 z m -36.068359,2.39844 0.796875,1.15625 c 0.437776,0.63628 0.894552,1.15625 1.015625,1.15625 0.121074,0 0.355212,0.42608 0.519531,0.94531 0.164319,0.51923 0.616546,1.62235 1.00586,2.45313 0.631832,1.3483 1.206145,3.19543 1.623047,5.22461 0.199275,0.96989 -0.281722,0.8903 -1.523438,-0.25196 -1.0734,-0.98738 -2.373047,-2.97958 -2.373047,-3.63867 0,-0.21146 -0.241841,-0.69443 -0.539062,-1.07227 l -0.541016,-0.68554 -0.345703,0.96679 c -0.383647,1.0753 -0.28727,2.04257 0.412109,4.11524 1.577678,4.67556 1.995871,10.18384 0.667969,8.81055 -0.200828,-0.2077 -0.537882,-0.94441 -0.748047,-1.63672 -0.210163,-0.69231 -0.606809,-1.82527 -0.880859,-2.51758 -0.689924,-1.74291 -1.544666,-3.95712 -1.693359,-4.38477 -0.265354,-0.76313 -0.564589,0.14472 -0.367188,1.11328 1.172697,5.75396 1.280623,6.49991 1.085938,7.48438 -0.411584,2.08123 -0.932312,1.37994 -2.335938,-3.14258 -0.4619683,-1.48847 -0.925035,-2.70508 -1.0273438,-2.70508 -0.201751,0 -0.1844447,0.0973 0.40625,2.48047 0.380504,1.53519 0.3122249,3.05664 -0.1367187,3.05664 -0.303617,0 -1.0058594,-1.48429 -1.0058594,-2.12695 0,-0.29718 -0.094634,-0.64777 -0.2109375,-0.7793 -0.5381144,-0.6086 -1.2871661,-4.10511 -1.2539062,-5.85156 0.02934,-1.54045 -0.055317,-1.95852 -0.5292969,-2.59961 -0.310577,-0.42008 -0.6150745,-1.16291 -0.6757813,-1.65234 -0.060707,-0.48944 -0.2201918,-1.09685 -0.3554687,-1.34961 -0.6916286,-1.29233 0.4077923,-3.02097 2.2207031,-3.49024 2.5308718,-0.65509 3.0830715,-0.76027 4.8671874,-0.91406 z m -5.7070311,11.91015 c -0.022866,0.0265 0.00125,0.12577 0.064453,0.30469 0.089613,0.25365 0.1753434,0.5941 0.1914062,0.75586 0.016063,0.16177 0.084238,0.0832 0.1503907,-0.17383 0.066153,-0.257 -0.021542,-0.59749 -0.1933594,-0.75586 -0.1211981,-0.11168 -0.190017,-0.15735 -0.2128905,-0.13086 z m 46.2968751,5.00391 c 0.138482,0 0.251953,0.11347 0.251953,0.25195 0,0.13849 -0.113471,0.25196 -0.251953,0.25196 -0.138482,0 -0.251953,-0.11347 -0.251953,-0.25196 0,-0.13848 0.113471,-0.25195 0.251953,-0.25195 z m -37.898438,22.99414 c 0.0271,-0.0113 0.05958,-0.006 0.09766,0.0176 0.117717,0.0728 0.350475,1.18528 0.517578,2.4707 0.1671,1.28543 0.338717,2.5908 0.380859,2.90235 0.04214,0.31154 -0.02135,0.5664 -0.140625,0.5664 -0.119263,0 -0.21629,-0.0836 -0.216797,-0.1875 -5.25e-4,-0.10382 -0.168294,-1.20889 -0.373047,-2.45508 -0.373387,-2.27252 -0.455281,-3.23527 -0.265625,-3.31445 z m 8.679688,21.12695 c 0.0488,9.9e-4 0.0929,0.0111 0.132812,0.0332 0.08381,0.0399 0.170007,0.0548 0.257813,0.0469 0.08781,-0.0121 0.177738,-0.0235 0.269531,-0.0351 0.0918,-0.0159 0.179857,-0.0251 0.263672,-0.0293 0.08781,-0.004 0.160835,0.0147 0.220703,0.0586 0.06386,0.0439 0.129416,0.0926 0.197266,0.14453 0.07184,0.0519 0.135529,0.10996 0.191406,0.17383 0.123727,0.14366 0.176206,0.28226 0.15625,0.41797 0.06386,0.15167 0.07889,0.29594 0.04297,0.43164 -0.01198,0.0359 -0.01379,0.0715 -0.0059,0.10742 0.01599,0.0719 0.01599,0.13555 0,0.19141 -0.01599,0.0559 -0.02165,0.11585 -0.01367,0.17969 0.01198,0.0599 0.0045,0.12171 -0.02344,0.18554 -0.02793,0.0638 -0.04475,0.12383 -0.05273,0.17969 -0.008,0.0559 -0.02861,0.10462 -0.06055,0.14453 -0.03194,0.0359 -0.06191,0.0565 -0.08984,0.0645 -0.02392,0.004 -0.04831,0.0174 -0.07227,0.0371 -0.01996,0.0159 -0.0349,0.0325 -0.04687,0.0527 -0.008,0.02 -0.02302,0.0424 -0.04297,0.0664 -0.0439,0.0599 -0.105724,0.11048 -0.185547,0.15039 0.0439,0.0759 0.09638,0.1358 0.15625,0.17968 0.05987,0.0399 0.108525,0.0849 0.148437,0.13672 0.0439,0.0479 0.06641,0.0948 0.06641,0.13867 0.004,0.0439 0.01526,0.087 0.03125,0.13086 0.01599,0.0439 0.02158,0.0795 0.01758,0.10743 -0.004,0.0238 -0.0096,0.052 -0.01758,0.084 -0.004,0.028 -0.01152,0.0598 -0.01953,0.0957 -0.008,0.0318 -0.01172,0.0713 -0.01172,0.11524 0.004,0.0399 2.5e-4,0.0755 -0.01172,0.10742 -0.008,0.028 -0.02105,0.0579 -0.04102,0.0898 -0.01599,0.028 -0.03662,0.0598 -0.06055,0.0957 -0.02392,0.0359 -0.04644,0.079 -0.06641,0.13086 -0.02392,0.0638 -0.06325,0.12193 -0.119141,0.17382 -0.05189,0.0479 -0.09307,0.0872 -0.125,0.11914 -0.02793,0.028 -0.05605,0.0692 -0.08398,0.1211 -0.05188,0.0958 -0.125,0.15765 -0.216797,0.18555 -0.08382,0.0238 -0.147503,9.9e-4 -0.191406,-0.0664 -0.02392,-0.0439 -0.06699,-0.0515 -0.130859,-0.0234 -0.05987,0.028 -0.108611,0.0505 -0.144532,0.0664 -0.0359,0.02 -0.07897,0.0251 -0.130859,0.0176 -0.04789,-0.004 -0.0985,-0.0117 -0.150391,-0.0234 -0.04789,-0.008 -0.09655,-0.005 -0.148437,0.0117 -0.05189,0.02 -0.100633,0.0251 -0.144531,0.0176 -0.0439,-0.008 -0.08322,-0.0212 -0.119141,-0.041 -0.07982,-0.0399 -0.132303,-0.0961 -0.15625,-0.16797 -0.02392,-0.0718 -0.04084,-0.1468 -0.04883,-0.22266 -0.008,-0.0798 -0.01921,-0.151 -0.03516,-0.21484 -0.01599,-0.0678 -0.02344,-0.1166 -0.02344,-0.14453 l 0.01758,-0.14453 -0.03516,-0.2207 c 0,-0.0399 -0.0094,-0.0661 -0.02539,-0.0781 -0.01599,-0.0159 -0.0422,-0.0403 -0.07813,-0.0723 -0.0359,-0.0317 -0.05647,-0.0806 -0.06445,-0.14843 -0.008,-0.0718 -0.0099,-0.15433 -0.0059,-0.2461 0.008,-0.11576 0.02854,-0.31056 0.06445,-0.58593 -0.02793,-0.34326 -0.04475,-0.56624 -0.05273,-0.66602 -0.0439,-0.52684 -0.03269,-0.85088 0.03516,-0.97461 0.01599,-0.0317 0.03288,-0.0563 0.04883,-0.0723 0.03194,-0.0317 0.045,-0.0844 0.04102,-0.15625 -0.01599,-0.14767 0.06275,-0.24879 0.234374,-0.30469 0.05189,-0.0159 0.100544,-0.0367 0.148438,-0.0606 0.04789,-0.0238 0.0985,-0.0445 0.150391,-0.0644 0.05787,-0.02 0.11136,-0.0283 0.160156,-0.0274 z m 7.472656,0.0156 c 0.127718,0 0.245754,0.0336 0.353516,0.10156 0.06386,-0.02 0.123811,-0.0312 0.179687,-0.0312 0.05987,0 0.131029,0.01 0.214844,0.0254 0.08781,0.0159 0.149626,0.0552 0.185547,0.11914 0.03991,0.0638 0.05868,0.11819 0.05469,0.16211 -0.008,0.0798 -0.02302,0.13593 -0.04297,0.17188 0.0359,0.0958 0.01913,0.21382 -0.05273,0.35351 0.09579,0.2315 0.09395,0.57812 -0.0059,1.03711 -0.02392,0.11176 -0.04831,0.21848 -0.07227,0.32227 -0.05588,0.24344 -0.08398,0.41583 -0.08398,0.51562 0,0.0638 0.0037,0.15755 0.01172,0.28125 0.01198,0.12374 0.02324,0.24921 0.03125,0.37696 0.008,0.12771 0.01172,0.24576 0.01172,0.35351 0,0.10776 -0.01319,0.17705 -0.03711,0.20899 -0.01996,0.028 -0.03489,0.0748 -0.04687,0.13867 -0.008,0.0599 -0.02116,0.11982 -0.03711,0.17969 -0.01599,0.0599 -0.03651,0.10852 -0.06445,0.14843 -0.02793,0.0439 -0.06352,0.0627 -0.107421,0.0547 -0.03991,-0.004 -0.06614,-0.0117 -0.07813,-0.0234 -0.008,-0.0121 -0.01738,-0.0272 -0.02539,-0.043 -0.01198,-0.0399 -0.03439,-0.0661 -0.07031,-0.0781 -0.05588,-0.0159 -0.08585,-0.0515 -0.08984,-0.10742 0,-0.0599 0.0074,-0.10108 0.02344,-0.125 0.01996,-0.028 0.0293,-0.0561 0.0293,-0.084 0,-0.0317 -0.0056,-0.0638 -0.01758,-0.0957 -0.02793,-0.0638 -0.06352,-0.0994 -0.107422,-0.10742 -0.0439,-0.0121 -0.07948,-0.0363 -0.107422,-0.0723 -0.02793,-0.0399 -0.05231,-0.0849 -0.07227,-0.13281 -0.04789,-0.11577 -0.06666,-0.20185 -0.05469,-0.26172 0.01599,-0.0599 0.01414,-0.13297 -0.0059,-0.2168 -0.06386,-0.25542 -0.06759,-0.44836 -0.01172,-0.58007 0.01996,-0.0559 0.02181,-0.10463 0.0059,-0.14453 -0.02392,-0.0838 -0.02956,-0.15494 -0.01758,-0.21485 0.02392,-0.11973 0.03516,-0.2303 0.03516,-0.33008 0,-0.10374 -0.0243,-0.15429 -0.07617,-0.15429 -0.04789,0 -0.07974,0.12737 -0.0957,0.38281 -0.01599,0.28339 -0.04221,0.45007 -0.07812,0.50195 -0.03194,0.0519 -0.06004,0.0969 -0.08398,0.13281 -0.02392,0.0317 -0.04644,0.0694 -0.06641,0.11329 -0.03991,0.0878 -0.06055,0.18521 -0.06055,0.29296 0,0.10379 -0.0037,0.1656 -0.01172,0.18555 -0.004,0.02 -0.0077,0.0424 -0.01172,0.0664 -0.01995,0.0718 -0.0293,0.15988 -0.0293,0.26367 0,0.14366 -0.02997,0.25982 -0.08984,0.34766 -0.008,0.0121 -0.01546,0.0363 -0.02344,0.0762 -0.008,0.0359 -0.02116,0.0753 -0.03711,0.11523 -0.03991,0.0958 -0.09239,0.14258 -0.15625,0.14258 -0.06386,-0.004 -0.112518,-0.0227 -0.148437,-0.0586 -0.03194,-0.0399 -0.05817,-0.0868 -0.07813,-0.13868 -0.01995,-0.0519 -0.03685,-0.10435 -0.04883,-0.15625 -0.01198,-0.0519 -0.03065,-0.10055 -0.05859,-0.14843 -0.03991,-0.0678 -0.03057,-0.20842 0.0293,-0.41992 0.02392,-0.0838 0.03327,-0.15124 0.0293,-0.20313 -0.004,-0.0559 -0.03012,-0.099 -0.08203,-0.13086 -0.02392,-0.0159 -0.05016,-0.1021 -0.07813,-0.25781 -0.02392,-0.15965 -0.04644,-0.29272 -0.06641,-0.39649 -0.01599,-0.10775 -0.03288,-0.20517 -0.04883,-0.29297 -0.0439,-0.20351 -0.07948,-0.30657 -0.107422,-0.31054 -0.02392,-0.004 -0.0389,0.005 -0.04687,0.0293 -0.004,0.02 -0.004,0.0462 0,0.0781 0.004,0.0317 0.0077,0.0638 0.01172,0.0957 0.008,0.0317 0.01172,0.0619 0.01172,0.0898 0.004,0.028 -0.0073,0.0823 -0.03516,0.16211 -0.02392,0.0759 -0.02578,0.16389 -0.0059,0.26367 0.01996,0.0998 0.0293,0.17471 0.0293,0.22656 0,0.0519 -0.0056,0.10995 -0.01758,0.17383 -0.01198,0.0599 -0.01569,0.11422 -0.01172,0.16211 0.008,0.0479 0.01361,0.0909 0.01758,0.13086 0.008,0.0998 -0.01451,0.16536 -0.06641,0.19726 -0.05189,0.0317 -0.07813,0.0844 -0.07813,0.15625 0.004,0.0718 0.02835,0.1318 0.07227,0.17969 0.0439,0.0439 0.0608,0.0851 0.04883,0.125 -0.01198,0.0399 -0.02698,0.0718 -0.04297,0.0957 -0.01599,0.0238 -0.02158,0.0446 -0.01758,0.0606 0.004,0.0159 0.004,0.0367 0,0.0605 -0.008,0.0958 -0.08484,0.18385 -0.228515,0.26367 -0.115744,0.0638 -0.211278,0.0863 -0.287109,0.0703 -0.07583,-0.0121 -0.132049,-0.0363 -0.167969,-0.0762 -0.03591,-0.0399 -0.049,-0.0849 -0.04102,-0.13281 0.008,-0.0519 0.008,-0.0968 0,-0.13672 -0.004,-0.0439 -0.0077,-0.0889 -0.01172,-0.13281 0,-0.0439 -0.0019,-0.087 -0.0059,-0.13086 -0.004,-0.11974 -0.01715,-0.20033 -0.03711,-0.24024 -0.01996,-0.0439 -0.03119,-0.0869 -0.03516,-0.13086 -0.004,-0.0439 -0.0059,-0.0851 -0.0059,-0.12109 0.004,-0.0399 0.0077,-0.0755 0.01172,-0.10742 0.004,-0.0317 -0.0016,-0.0656 -0.01758,-0.10157 -0.01198,-0.0359 -0.01198,-0.0808 0,-0.13671 0.01198,-0.0559 0.01379,-0.11022 0.0059,-0.16211 -0.008,-0.0519 -0.008,-0.0988 0,-0.13868 0.01198,-0.0439 0.02132,-0.0869 0.0293,-0.13085 0.01198,-0.10379 -0.0086,-0.17305 -0.06445,-0.20899 -0.06386,-0.0519 -0.108866,-0.10621 -0.132813,-0.16211 -0.01996,-0.0599 -0.02741,-0.13671 -0.02344,-0.22851 0.004,-0.0918 0.004,-0.16481 0,-0.22071 -0.004,-0.0599 0.0054,-0.12916 0.0293,-0.20898 0.02793,-0.0838 0.04297,-0.17002 0.04297,-0.25781 0,-0.0878 -0.0037,-0.16468 -0.01172,-0.22852 -0.004,-0.0638 -0.01152,-0.12379 -0.01953,-0.17969 -0.008,-0.0559 -0.01546,-0.112 -0.02344,-0.17187 -0.01198,-0.12371 -0.0063,-0.22867 0.01758,-0.3125 0.03194,-0.0798 0.0732,-0.14541 0.121094,-0.19727 0.05189,-0.0559 0.132387,-0.0821 0.24414,-0.0781 0.215524,0.008 0.344769,-0.001 0.388672,-0.0293 0.0918,-0.0559 0.196756,-0.0578 0.3125,-0.006 0.03194,0.0121 0.06004,0.0272 0.08398,0.0469 0.223506,0.0559 0.349011,0.14582 0.376953,0.26953 0.07982,0.33524 0.11914,0.56012 0.11914,0.67187 0,0.10776 0.0019,0.17145 0.0059,0.19141 0.008,0.02 0.01361,0.0348 0.01758,0.0469 0.008,0.008 0.01367,0.0172 0.01367,0.0293 0,0.0121 -0.0057,0.044 -0.01367,0.0957 -0.008,0.0519 -4.33e-4,0.0932 0.01953,0.1211 0.01996,0.028 0.04051,0.041 0.06445,0.041 0.02793,0 0.05418,-0.0132 0.07813,-0.041 0.02793,-0.0317 0.0467,-0.0938 0.05469,-0.18555 0.01198,-0.0958 0.01758,-0.15387 0.01758,-0.17383 0,-0.0359 0.0056,-0.0678 0.01758,-0.0957 0.01599,-0.0317 0.02724,-0.0656 0.03125,-0.10156 0.004,-0.0359 0.0096,-0.0753 0.01758,-0.11524 0.01198,-0.10375 0.03821,-0.17493 0.07813,-0.21484 0.03991,-0.0399 0.0811,-0.0736 0.125,-0.10156 0.0439,-0.0318 0.07202,-0.075 0.08398,-0.13086 0.01198,-0.0559 0.02321,-0.1084 0.03516,-0.15625 0.01599,-0.0479 0.03848,-0.0948 0.06641,-0.13868 0.06785,-0.11175 0.167119,-0.16601 0.298828,-0.16601 z m -5.267578,0.0352 h 0.101563 c 0.04789,-0.004 0.09851,-0.004 0.15039,0 0.123727,0.008 0.204229,0.0249 0.244141,0.0527 0.0439,0.028 0.09265,0.0467 0.144531,0.0547 0.05188,0.008 0.102408,0.0134 0.154297,0.0176 h 0.15625 c 0.04789,-0.004 0.09103,-0.006 0.126953,-0.006 0.03991,0 0.0642,0.004 0.07617,0.0117 0.04789,0.02 0.08916,0.0295 0.121094,0.0254 0.0359,-0.004 0.06963,0.011 0.101562,0.0469 0.03194,0.0317 0.05443,0.0582 0.06641,0.0781 0.01198,0.0159 0.04941,0.0272 0.113282,0.0351 0.06785,0.008 0.124065,0.0178 0.167968,0.0254 0.0439,0.004 0.08696,0.0208 0.13086,0.0527 0.0439,0.0317 0.07948,0.0526 0.107422,0.0605 0.02793,0.008 0.05791,0.0344 0.08984,0.0781 0.03591,0.0439 0.06029,0.0757 0.07227,0.0957 0.01198,0.02 0.01943,0.0536 0.02344,0.10156 0.004,0.11177 0.03209,0.19424 0.08398,0.2461 0.05188,0.0519 0.07999,0.10055 0.08398,0.14844 0.008,0.0479 0.01361,0.10413 0.01758,0.16796 0.004,0.0638 0.0096,0.14447 0.01758,0.24024 0.01198,0.0918 -0.0067,0.19478 -0.05859,0.31055 -0.04789,0.11172 -0.09851,0.19045 -0.150391,0.23437 -0.04789,0.0439 -0.08721,0.0962 -0.119141,0.16016 -0.03194,0.0599 -0.0563,0.13111 -0.07227,0.21093 -0.01198,0.0759 -0.05316,0.1526 -0.125,0.23243 -0.0439,0.0559 -0.07948,0.0896 -0.107422,0.10156 -0.02392,0.0121 -0.04831,0.0272 -0.07227,0.043 -0.02392,0.0121 -0.05204,0.0287 -0.08398,0.0527 -0.03194,0.02 -0.06751,0.0387 -0.107422,0.0547 -0.09978,0.0479 -0.185971,0.0571 -0.257812,0.0293 -0.0439,0.02 -0.08891,0.0348 -0.132813,0.043 -0.03991,0.004 -0.0811,0.0117 -0.125,0.0234 -0.0918,0.0317 -0.144276,0.0863 -0.15625,0.16211 -0.008,0.0759 0.0014,0.15264 0.02539,0.23242 0.02793,0.0798 0.04289,0.14723 0.04687,0.20313 0.01996,0.1796 -0.02309,0.33509 -0.13086,0.4668 -0.06785,0.0798 -0.112856,0.16604 -0.132812,0.25781 -0.01996,0.0878 -0.05554,0.14779 -0.107422,0.17969 -0.08781,0.0798 -0.17213,0.063 -0.251953,-0.0527 -0.01198,-0.0121 -0.03821,-0.0291 -0.07813,-0.0488 -0.05588,-0.0317 -0.09146,-0.0825 -0.107422,-0.15039 -0.01198,-0.0718 -0.01758,-0.14303 -0.01758,-0.21484 0,-0.0719 -0.0056,-0.13925 -0.01758,-0.20313 -0.01198,-0.0638 -0.02698,-0.13127 -0.04297,-0.20312 -0.03591,-0.19559 -0.05273,-0.33052 -0.05273,-0.40235 0,-0.0718 -0.0019,-0.14488 -0.0059,-0.2207 0,-0.0759 0.0093,-0.14326 0.0293,-0.20312 0.02392,-0.0599 0.03327,-0.10114 0.0293,-0.1211 -0.004,-0.02 0.0017,-0.0405 0.01367,-0.0645 0.01198,-0.028 0.02506,-0.0598 0.04102,-0.0957 0.01599,-0.0399 0.02722,-0.0812 0.03516,-0.1211 0.01599,-0.0838 -0.0064,-0.15497 -0.07031,-0.21484 -0.07184,-0.0679 -0.109375,-0.13903 -0.109375,-0.21484 v -0.0371 c 0.01198,-0.13573 0.0158,-0.22751 0.0078,-0.27539 -0.03194,-0.13573 -0.04883,-0.2687 -0.04883,-0.40039 l -0.0293,-0.4961 c 0,-0.0838 -0.0019,-0.17376 -0.0059,-0.26953 -0.01599,-0.23947 -9.95e-4,-0.37441 0.04687,-0.40234 0.0439,-0.0238 0.07388,-0.0502 0.08984,-0.0781 0.01996,-0.028 0.04059,-0.041 0.06055,-0.041 z m 1.058594,1.12109 c -0.04203,0 -0.08122,0.009 -0.119141,0.0273 -0.07184,0.0317 -0.120584,0.0807 -0.144531,0.14453 -0.01996,0.0638 -0.0293,0.11446 -0.0293,0.15039 0.004,0.0317 0.0077,0.0543 0.01172,0.0703 0.004,0.0121 0.0096,0.0291 0.01758,0.0488 0.008,0.0159 0.01553,0.0403 0.01953,0.0723 0.008,0.028 0.01361,0.0691 0.01758,0.125 0.008,0.0559 0.008,0.11585 0,0.17969 -0.004,0.0599 -0.0077,0.11611 -0.01172,0.16797 -0.008,0.13171 0.007,0.20475 0.04687,0.2207 0.0439,0.02 0.117018,-0.0325 0.216797,-0.16016 0.107762,-0.13171 0.19769,-0.29288 0.269532,-0.48046 0.0359,-0.0998 0.03776,-0.17278 0.0059,-0.22071 -0.06785,-0.0798 -0.09596,-0.15101 -0.08398,-0.21484 0.004,-0.004 0.004,-0.0155 0,-0.0312 -0.008,-0.008 -0.01927,-0.0172 -0.03125,-0.0293 -0.01198,-0.0159 -0.0288,-0.031 -0.05273,-0.043 -0.0459,-0.018 -0.09078,-0.0273 -0.132812,-0.0273 z m -3.001953,0.0859 c -0.01788,0.008 -0.03482,0.0249 -0.05078,0.0508 -0.02793,0.0479 -0.02793,0.10218 0,0.16601 0.03194,0.0638 0.04128,0.15002 0.0293,0.25782 -0.008,0.10775 -0.01172,0.21461 -0.01172,0.31836 0,0.2115 0.03745,0.3164 0.113282,0.3164 0.03991,0 0.07745,-0.028 0.109375,-0.084 0.03194,-0.0599 0.05061,-0.11612 0.05859,-0.16797 0.004,-0.0519 0.0059,-0.10244 0.0059,-0.1543 0.004,-0.0559 0.03023,-0.12525 0.07813,-0.20508 0.05188,-0.0838 0.06878,-0.15872 0.04883,-0.22656 -0.01599,-0.0718 -0.04595,-0.11306 -0.08984,-0.125 -0.0439,-0.0159 -0.08517,-0.0384 -0.121093,-0.0664 -0.03194,-0.0317 -0.06938,-0.0582 -0.113282,-0.0781 -0.01995,-0.01 -0.03877,-0.0102 -0.05664,-0.002 z m 0.134765,1.65429 c -0.0918,-0.028 -0.142408,0.0189 -0.15039,0.13868 -0.008,0.0838 -0.01732,0.16807 -0.0293,0.25585 -0.01198,0.0878 -0.01379,0.15534 -0.0059,0.19922 0.01198,0.0439 0.02321,0.0907 0.03516,0.14258 0.02392,0.02 0.04831,0.0387 0.07227,0.0547 0.02392,0.0159 0.04644,0.031 0.06641,0.0469 0.02392,-0.0479 0.04644,-0.0835 0.06641,-0.10742 0.02392,-0.0238 0.04262,-0.0502 0.05859,-0.0781 0.03991,-0.0638 0.06242,-0.14058 0.06641,-0.23242 0.008,-0.0958 0.0024,-0.17266 -0.01758,-0.22852 -0.03194,-0.10375 -0.08627,-0.16744 -0.16211,-0.19141 z m -11.945312,10.6543 c 0.05675,-0.0223 0.119793,-0.0114 0.1875,0.0332 0.06595,0.0381 0.112418,0.0723 0.140625,0.0996 0.02642,0.0208 0.09361,0.0224 0.201172,0.008 0.113975,-0.0166 0.20816,-0.0272 0.283203,-0.0332 0.07329,-0.0125 0.152856,-0.004 0.238281,0.0293 0.08547,0.0329 0.154154,0.05 0.203125,0.0508 0.04897,7.1e-4 0.10849,0.0302 0.179687,0.0879 0.07767,0.0559 0.129974,0.0977 0.158204,0.125 0.02819,0.0272 0.05653,0.078 0.08398,0.1543 0.05535,0.18028 0.13704,0.30141 0.244141,0.36328 0.107176,0.0619 0.173771,0.13076 0.201171,0.20703 0.03379,0.0746 0.06712,0.16339 0.101563,0.26563 0.03443,0.10223 0.08005,0.23021 0.134766,0.38281 0.05953,0.14434 0.07302,0.32202 0.03906,0.5332 -0.02925,0.20296 -0.07724,0.35116 -0.142578,0.44531 -0.05886,0.0925 -0.10086,0.1965 -0.125,0.31446 -0.02589,0.11146 -0.0342,0.23604 -0.02539,0.37304 0.01364,0.12877 -0.02128,0.27417 -0.103515,0.43555 -0.04714,0.11017 -0.0906,0.18118 -0.13086,0.21289 -0.03379,0.0299 -0.06562,0.0631 -0.09766,0.0996 -0.03379,0.0299 -0.07173,0.072 -0.113281,0.125 -0.0433,0.0464 -0.09427,0.0913 -0.152344,0.13477 -0.141623,0.12158 -0.277016,0.17433 -0.40625,0.16015 -0.06282,0.0517 -0.127288,0.0948 -0.195312,0.12696 -0.06325,0.0238 -0.12899,0.055 -0.195313,0.0937 -0.135598,0.0921 -0.1972,0.20131 -0.183594,0.33007 0.02022,0.12696 0.0669,0.25144 0.140625,0.3711 0.08036,0.11784 0.137083,0.22131 0.167969,0.31054 0.11091,0.28385 0.106347,0.55677 -0.01172,0.81836 -0.07568,0.15965 -0.109114,0.31831 -0.101562,0.47657 0.0058,0.15171 -0.02706,0.26516 -0.09766,0.33984 -0.108193,0.16838 -0.251089,0.17518 -0.431641,0.0215 -0.02468,-0.0144 -0.07466,-0.0298 -0.148437,-0.0449 -0.104966,-0.0276 -0.184627,-0.0917 -0.240235,-0.19531 -0.05083,-0.11184 -0.09169,-0.22674 -0.123047,-0.34375 -0.03137,-0.11705 -0.0718,-0.22542 -0.11914,-0.32422 -0.04734,-0.0988 -0.09885,-0.20244 -0.15625,-0.3125 -0.143872,-0.30289 -0.232314,-0.51383 -0.263672,-0.63086 -0.03137,-0.11701 -0.06579,-0.23564 -0.105469,-0.35742 -0.03311,-0.12355 -0.0474,-0.23946 -0.04102,-0.3457 0.01289,-0.10798 0.01128,-0.17623 -0.0039,-0.20703 -0.01531,-0.0306 -0.01881,-0.0691 -0.0098,-0.11329 0.0073,-0.0507 0.01699,-0.10836 0.02734,-0.17382 0.0086,-0.072 0.01024,-0.14242 0.0059,-0.21094 -0.01058,-0.14351 -0.08078,-0.25066 -0.210938,-0.32031 -0.146657,-0.0792 -0.23643,-0.17919 -0.269531,-0.30274 l -0.01563,-0.0586 c -0.03976,-0.22628 -0.07753,-0.37663 -0.111328,-0.45117 -0.111243,-0.20712 -0.194467,-0.41826 -0.251953,-0.63282 l -0.265625,-0.79687 c -0.03659,-0.13656 -0.07857,-0.28127 -0.126953,-0.43555 -0.130519,-0.38313 -0.163463,-0.6074 -0.09766,-0.67383 0.06105,-0.0582 0.09946,-0.11355 0.113281,-0.16601 0.0203,-0.0542 0.04562,-0.087 0.07813,-0.0957 0.03902,-0.0102 0.09451,-0.0238 0.166015,-0.043 0.07627,-0.0276 0.157877,-0.0504 0.244141,-0.0664 0.205001,-0.0411 0.346583,-0.0476 0.423828,-0.0195 0.08372,0.0265 0.169825,0.0352 0.257812,0.0254 0.08798,-0.01 0.173476,-0.023 0.259766,-0.0391 0.09103,-0.0246 0.175904,-0.0456 0.253906,-0.0664 0.07627,-0.0276 0.144618,-0.0507 0.203125,-0.0664 0.06501,-0.0174 0.107888,-0.0212 0.13086,-0.0137 0.08674,0.0117 0.154814,0.007 0.205078,-0.0137 z m -4.4511721,0.70313 c 0.097523,-0.0261 0.2097428,-0.0249 0.3359375,0.004 0.2081801,0.0488 0.3524371,0.10696 0.4335937,0.17578 0.081158,0.0688 0.1384224,0.12704 0.171875,0.17383 0.033411,0.0468 0.084368,0.10866 0.1542969,0.1875 0.06991,0.0788 0.112339,0.15523 0.125,0.22852 0.01916,0.0715 0.05333,0.15358 0.105469,0.24414 0.05215,0.0906 0.08297,0.20283 0.0918,0.33984 0.0088,0.13701 0.0446,0.26758 0.105468,0.39063 0.05912,0.11656 0.09328,0.19863 0.105469,0.24414 0.01221,0.0455 0.02789,0.0858 0.04492,0.12304 0.03617,0.10874 0.08489,0.20132 0.146484,0.27539 0.06341,0.0806 0.104056,0.19027 0.121094,0.33204 0.02196,0.13349 0.0474,0.24463 0.07813,0.33398 0.03557,0.0811 0.09471,0.161 0.177734,0.23633 0.157561,0.14593 0.250393,0.32946 0.275391,0.55273 0.0091,0.0603 0.02502,0.12555 0.05078,0.19531 0.03031,0.0616 0.05464,0.12119 0.07031,0.17969 0.01395,0.052 0.02541,0.12295 0.03516,0.21094 0.01364,0.12877 0.05583,0.27678 0.128906,0.44531 0.126123,0.31465 0.204759,0.5262 0.234375,0.63672 0.02963,0.11051 0.05846,0.20498 0.08594,0.28125 0.02574,0.0698 0.05306,0.14575 0.08203,0.22852 0.0787,0.21581 0.138188,0.44104 0.179688,0.67383 0.04633,0.22449 0.01142,0.36798 -0.103516,0.43359 v 0.002 c -0.01984,0.082 -0.05699,0.14734 -0.113281,0.19727 -0.05455,0.0564 -0.122229,0.0677 -0.201172,0.0332 -0.0772,-0.028 -0.131333,-0.0346 -0.16211,-0.0195 -0.02426,0.0136 -0.04797,0.0257 -0.07226,0.0391 -0.05675,0.0223 -0.126065,-0.003 -0.208985,-0.0781 -0.0829,-0.0753 -0.133864,-0.13919 -0.154296,-0.18946 -0.02226,-0.0567 -0.03757,-0.11227 -0.04492,-0.16601 -0.0054,-0.12401 -0.05318,-0.22137 -0.142578,-0.29492 -0.0829,-0.0753 -0.14343,-0.13333 -0.181641,-0.17188 -0.03167,-0.0403 -0.05938,-0.10295 -0.08203,-0.1875 -0.02438,-0.091 -0.04438,-0.14414 -0.0625,-0.16015 -0.01353,-0.0242 -0.02533,-0.0414 -0.03516,-0.0527 -0.0482,-0.0498 -0.08668,-0.13842 -0.113282,-0.26367 -0.02022,-0.12699 -0.05763,-0.20686 -0.115234,-0.24024 -0.05945,-0.0398 -0.131795,-0.0613 -0.216797,-0.0664 -0.0785,-0.007 -0.134637,0.0185 -0.167969,0.0762 -0.02857,0.0495 -0.05479,0.1088 -0.07813,0.17773 -0.01682,0.0672 -0.046112,0.13001 -0.085937,0.18946 -0.041556,0.053 -0.1075019,0.0808 -0.1972657,0.084 -0.083244,0.001 -0.1642443,0.0443 -0.2460937,0.12891 -0.081846,0.0846 -0.1222928,0.17195 -0.1191406,0.26172 0.00144,0.0833 0.00145,0.17025 -0.00195,0.26172 -0.00335,0.0915 0.00746,0.17241 0.033203,0.24218 0.03205,0.0681 0.05037,0.13982 0.056641,0.21485 0.010847,0.0668 0.012444,0.13503 0.00391,0.20703 -0.00847,0.17646 -0.047222,0.28225 -0.1152344,0.31445 -0.05675,0.0223 -0.1168019,0.0379 -0.1835937,0.0488 -0.036699,0.14922 -0.1008488,0.25061 -0.1914063,0.30273 -0.2508887,0.12994 -0.4213789,0.12911 -0.5117187,0 -0.055166,-0.0758 -0.1053547,-0.17963 -0.1484375,-0.31445 -0.086067,-0.26959 -0.1645851,-0.4479 -0.2363281,-0.5332 -0.071645,-0.0853 -0.1157253,-0.19808 -0.1328125,-0.33985 -0.010545,-0.1435 -0.036927,-0.28319 -0.080078,-0.41797 -0.043158,-0.13476 -0.071395,-0.23921 -0.083984,-0.3125 -0.012586,-0.0733 -0.02383,-0.13901 -0.033203,-0.19921 -0.00277,-0.062 -0.00499,-0.12218 -0.00586,-0.17774 -0.00277,-0.0619 -0.014003,-0.12767 -0.033203,-0.19922 -0.014324,-0.0798 -0.02456,-0.17074 -0.03125,-0.27343 -0.00665,-0.10277 -0.013169,-0.20914 -0.021484,-0.31836 -0.01765,-0.27402 -0.051761,-0.47502 -0.099609,-0.60157 -0.047743,-0.12657 -0.066572,-0.24014 -0.058594,-0.33984 0.014627,-0.10148 0.034166,-0.19363 0.060547,-0.27734 0.066497,-0.2199 0.080825,-0.38666 0.042969,-0.50196 -0.039674,-0.12177 -0.070003,-0.21403 -0.09375,-0.27734 -0.019162,-0.0715 -0.036208,-0.14543 -0.048828,-0.21875 -0.061557,-0.35981 -0.042084,-0.95343 0.056641,-1.78125 3.042e-4,-0.0768 0.047025,-0.14798 0.140625,-0.21484 0.09357,-0.0669 0.1958769,-0.0983 0.3085937,-0.0937 0.1174904,-0.004 0.2103564,-0.014 0.2753906,-0.0312 0.069744,-0.0257 0.1209388,-0.0674 0.1542969,-0.125 0.038075,-0.066 0.07737,-0.12805 0.1171875,-0.1875 0.046314,-0.0612 0.1047224,-0.11521 0.1757813,-0.16211 0.069316,-0.0534 0.1524768,-0.093 0.25,-0.11914 z m -3.0820313,0.94726 c 0.091351,-0.0137 0.1782509,0.003 0.2617188,0.0508 0.1669341,0.0964 0.317216,0.31627 0.4511718,0.66016 h 0.00195 c 0.1109102,0.28384 0.182407,0.52952 0.2167968,0.73633 l 0.070313,0.49218 c 0.016706,0.11396 0.052094,0.25776 0.1054687,0.43165 0.059939,0.17207 0.077245,0.30432 0.052734,0.39453 -0.026343,0.0837 -0.091968,0.15013 -0.1972657,0.19921 -0.098804,0.0474 -0.1838518,0.0672 -0.2558593,0.0586 -0.067223,-0.017 -0.1326413,-0.0363 -0.1933594,-0.0547 -0.1492044,-0.0367 -0.2575461,-0.0162 -0.328125,0.0586 -0.064093,0.0729 -0.098893,0.16464 -0.1035156,0.27735 -0.00465,0.11274 0.00702,0.2387 0.037109,0.37695 0.034545,0.20678 0.1063156,0.46921 0.2128907,0.78906 0.037927,0.11524 0.061622,0.20992 0.074219,0.28321 0.017424,0.065 0.034886,0.12377 0.048828,0.17578 0.033109,0.12355 0.08393,0.23912 0.1542968,0.3457 0.070371,0.10655 0.1132212,0.1895 0.1289063,0.24805 0.015685,0.0585 0.018795,0.11008 0.00977,0.1543 -0.0042,0.0359 -0.019274,0.0708 -0.044922,0.10546 -0.027288,0.0283 -0.049341,0.0588 -0.068359,0.0918 -0.020825,0.0265 -0.044812,0.057 -0.070312,0.0918 -0.020787,0.0265 -0.042832,0.057 -0.068359,0.0918 0.1178797,0.30983 0.1917548,0.56206 0.2226562,0.75585 0.029291,0.18728 0.057645,0.34673 0.085937,0.47852 0.028271,0.13179 0.023644,0.24097 -0.015625,0.32813 -0.053639,0.1119 -0.1924195,0.21856 -0.4160156,0.32031 -0.134778,0.0432 -0.2542815,-6.2e-4 -0.359375,-0.13281 -0.1033361,-0.1256 -0.1812216,-0.29412 -0.2304687,-0.50391 -0.042845,-0.2115 -0.08763,-0.3693 -0.1367188,-0.47461 -0.050823,-0.1118 -0.1027999,-0.20218 -0.15625,-0.27148 -0.0469,-0.0711 -0.091117,-0.134 -0.1328125,-0.18555 -0.043438,-0.058 -0.089561,-0.13884 -0.1386719,-0.24414 -0.049085,-0.1053 -0.06921,-0.22883 -0.058594,-0.3711 -0.1188964,-0.0796 -0.2095597,-0.17484 -0.2734375,-0.2832 -0.063878,-0.10832 -0.101852,-0.26192 -0.1132813,-0.46094 -0.00677,-0.20723 -0.025891,-0.38929 -0.054687,-0.54883 -0.022337,-0.16122 -0.052345,-0.30728 -0.09375,-0.43554 -0.093037,-0.29564 -0.2079175,-0.44856 -0.34375,-0.46094 -0.097996,-0.002 -0.1938013,0.0473 -0.2851562,0.14844 -0.084862,0.0994 -0.1537517,0.16794 -0.2070313,0.20312 -0.053292,0.0351 -0.1148557,0.0375 -0.1855469,0.008 -0.064206,-0.0317 -0.1056281,-0.0795 -0.1230468,-0.14454 -0.010847,-0.0668 -0.015878,-0.14007 -0.015625,-0.21679 -0.00144,-0.0833 -0.0056,-0.16134 -0.011719,-0.23633 3.042e-4,-0.0768 -0.020992,-0.14511 -0.064453,-0.20313 -0.043436,-0.058 -0.086639,-0.0905 -0.1308594,-0.0996 -0.044231,-0.009 -0.088095,-0.0317 -0.1328125,-0.0684 -0.1123993,-0.0814 -0.1841725,-0.25879 -0.2148437,-0.5293 -0.032413,-0.27704 -0.062091,-0.50152 -0.087891,-0.67578 -0.025825,-0.17428 -0.046192,-0.30108 -0.060547,-0.38086 -0.00975,-0.088 -0.00738,-0.17037 0.00781,-0.24414 0.015099,-0.0737 0.048545,-0.14542 0.099609,-0.21485 0.1311761,-0.16059 0.3308292,-0.25773 0.5996094,-0.29492 1.2398499,-0.15802 1.9353802,-0.28527 2.0839844,-0.38086 0.059788,-0.037 0.1133582,-0.072 0.1601562,-0.10547 0.099957,-0.0755 0.1957586,-0.11915 0.2871094,-0.13281 z m 7.8320314,0.006 c -0.165211,-0.0185 -0.302298,0.0178 -0.410156,0.10938 -0.103083,0.0834 -0.160733,0.18239 -0.171875,0.29687 -0.0046,0.11274 0.0019,0.19931 0.01758,0.25781 0.02052,0.0503 0.03749,0.087 0.05078,0.11133 0.01179,0.0178 0.02918,0.0412 0.05078,0.0703 0.01988,0.0227 0.04005,0.0592 0.06055,0.10938 0.0251,0.0421 0.05302,0.10799 0.08399,0.19726 0.0373,0.0876 0.06316,0.18353 0.07812,0.29102 0.01954,0.0993 0.0364,0.19305 0.05274,0.2793 0.0446,0.21804 0.103906,0.33122 0.175781,0.33984 0.08022,0.0132 0.172495,-0.10582 0.279297,-0.35742 0.118065,-0.26158 0.19533,-0.5615 0.230469,-0.89844 0.01497,-0.1782 -0.01308,-0.29918 -0.08594,-0.36328 -0.145364,-0.10042 -0.222094,-0.20522 -0.230468,-0.31445 0.0048,-0.008 -1.35e-4,-0.0246 -0.01367,-0.0488 -0.01637,-0.009 -0.03761,-0.0208 -0.0625,-0.0352 -0.02642,-0.0208 -0.0612,-0.0359 -0.105469,-0.0449 z M 9.1875,312.05469 c -0.029748,0.001 -0.062582,0.0271 -0.097656,0.0781 -0.1318942,-0.0761 -0.2169643,-0.0563 -0.2558594,0.0586 -0.026343,0.0837 -0.018187,0.20662 0.025391,0.36914 0.016706,0.11395 0.018642,0.22074 0.00391,0.32226 -0.00813,0.0997 -0.00487,0.2063 0.011719,0.32031 0.015383,0.13527 0.023034,0.30534 0.021484,0.50782 0.00503,0.20073 0.050018,0.33868 0.1328125,0.41406 0.089397,0.0736 0.1757089,0.0856 0.2597656,0.0352 0.084053,-0.0504 0.1478463,-0.0835 0.1933594,-0.0957 0.043752,-0.0185 0.082463,-0.0355 0.1132812,-0.0508 0.076267,-0.0276 0.1253173,-0.0724 0.1503907,-0.13476 0.02982,-0.0707 0.039762,-0.12506 0.029297,-0.16407 -0.00563,-0.0473 -0.01641,-0.0929 -0.035156,-0.13672 -0.054316,-0.12482 -0.093084,-0.24999 -0.1132813,-0.37695 -0.02022,-0.12699 -0.068008,-0.27799 -0.1425781,-0.45312 -0.068251,-0.17685 -0.1121187,-0.30807 -0.1347656,-0.39258 -0.024378,-0.0911 -0.051716,-0.16699 -0.082031,-0.22852 -0.023671,-0.0494 -0.05033,-0.0733 -0.080078,-0.0723 z M 28.857422,329.1582 A 17.007874,17.007874 0 0 1 45.865234,346.16602 17.007874,17.007874 0 0 1 28.857422,363.17578 17.007874,17.007874 0 0 1 11.849609,346.16602 17.007874,17.007874 0 0 1 28.857422,329.1582 Z m -12.226563,47.48633 c 0.128758,-0.0136 0.217444,0.005 0.265625,0.0547 0.05469,0.048 0.08328,0.10403 0.08594,0.16601 10e-4,0.0555 0.0033,0.13353 0.0098,0.23633 0.01096,0.45699 0.06909,0.8781 0.171874,1.26172 0.101042,0.3772 0.15129,0.6447 0.152344,0.80469 -6.88e-4,0.15345 -0.0065,0.28797 -0.01758,0.40234 -0.01115,0.11452 -0.02532,0.2293 -0.04297,0.34571 -0.04131,0.26192 -0.05596,0.47914 -0.04492,0.65039 0.0049,0.0964 -0.007,0.18266 -0.03516,0.25976 -0.02982,0.0707 -0.05437,0.1465 -0.07422,0.22852 -0.05002,0.22941 -0.02608,0.50119 0.07227,0.8164 0.194532,0.59596 0.245468,0.94247 0.152344,1.03711 -0.03982,0.0593 -0.07728,0.0862 -0.113281,0.082 -0.02948,-0.004 -0.05279,0.0152 -0.06836,0.0605 -0.01731,0.0397 -0.01943,0.12307 -0.0059,0.25195 0.0119,0.12208 0.0118,0.26304 -0.002,0.41993 -0.03073,0.40543 -0.170785,0.67606 -0.419922,0.8125 -0.152077,0.0828 -0.272174,0.10381 -0.359375,0.0644 -0.07894,-0.034 -0.146217,-0.0934 -0.203125,-0.17578 -0.05212,-0.0903 -0.100832,-0.18084 -0.146485,-0.27344 -0.04734,-0.0987 -0.106767,-0.16016 -0.175781,-0.18359 -0.288536,-0.16668 -0.456618,-0.44161 -0.503906,-0.82618 -0.01844,-0.12055 -0.04598,-0.20168 -0.08398,-0.24023 -0.03993,-0.045 -0.07265,-0.0903 -0.09961,-0.13867 -0.02052,-0.0503 -0.04565,-0.10302 -0.07422,-0.1582 -0.07084,-0.13418 -0.132174,-0.21581 -0.18164,-0.24414 -0.04947,-0.0302 -0.09354,-0.0539 -0.134766,-0.0781 -0.03643,-0.0302 -0.07439,-0.0786 -0.111328,-0.13867 -0.102058,-0.14703 -0.187508,-0.32918 -0.259766,-0.54688 -0.07213,-0.2177 -0.134361,-0.37919 -0.183593,-0.48437 -0.05083,-0.11188 -0.102125,-0.21241 -0.154297,-0.30274 -0.131206,-0.22941 -0.230528,-0.43245 -0.298828,-0.60937 -0.06168,-0.17877 -0.12896,-0.32464 -0.201172,-0.4375 -0.06736,-0.12132 -0.136895,-0.23893 -0.208984,-0.35156 -0.194612,-0.3103 -0.324071,-0.5504 -0.390626,-0.72071 -0.06168,-0.17877 -0.112882,-0.31293 -0.15039,-0.40039 -0.03073,-0.0884 -0.05841,-0.16382 -0.08203,-0.22656 -0.09761,-0.26464 0.0057,-0.42322 0.3125,-0.4707 0.06677,-0.011 0.137904,-0.0193 0.21289,-0.0254 0.08148,-0.008 0.162421,-0.0208 0.242188,-0.0352 0.07803,-0.0208 0.143974,-0.0488 0.197265,-0.084 0.05329,-0.0351 0.107095,-0.067 0.16211,-0.0957 0.118325,-0.0526 0.243586,-0.0542 0.375,-0.006 0.08544,0.0329 0.148562,0.0987 0.189453,0.19922 0.0456,0.0923 0.08646,0.2072 0.123047,0.34375 0.04142,0.12828 0.08319,0.27173 0.125,0.42774 0.04838,0.1542 0.118245,0.30807 0.208984,0.46484 0.09731,0.15534 0.16052,0.27799 0.191406,0.36719 0.02922,0.0828 0.05208,0.16439 0.06641,0.24414 0.04917,0.20976 0.108795,0.38137 0.179687,0.51562 0.0691,0.12775 0.11433,0.21731 0.134766,0.26758 0.01878,0.0438 0.03834,0.0904 0.05859,0.14063 0.0251,0.0419 0.05175,0.0782 0.08008,0.10547 0.02642,0.0189 0.05601,0.0146 0.08984,-0.0156 0.03205,-0.0378 0.03782,-0.0839 0.01563,-0.14063 -0.05645,-0.1591 -0.04821,-0.31901 0.02734,-0.47851 0.09346,-0.17121 0.08451,-0.33938 -0.0293,-0.50391 -0.107289,-0.1663 -0.172529,-0.34434 -0.195312,-0.5332 -0.02449,-0.1954 -0.03907,-0.36775 -0.04492,-0.51953 -0.0058,-0.15156 -0.02619,-0.2785 -0.06055,-0.38086 -0.03617,-0.10874 -0.07084,-0.20753 -0.101562,-0.29688 -0.03269,-0.0958 -0.05896,-0.18048 -0.07813,-0.25195 -0.01916,-0.0716 -0.0083,-0.15435 0.0293,-0.24805 0.03761,-0.0937 0.132581,-0.16785 0.285157,-0.22265 0.150814,-0.0613 0.319612,-0.0789 0.507812,-0.0527 0.02555,-0.0348 0.07211,-0.0543 0.140625,-0.0586 0.06847,-0.005 0.125188,0.0121 0.169922,0.0488 0.07059,-0.0747 0.172258,-0.11594 0.302734,-0.12305 z m -4.425781,1.1582 c 0.111462,0.0257 0.185926,0.0724 0.22461,0.13868 0.04515,0.0645 0.07891,0.13814 0.101562,0.22265 0.0209,0.0782 0.03734,0.16528 0.04883,0.25977 0.0178,0.0926 0.05031,0.18808 0.09766,0.28711 0.121229,0.21845 0.175934,0.40891 0.164063,0.57226 -0.01368,0.15685 -0.03937,0.25814 -0.07617,0.30274 -0.03854,0.0382 -0.07928,0.0655 -0.123047,0.084 -0.03727,0.0189 -0.07728,0.0377 -0.121094,0.0547 -0.03901,0.0113 -0.06952,0.0413 -0.08984,0.0957 -0.02937,0.0987 0.03205,0.43053 0.183593,0.9961 l 0.455078,1.625 c 0.111319,0.41548 0.190748,0.81199 0.236329,1.18945 0.07512,0.0983 0.158973,0.13552 0.25,0.11133 0.08453,-0.0227 0.143027,-0.0226 0.177734,0.004 0.06467,0.0593 0.100879,0.19616 0.109375,0.41016 0.0053,0.12397 0.01447,0.21826 0.02539,0.28516 0.01742,0.065 0.02952,0.12072 0.03516,0.16797 0.008,0.0813 -0.01655,0.17876 -0.07031,0.29101 -0.06536,0.0941 -0.144926,0.17233 -0.240234,0.23242 -0.09055,0.0522 -0.166992,0.0924 -0.228516,0.12305 -0.05979,0.0378 -0.123835,0.0848 -0.191406,0.14453 -0.101363,0.0899 -0.195005,0.1439 -0.28125,0.16016 -0.07979,0.0151 -0.142243,0.0238 -0.189453,0.0312 -0.03902,0.0113 -0.08538,0.034 -0.138672,0.0684 -0.04679,0.034 -0.08682,0.0524 -0.121094,0.0547 -0.0325,0.008 -0.06757,0.0114 -0.103515,0.008 -0.107978,-0.0113 -0.204537,-0.009 -0.289063,0.0137 -0.117018,0.0302 -0.247086,-0.1421 -0.390625,-0.52149 -0.06128,-0.1508 -0.103477,-0.30084 -0.128906,-0.44726 -0.02544,-0.14627 -0.02797,-0.24302 -0.0059,-0.29102 0.0203,-0.054 0.05171,-0.0942 0.09375,-0.11914 0.04029,-0.0302 0.07797,-0.0556 0.115234,-0.0723 0.03557,-0.0227 0.06885,-0.0427 0.09961,-0.0586 0.03379,-0.0302 0.03529,-0.10158 0.0039,-0.21875 -0.02653,-0.1251 -0.05072,-0.24183 -0.07227,-0.34765 -0.07008,-0.28763 -0.101332,-0.4956 -0.09375,-0.62305 0.01795,-0.19313 -0.03088,-0.34053 -0.148437,-0.44141 -0.124596,-0.12699 -0.232034,-0.39773 -0.322266,-0.8125 -0.0533,-0.25058 -0.110594,-0.45068 -0.171875,-0.60156 -0.107872,-0.29858 -0.174594,-0.50948 -0.201172,-0.63476 -0.0178,-0.0926 -0.03488,-0.1666 -0.04883,-0.21876 -0.01395,-0.0518 -0.02748,-0.0887 -0.04102,-0.11328 -0.03341,-0.0469 -0.09774,-0.0569 -0.195312,-0.0293 -0.09929,0.0189 -0.203394,-1.4e-4 -0.310547,-0.0625 -0.107176,-0.062 -0.179086,-0.18552 -0.214844,-0.3711 -0.029291,-0.18708 -0.073274,-0.35378 -0.1328124,-0.49804 -0.059539,-0.14438 -0.080747,-0.26451 -0.064453,-0.35938 0.016365,-0.0949 0.018984,-0.17233 0.00977,-0.23242 -0.00911,-0.0601 -0.012437,-0.11493 -0.011719,-0.16406 0.01115,-0.11452 0.08374,-0.19659 0.2167964,-0.2461 0.139582,-0.051 0.270335,-0.0821 0.392578,-0.0937 0.127,-0.0189 0.244449,-0.0352 0.355469,-0.0352 0.290487,-0.008 0.477981,-0.0226 0.5625,-0.0449 0.06501,-0.0189 0.136364,-0.0445 0.210938,-0.0781 0.07931,-0.0419 0.155959,-0.0793 0.230468,-0.11328 0.173337,-0.0813 0.313021,-0.10765 0.417969,-0.0801 z m -4.5351561,1.25782 c 0.083244,-10e-4 0.1506387,0.004 0.203125,0.0195 0.050729,0.008 0.1004952,0.0181 0.1464843,0.0332 0.050729,0.008 0.1153273,-2e-5 0.1933594,-0.0195 0.084529,-0.0227 0.1517054,-0.0188 0.2011719,0.008 0.04947,0.0302 0.09615,0.0643 0.1425781,0.10742 0.052951,0.0416 0.1085206,0.083 0.1679688,0.12305 0.059448,0.0397 0.1283235,0.0606 0.2050781,0.0606 0.081483,-0.008 0.1354041,-0.003 0.1601563,0.0117 0.029443,0.004 0.054199,0.0188 0.074219,0.043 0.018104,0.0151 0.036737,0.0385 0.058594,0.0684 0.028195,0.0265 0.088971,0.067 0.1796876,0.11915 v -0.004 c 0.088925,0.0457 0.1604828,0.13113 0.2148437,0.25586 0.052573,0.1183 0.1467244,0.30163 0.2832031,0.55078 0.1364338,0.24907 0.2005268,0.53923 0.1914068,0.86914 -0.005,0.18935 9.74e-4,0.3409 0.01758,0.45508 0.01674,0.21846 0.01776,0.40872 0.0059,0.57226 -0.0072,0.15534 -0.0042,0.34734 0.0078,0.57422 0.01024,0.22035 3.82e-4,0.41658 -0.0293,0.5918 -0.03145,0.16894 -0.05956,0.29519 -0.08594,0.37891 -0.019842,0.082 -0.039833,0.15733 -0.05664,0.22461 -0.037962,0.17045 -0.056102,0.29744 -0.054687,0.38086 0.00801,0.0813 0.010403,0.17505 0.00391,0.28124 -0.00163,0.0979 -0.014067,0.19761 -0.035156,0.30079 -0.067793,0.24113 -0.195292,0.36037 -0.3847656,0.35547 -0.1740246,0.23469 -0.2812218,0.4118 -0.3183594,0.5332 -0.038876,0.1149 -0.07737,0.20238 -0.1171875,0.26172 -0.039817,0.0593 -0.084073,0.10698 -0.1308594,0.14062 -0.040294,0.0302 -0.08103,0.059 -0.1230469,0.084 -0.042055,0.0264 -0.080413,0.0609 -0.1171875,0.10547 -0.036813,0.0446 -0.096479,0.0885 -0.1757812,0.13085 -0.071063,0.0469 -0.1505273,0.0712 -0.2402344,0.0742 -0.2184983,0.0189 -0.3736406,-0.12131 -0.4667969,-0.41797 -0.1864478,-0.0189 -0.3118262,-0.0535 -0.3730468,-0.0996 -0.1353827,-0.0892 -0.2266159,-0.22412 -0.2753907,-0.40626 -0.050521,-0.18858 -0.081653,-0.3413 -0.091797,-0.45703 -0.00533,-0.12396 -0.011141,-0.24038 -0.019531,-0.34961 -0.00941,-0.2691 -0.053485,-0.46897 -0.1308594,-0.60156 -0.079083,-0.13908 -0.1283568,-0.27325 -0.1484375,-0.40039 -0.015383,-0.13531 -0.048592,-0.27591 -0.1015625,-0.42187 -0.048382,-0.15421 -0.086538,-0.29141 -0.1113281,-0.41016 -0.018444,-0.12057 -0.037266,-0.23206 -0.058594,-0.33789 -0.016706,-0.11376 -0.038103,-0.21751 -0.0625,-0.30859 -0.024378,-0.0911 -0.065083,-0.17063 -0.125,-0.23829 -0.061663,-0.0741 -0.1173769,-0.14908 -0.1660157,-0.22656 -0.042119,-0.0794 -0.079119,-0.15267 -0.1113281,-0.2207 -0.066508,-0.17046 -0.1327784,-0.28971 -0.1992188,-0.35547 -0.059924,-0.0677 -0.1016736,-0.15394 -0.1230468,-0.25977 -0.023017,-0.11225 -0.061301,-0.21731 -0.1152344,-0.31445 -0.049085,-0.10545 -0.081971,-0.18556 -0.097656,-0.24414 -0.010847,-0.0669 -0.033409,-0.12974 -0.070313,-0.18945 -0.03205,-0.068 -0.037947,-0.11317 -0.015625,-0.13281 0.033789,-0.0302 0.048808,-0.12188 0.042969,-0.27344 -0.00582,-0.15156 0.00812,-0.24837 0.044922,-0.29297 0.035074,-0.051 0.076049,-0.0986 0.1210937,-0.13867 0.043298,-0.0465 0.096654,-0.0846 0.1582032,-0.11524 0.1443173,-0.0593 0.2870021,-0.0679 0.4296874,-0.0293 0.1492045,0.0378 0.2518329,0.0438 0.3085938,0.0215 0.063247,-0.0265 0.1233499,-0.0626 0.1796875,-0.11133 0.1853934,-0.14022 0.3752507,-0.2369 0.5703125,-0.28906 0.1950463,-0.0522 0.3349301,-0.0752 0.4199219,-0.0703 z m 0.265625,2.50586 c -0.080243,-0.0113 -0.1436114,0.0263 -0.1894531,0.11328 v 0.002 c -0.045842,0.0888 -0.040909,0.21393 0.015625,0.37305 0.054709,0.15269 0.1262714,0.32501 0.2128906,0.51758 0.084779,0.18633 0.1416057,0.34473 0.1699218,0.47656 0.028271,0.1319 0.04883,0.26189 0.0625,0.39062 0.020221,0.127 0.037304,0.25589 0.050781,0.38477 0.020221,0.12699 0.046985,0.25179 0.080078,0.375 0.03137,0.11679 0.07073,0.19677 0.1171875,0.24023 0.046454,0.0435 0.087964,0.0594 0.1269531,0.0488 0.037266,-0.0189 0.068861,-0.0542 0.095703,-0.10937 0.025058,-0.0624 0.030264,-0.14953 0.013672,-0.26368 -0.011905,-0.12207 -8.11e-5,-0.24391 0.037109,-0.36523 0.041919,-0.12964 0.068756,-0.25601 0.078125,-0.37695 0.00941,-0.12095 0.00937,-0.20805 0.00195,-0.26172 -0.00104,-0.0556 -0.00392,-0.10371 -0.00781,-0.14453 -0.00563,-0.0472 -0.013183,-0.0933 -0.025391,-0.13868 -0.00737,-0.0537 -0.00848,-0.13699 -0.00391,-0.25 0.00465,-0.11261 -0.017613,-0.20395 -0.064453,-0.27539 -0.042119,-0.0794 -0.084079,-0.16899 -0.125,-0.26953 -0.04077,-0.10053 -0.087314,-0.18965 -0.1425781,-0.26562 -0.050408,-0.0843 -0.1333655,-0.12828 -0.2460937,-0.13281 -0.048971,-7.2e-4 -0.09657,-0.007 -0.1425782,-0.0254 -0.039481,-0.0189 -0.077511,-0.0339 -0.1152343,-0.043 z m 13.0976561,2.96679 a 9.8267712,9.8267712 0 0 1 9.826172,9.82618 9.8267712,9.8267712 0 0 1 -9.826172,9.82617 9.8267712,9.8267712 0 0 1 -9.826172,-9.82617 9.8267712,9.8267712 0 0 1 9.826172,-9.82618 z m 23.609375,2.20313 v 0.002 c 0.148082,0.008 0.286186,0.0225 0.414063,0.041 0.343294,0.0404 0.568083,0.0576 0.675781,0.0508 0.107679,-0.0113 0.21954,-0.0267 0.333984,-0.041 0.114407,-0.0189 0.224353,-0.0271 0.332032,-0.0195 0.262487,0.0113 0.411659,0.12126 0.445312,0.32422 0.02003,0.14816 -0.01399,0.25499 -0.101562,0.32227 -0.09422,0.0673 -0.195056,0.12463 -0.302735,0.17187 -0.114406,0.0404 -0.215238,0.084 -0.302734,0.13086 -0.0875,0.0404 -0.116796,0.10271 -0.08984,0.18359 0.02003,0.0805 0.106872,0.12998 0.261719,0.15039 0.148082,0.0189 0.326477,0.0251 0.535156,0.0176 0.20194,-0.008 0.414592,-0.0229 0.636719,-0.041 0.215395,-0.0189 0.399866,-0.0338 0.554687,-0.041 0.148082,-0.008 0.300284,-0.01 0.455078,-0.0176 0.15481,-0.0113 0.298964,-0.0195 0.433594,-0.0195 0.289436,0 0.488009,0.0406 0.595703,0.1211 0.05386,0.0404 0.117366,0.0605 0.191407,0.0605 0.07404,0 0.151653,-0.008 0.232421,-0.0195 0.08077,-0.0189 0.161419,-0.0405 0.242188,-0.0605 0.08077,-0.0189 0.178525,-0.0293 0.292969,-0.0293 0.269253,0 0.456755,0.12101 0.564453,0.36328 0.0404,0.0873 0.108901,0.16811 0.203125,0.24219 0.09422,0.0741 0.15473,0.13143 0.18164,0.17187 0.03364,0.034 0.0426,0.0772 0.0293,0.13086 -0.0068,0.0472 -0.02987,0.0841 -0.07031,0.11133 -0.03364,0.0189 -0.07093,0.0405 -0.111328,0.0605 -0.107679,0.0404 -0.177262,0.0978 -0.210938,0.17187 -0.02003,0.0873 -0.09472,0.13975 -0.222656,0.16016 -0.127899,0.0113 -0.239723,0.0217 -0.333985,0.0293 -0.10095,0 -0.221926,0.008 -0.363281,0.0195 -0.141354,0.0113 -0.256254,0.056 -0.34375,0.13085 -0.0875,0.0741 -0.139973,0.1344 -0.160156,0.18165 -0.02683,0.0472 -0.08442,0.0762 -0.171875,0.0898 -0.09422,0.0113 -0.18898,0.0113 -0.283203,0 -0.09422,-0.0189 -0.198094,-0.0435 -0.3125,-0.0703 -0.329839,-0.0809 -0.640255,-0.12444 -0.929688,-0.13086 -0.538476,-0.0189 -0.895305,-0.0189 -1.070312,0 -0.350022,0.0265 -0.523438,0.12181 -0.523438,0.2832 0.0068,0.0805 0.0421,0.13591 0.109375,0.16992 0.06059,0.034 0.135161,0.0709 0.222657,0.11133 0.222122,0.0941 0.282591,0.26649 0.18164,0.51562 -0.0404,0.0873 -0.10391,0.14505 -0.191406,0.17188 -0.0875,0.0189 -0.188328,0.0342 -0.302734,0.041 -0.121134,0 -0.245148,0.003 -0.373047,0.0117 -0.134627,0 -0.260594,0.0265 -0.375,0.0723 -0.121134,0.0404 -0.234081,0.0806 -0.341797,0.12109 -0.107679,0.0404 -0.21654,0.0576 -0.324219,0.0508 -0.107679,-0.008 -0.211549,-0.0341 -0.3125,-0.0723 -0.100951,-0.0472 -0.201745,-0.0595 -0.302734,-0.0391 -0.100951,0.0113 -0.198708,-0.008 -0.292969,-0.0605 -0.100951,-0.0605 -0.144314,-0.1663 -0.130859,-0.31445 v -0.002 c 0.01323,-0.15458 0.01953,-0.28989 0.01953,-0.40429 -0.0068,-0.12133 -0.0068,-0.29969 0,-0.53516 0.02003,-0.39039 -0.006,-0.66659 -0.08008,-0.82812 -0.168265,-0.32996 -0.188406,-0.59498 -0.06055,-0.79688 0.05386,-0.0941 0.08615,-0.18575 0.09961,-0.27344 0.01323,-0.0873 -0.02683,-0.21166 -0.121093,-0.37304 -0.07404,-0.175 -0.08919,-0.31938 -0.04883,-0.4336 0.0404,-0.11452 0.0898,-0.1979 0.150391,-0.25195 0.06059,-0.054 0.169409,-0.088 0.324219,-0.10156 0.148082,-0.0189 0.295296,-0.0231 0.443359,-0.0117 z m 1.675781,4.6875 c 0.107679,-0.008 0.205473,-0.003 0.292969,0.0117 0.195213,0.0404 0.292969,0.1179 0.292969,0.23242 -0.0068,0.10091 -0.03801,0.17542 -0.0918,0.22265 -0.06059,0.0404 -0.124093,0.0743 -0.191406,0.10157 -0.07404,0.0265 -0.137549,0.0562 -0.191406,0.0898 -0.06059,0.0265 -0.0918,0.0905 -0.0918,0.19141 0,0.29631 -0.02911,0.49471 -0.08984,0.5957 -0.06731,0.0941 -0.104638,0.17983 -0.111328,0.25391 -0.01323,0.0741 -0.0073,0.14366 0.01953,0.21093 0.06059,0.14136 0.17241,0.2267 0.333984,0.25391 0.161537,0.0189 0.302665,0.0342 0.423828,0.0391 0.121134,0.008 0.232996,0.008 0.333985,0 0.235578,-0.0113 0.368694,-0.056 0.402344,-0.13086 0.02683,-0.0809 0.03175,-0.1475 0.01172,-0.20117 -0.02683,-0.0541 -0.05816,-0.10844 -0.0918,-0.16211 -0.107677,-0.16138 -0.157118,-0.3258 -0.15039,-0.49414 0,-0.17499 0.06654,-0.30426 0.201172,-0.38476 0.134627,-0.0873 0.266647,-0.12456 0.394531,-0.11133 0.121134,0.0113 0.24211,0.0267 0.363281,0.041 0.121134,0.008 0.234081,0.0225 0.341797,0.041 0.41732,0.0941 0.499943,0.28992 0.244141,0.58594 -0.02683,0.38366 0.01926,0.62253 0.140625,0.71679 0.03364,0.0189 0.103259,0.0405 0.210937,0.0606 0.107679,0.0189 0.222579,0.0231 0.34375,0.0117 0.316347,-0.034 0.485666,-0.18406 0.50586,-0.45313 0.01323,-0.17499 -0.01172,-0.33337 -0.07227,-0.4746 -0.06059,-0.14816 -0.127093,-0.24573 -0.201172,-0.29297 -0.08077,-0.0404 -0.124132,-0.0915 -0.130859,-0.15235 -0.01323,-0.0605 -0.02445,-0.11291 -0.03125,-0.16015 -0.01323,-0.0473 -0.01953,-0.0957 -0.01953,-0.14258 0,-0.0473 0.0059,-0.0934 0.01953,-0.14063 0.0404,-0.12132 0.135121,-0.19286 0.283203,-0.21289 0.148082,-0.0265 0.283125,-0.0115 0.404297,0.041 0.121134,0.0541 0.232995,0.0909 0.333984,0.11133 0.09422,0.0113 0.163807,0.0266 0.210938,0.041 0.04713,0.0113 0.107599,0.0531 0.18164,0.1211 0.06731,0.0605 0.124745,0.10995 0.171875,0.15039 0.04713,0.034 0.03817,0.0914 -0.0293,0.17187 -0.114406,0.14816 -0.0479,0.32657 0.201172,0.53516 0.07404,0.054 0.128434,0.1114 0.16211,0.17187 0.03364,0.0605 0.04579,0.15546 0.03906,0.28321 -0.0068,0.12812 -0.0391,0.22903 -0.09961,0.30273 -0.06059,0.0741 -0.121055,0.1407 -0.181641,0.20117 -0.127899,0.10092 -0.176254,0.27628 -0.142578,0.52539 0.02003,0.14816 -0.04336,0.26917 -0.191406,0.36328 -0.02003,0.0189 -0.05743,0.0379 -0.111328,0.0508 -0.05386,0.008 -0.114328,0.0142 -0.181641,0.0293 -0.17503,0.0473 -0.286854,0.0928 -0.333984,0.13281 -0.05386,0.034 -0.120366,0.0522 -0.201172,0.0586 -0.08077,0 -0.164495,0.008 -0.251953,0.0195 -0.09422,0.0113 -0.16276,0.0217 -0.203125,0.0293 -0.04713,0.008 -0.09961,0.003 -0.160157,-0.0117 -0.06059,-0.0189 -0.129084,-0.0293 -0.203125,-0.0293 v 0.002 l -0.513672,0.0117 c -0.09422,0 -0.182903,-0.004 -0.263671,-0.0117 -0.0875,-0.008 -0.194367,3e-5 -0.322266,0.0195 -0.222123,0.034 -0.383401,0.0488 -0.484375,0.0488 -0.107679,-0.008 -0.191405,-0.008 -0.251953,0 -0.06731,0 -0.129698,0.004 -0.183594,0.0195 -0.08077,0.0189 -0.207801,0.0715 -0.382812,0.15235 -0.17503,0.0741 -0.362533,0.11133 -0.564453,0.11133 -0.201941,0 -0.365176,-0.0436 -0.486329,-0.13086 -0.121133,-0.0805 -0.245147,-0.11183 -0.373047,-0.0918 -0.127898,0.0189 -0.262942,0.0379 -0.404296,0.0508 -0.148082,0.008 -0.295293,0.008 -0.44336,0 -0.154809,-0.008 -0.30395,-0.0399 -0.445312,-0.0996 -0.343295,-0.14816 -0.507604,-0.4445 -0.494141,-0.88867 0.0068,-0.27591 0.03516,-0.51486 0.08203,-0.7168 0.04713,-0.20182 0.06728,-0.35112 0.06055,-0.44531 -0.0068,-0.0941 -0.04105,-0.23849 -0.101562,-0.43359 -0.107679,-0.28271 -0.10164,-0.50752 0.01953,-0.67578 0.03364,-0.0473 0.05989,-0.0928 0.08008,-0.13282 0.01323,-0.0472 0.03851,-0.0859 0.07227,-0.11914 0.127899,-0.11452 0.407119,-0.14843 0.83789,-0.10156 0.1279,0.0113 0.254929,0.0263 0.382813,0.041 0.302891,0.034 0.529652,0.034 0.677734,0 0.148082,-0.034 0.278134,-0.0508 0.392578,-0.0508 z m -0.746093,4.06055 c 0.04713,0.008 0.127743,0.056 0.242187,0.14257 0.114406,0.0873 0.23842,0.13975 0.373047,0.16016 0.127899,0.0113 0.23477,0.0155 0.322266,0.0117 0.08077,-0.008 0.152304,-0.008 0.21289,0 0.148082,0.008 0.248876,0.088 0.302735,0.24219 0.05386,0.13455 0.05096,0.23842 -0.0098,0.3125 -0.06059,0.0741 -0.138198,0.13439 -0.232422,0.18164 -0.100951,0.0472 -0.184677,0.0841 -0.251953,0.11132 -0.07404,0.0189 -0.114328,0.0577 -0.121094,0.11133 -0.02003,0.0941 -0.01114,0.16899 0.0293,0.22266 0.0404,0.0472 0.07465,0.0841 0.101563,0.11133 0.05386,0.054 0.09115,0.1114 0.111328,0.17187 0.02003,0.0541 0.04033,0.0976 0.06055,0.13086 0.04713,0.0673 0.124706,0.0933 0.232421,0.0801 0.208668,-0.0265 0.525164,-0.25963 0.949219,-0.69727 0.08077,-0.0809 0.167458,-0.17391 0.261719,-0.28125 0.09422,-0.11452 0.201094,-0.22626 0.322266,-0.33398 0.289436,-0.24227 0.616995,-0.37758 0.980468,-0.4043 0.370205,-0.0265 0.692777,0.0264 0.96875,0.16211 0.222123,0.10772 0.366311,0.23661 0.433594,0.38477 0.06059,0.11452 0.141199,0.19003 0.242188,0.23047 l 0.21289,0.0918 c 0.0404,0.0189 0.07465,0.0636 0.101563,0.13086 0.03364,0.0605 0.04579,0.13201 0.03906,0.21289 -0.0068,0.0805 -0.02379,0.15639 -0.05078,0.23047 -0.02003,0.0673 -0.04637,0.13251 -0.08008,0.19336 -0.02683,0.0541 -0.04405,0.10019 -0.05078,0.14063 -0.0068,0.034 0.0072,0.0679 0.04102,0.10156 0.02683,0.034 0.05621,0.066 0.08984,0.0996 0.100951,0.10091 0.138238,0.19255 0.111328,0.27344 -0.02003,0.0805 -0.05743,0.17548 -0.111328,0.2832 -0.05386,0.10772 -0.120366,0.21121 -0.201172,0.3125 -0.282709,0.36359 -0.571024,0.4876 -0.867187,0.37305 -0.195213,-0.0741 -0.333279,-0.15451 -0.414063,-0.24219 -0.08077,-0.0941 -0.121094,-0.16899 -0.121094,-0.22266 0,-0.0873 0.03211,-0.14466 0.09961,-0.17187 0.06059,-0.034 0.114978,-0.06 0.162109,-0.0801 0.0404,-0.0189 0.07465,-0.0435 0.101563,-0.0703 0.02683,-0.0265 0.05317,-0.0674 0.08008,-0.1211 0.02683,-0.0605 0.04402,-0.12413 0.05078,-0.1914 0.01323,-0.16819 -0.05516,-0.29742 -0.203125,-0.38477 -0.148082,-0.0873 -0.309356,-0.12159 -0.484375,-0.10156 -0.316346,0.0472 -0.449463,0.11582 -0.402344,0.20312 0.04713,0.0741 0.04999,0.16415 0.0098,0.27149 -0.04713,0.10771 -0.1046,0.16507 -0.171875,0.17187 -0.07404,0.008 -0.14554,0.0225 -0.212891,0.041 -0.06731,0.0189 -0.13082,0.0435 -0.191406,0.0703 -0.154809,0.0605 -0.238498,0.11487 -0.251953,0.16211 -0.01323,0.0541 -0.01953,0.12659 -0.01953,0.2207 0,0.0873 -0.05747,0.18526 -0.171875,0.29297 -0.121134,0.10772 -0.270313,0.18518 -0.445313,0.23242 -0.181757,0.0473 -0.336982,0.0875 -0.464844,0.1211 -0.134626,0.034 -0.238496,0.065 -0.3125,0.0918 -0.07404,0.0265 -0.151654,0.0503 -0.232421,0.0703 -0.255761,0.0673 -0.584424,0.0718 -0.988282,0.0117 -0.235578,-0.0405 -0.442188,-0.11494 -0.617187,-0.22266 -0.181758,-0.10772 -0.360153,-0.22873 -0.535157,-0.36328 -0.343293,-0.25588 -0.582177,-0.49164 -0.716796,-0.70703 -0.134627,-0.21544 -0.146745,-0.37978 -0.03906,-0.49414 0.0875,-0.10092 0.124783,-0.2097 0.111328,-0.32422 -0.02003,-0.12133 -0.04033,-0.21593 -0.06055,-0.28321 l -0.04102,-0.18164 c -0.02683,-0.11452 -0.0239,-0.22765 0.0098,-0.34179 0.03364,-0.12133 0.148538,-0.23011 0.34375,-0.32422 0.100952,-0.0473 0.187678,-0.0934 0.261719,-0.14063 0.07404,-0.054 0.14554,-0.1051 0.212891,-0.15234 0.161537,-0.10091 0.29658,-0.15827 0.404297,-0.17188 0.100951,-0.0189 0.173572,-0.0435 0.220703,-0.0703 0.04713,-0.034 0.09241,-0.0571 0.132812,-0.0703 l -0.002,-0.002 c 0.0404,-0.0189 0.08568,-0.0271 0.132813,-0.0195 z m -1.240235,4.23632 c 0.139639,-0.017 0.317818,-0.0139 0.533203,0.01 0.1279,0.0113 0.254929,0.0263 0.382813,0.041 0.302891,0.034 0.529652,0.034 0.677734,0 0.148082,-0.034 0.278134,-0.0488 0.392578,-0.0488 0.107679,-0.008 0.205473,-0.003 0.292969,0.0117 0.195213,0.0404 0.292969,0.1179 0.292969,0.23242 -0.0068,0.10091 -0.03801,0.17541 -0.0918,0.22265 -0.06059,0.0404 -0.124093,0.0743 -0.191406,0.10157 -0.07404,0.0265 -0.137549,0.0558 -0.191406,0.0898 -0.06059,0.0265 -0.0918,0.0909 -0.0918,0.19141 0,0.29631 -0.02911,0.49475 -0.08984,0.5957 -0.06731,0.0941 -0.104638,0.17983 -0.111328,0.25391 -0.01323,0.0741 -0.0073,0.14366 0.01953,0.21093 0.06059,0.14136 0.17241,0.2267 0.333984,0.25391 0.161537,0.0189 0.302665,0.0341 0.423828,0.0391 0.121134,0.008 0.232996,0.008 0.333985,0 0.235578,-0.0113 0.368694,-0.056 0.402344,-0.13086 0.02683,-0.0809 0.03175,-0.1475 0.01172,-0.20117 -0.02683,-0.0541 -0.05816,-0.10844 -0.0918,-0.16211 -0.107677,-0.16139 -0.157118,-0.3258 -0.15039,-0.49414 0,-0.17499 0.06654,-0.30426 0.201172,-0.38477 0.134627,-0.0873 0.266647,-0.12298 0.394531,-0.10937 0.121134,0.0113 0.24211,0.0266 0.363281,0.0391 0.121134,0.008 0.234081,0.0225 0.341797,0.041 0.41732,0.0941 0.499943,0.28988 0.244141,0.58594 -0.02683,0.38364 0.01926,0.62257 0.140625,0.71679 0.03364,0.0189 0.103259,0.0405 0.210937,0.0606 0.107679,0.0189 0.222579,0.0231 0.34375,0.0117 0.316347,-0.034 0.485666,-0.18598 0.50586,-0.45508 0.01323,-0.17499 -0.01172,-0.33333 -0.07227,-0.47461 -0.06059,-0.14816 -0.127093,-0.24572 -0.201172,-0.29297 -0.08077,-0.0404 -0.124132,-0.0915 -0.130859,-0.15234 -0.01323,-0.0605 -0.02445,-0.11291 -0.03125,-0.16016 -0.01323,-0.0472 -0.01953,-0.0953 -0.01953,-0.14258 0,-0.0472 0.0059,-0.0934 0.01953,-0.14062 0.0404,-0.12132 0.135121,-0.19286 0.283203,-0.21289 0.148082,-0.0265 0.283125,-0.0115 0.404297,0.041 0.121134,0.054 0.232995,0.0913 0.333984,0.11133 0.09422,0.0113 0.163807,0.0263 0.210938,0.041 0.04713,0.0113 0.107599,0.0531 0.18164,0.12109 0.06731,0.0605 0.124745,0.10995 0.171875,0.15039 0.04713,0.034 0.03817,0.091 -0.0293,0.17188 -0.114406,0.14815 -0.0479,0.32656 0.201172,0.53515 0.07404,0.0541 0.128434,0.11141 0.16211,0.17188 0.03364,0.0605 0.04579,0.15545 0.03906,0.2832 -0.0068,0.12813 -0.0391,0.22866 -0.09961,0.30274 -0.06059,0.0741 -0.121055,0.14069 -0.181641,0.20117 -0.127899,0.10091 -0.176254,0.27628 -0.142578,0.52539 0.02003,0.14815 -0.04336,0.26917 -0.191406,0.36328 -0.02003,0.0189 -0.05743,0.0379 -0.111328,0.0508 -0.05386,0.008 -0.114328,0.018 -0.181641,0.0293 -0.17503,0.0472 -0.286854,0.0904 -0.333984,0.13086 -0.05386,0.034 -0.120366,0.0541 -0.201172,0.0605 -0.08077,0 -0.164495,0.008 -0.251953,0.0195 -0.09422,0.0113 -0.16276,0.0217 -0.203125,0.0293 -0.04713,0.008 -0.09961,0.005 -0.160157,-0.01 -0.06059,-0.0189 -0.129084,-0.0312 -0.203125,-0.0312 l -0.513672,0.0117 c -0.09422,0 -0.182903,-0.004 -0.263671,-0.0117 -0.0875,-0.008 -0.194367,2e-5 -0.322266,0.0195 -0.222123,0.034 -0.383401,0.0508 -0.484375,0.0508 -0.107679,-0.008 -0.191405,-0.008 -0.251953,0 -0.06731,0 -0.129698,0.006 -0.183594,0.0176 -0.08077,0.0189 -0.207801,0.0695 -0.382812,0.15039 -0.17503,0.0741 -0.362533,0.11132 -0.564453,0.11132 -0.201941,0 -0.365176,-0.0436 -0.486329,-0.13085 -0.121133,-0.0809 -0.245147,-0.11021 -0.373047,-0.0899 -0.127898,0.0189 -0.262942,0.0379 -0.404296,0.0508 -0.148082,0.008 -0.295293,0.008 -0.44336,0 -0.154809,-0.008 -0.30395,-0.0418 -0.445312,-0.10156 -0.343295,-0.14816 -0.507604,-0.4445 -0.494141,-0.88867 0.0068,-0.27591 0.03516,-0.51486 0.08203,-0.7168 0.04713,-0.2022 0.06728,-0.35112 0.06055,-0.44531 -0.0068,-0.0941 -0.04105,-0.2385 -0.101562,-0.43359 -0.107679,-0.28271 -0.10164,-0.50752 0.01953,-0.67579 0.03364,-0.0472 0.05989,-0.0908 0.08008,-0.13086 0.01323,-0.0472 0.03851,-0.0874 0.07227,-0.12109 0.06395,-0.0573 0.165048,-0.0944 0.304687,-0.11133 z m -9.65625,3.58789 c 0.121157,-0.0151 0.273339,0.008 0.455078,0.0801 0.05385,0.0189 0.100241,0.0312 0.140625,0.0312 h 0.121094 c 0.121157,0 0.212859,0.007 0.273438,0.0293 0.06058,0.0189 0.111959,0.0293 0.152343,0.0293 h 0.140625 c 0.107698,-0.0113 0.211538,0.004 0.3125,0.0508 0.06058,0.0265 0.111956,0.0391 0.152344,0.0391 h 0.09961 c 0.0875,0 0.173137,0.0485 0.253906,0.14258 0.161544,0.15458 0.242187,0.28156 0.242187,0.38281 0,0.0189 -0.008,0.0405 -0.02148,0.0605 -0.01346,0.0189 -0.02559,0.0514 -0.03906,0.0918 -0.05385,0.16139 -0.0881,0.33188 -0.101562,0.51368 -0.01346,0.17499 -0.01045,0.30426 0.0098,0.38476 0.04038,0.20183 0.138159,0.3258 0.292968,0.37305 0.161545,0.0541 0.285547,0.0399 0.373047,-0.041 0.04038,-0.034 0.06857,-0.0709 0.08203,-0.11133 0.01346,-0.0404 0.01646,-0.0773 0.0098,-0.11132 -0.01346,-0.0404 -0.01346,-0.0895 0,-0.15039 0.01346,-0.0673 0.03058,-0.13585 0.05078,-0.20313 0.04039,-0.18179 0.04645,-0.30243 0.01953,-0.36328 -0.03364,-0.0673 -0.04774,-0.11083 -0.04102,-0.13086 0.0067,-0.0265 0.01779,-0.0473 0.03125,-0.0605 0.04712,-0.0472 0.07031,-0.0908 0.07031,-0.13086 -0.0067,-0.10771 0.03966,-0.18221 0.140625,-0.22265 0.09422,-0.0404 0.212162,-0.0334 0.353516,0.0195 0.02003,0 0.07154,0.007 0.152344,0.0293 0.161537,0.0472 0.271445,0.0723 0.332031,0.0723 0.06059,-0.008 0.126046,0.003 0.193359,0.0312 0.06059,0.0265 0.113064,0.0645 0.160157,0.11133 0.100951,0.11452 0.132196,0.2385 0.0918,0.37305 -0.02683,0.0605 -0.0642,0.11486 -0.111329,0.16211 -0.100951,0.34318 -0.07777,0.57414 0.07031,0.69531 0.08077,0.0673 0.152306,0.10452 0.21289,0.11133 0.06059,0.008 0.167457,0.0117 0.322266,0.0117 h 0.373047 c 0.06059,-0.0873 0.132084,-0.16811 0.212891,-0.24219 0.07404,-0.0741 0.114366,-0.16415 0.121093,-0.27149 0.0068,-0.10771 7.49e-4,-0.20232 -0.01953,-0.2832 -0.02683,-0.0873 -0.05512,-0.16811 -0.08203,-0.24219 -0.06731,-0.16138 -0.07624,-0.31068 -0.0293,-0.44531 0.0404,-0.13455 0.09787,-0.21794 0.171875,-0.25195 0.07404,-0.034 0.171797,-0.0415 0.292969,-0.0195 0.121171,0.0189 0.210898,0.0293 0.271484,0.0293 0.05386,-0.008 0.105213,-0.01 0.152344,-0.01 0.114406,0 0.224352,0.0436 0.332031,0.13086 0.141354,0.0941 0.230034,0.18279 0.263672,0.26367 0.02683,0.0809 0.03314,0.18475 0.01953,0.3125 -0.02003,0.12812 -0.01411,0.23162 0.01953,0.3125 0.02683,0.0809 0.06424,0.15538 0.111328,0.22265 0.04713,0.0605 0.09049,0.12079 0.130859,0.18165 0.06731,0.1009 0.06731,0.21601 0,0.34374 -0.02683,0.0472 -0.05317,0.0934 -0.08008,0.14063 -0.06059,0.12132 -0.08681,0.27021 -0.08008,0.44531 0.01323,0.17499 -0.03516,0.32846 -0.142578,0.46289 -0.114407,0.13455 -0.252507,0.20609 -0.414063,0.21289 -0.161537,0 -0.274483,-0.0123 -0.341797,-0.0312 -0.07404,-0.0189 -0.131472,-0.0405 -0.171875,-0.0605 -0.0875,-0.0265 -0.156032,-0.0115 -0.203125,0.041 -0.127899,0.16139 -0.295257,0.21874 -0.503906,0.17188 -0.107679,-0.0189 -0.191405,-0.0405 -0.251953,-0.0605 -0.06059,-0.0189 -0.126046,-0.0209 -0.19336,-0.01 -0.07404,0.0113 -0.137547,0.0176 -0.191406,0.0176 -0.06059,-0.008 -0.118016,-0.008 -0.171875,0 -0.107678,0.0113 -0.168185,0.059 -0.18164,0.14063 -0.01323,0.10091 -0.120212,0.16986 -0.322266,0.20312 -0.195213,0.0404 -0.390745,0.0263 -0.585937,-0.041 -0.195213,-0.0741 -0.347376,-0.10503 -0.455079,-0.0918 -0.114425,0.0113 -0.218268,0.0238 -0.3125,0.0312 l -0.392578,-0.0117 c -0.195197,0 -0.32722,0.019 -0.394531,0.0508 -0.06731,0.034 -0.165081,0.0418 -0.292969,0.0293 -0.134619,-0.0113 -0.235425,-0.007 -0.302734,0.0117 -0.07404,0.0189 -0.154684,0.0312 -0.242188,0.0312 v 0.002 l -0.576171,-0.0176 c -0.09423,0 -0.18702,0.0104 -0.28125,0.0293 -0.09423,0.0113 -0.192003,-0.0114 -0.292969,-0.0723 -0.107698,-0.0673 -0.202431,-0.16484 -0.283203,-0.29296 -0.08077,-0.12813 -0.121094,-0.27214 -0.121094,-0.4336 0,-0.16138 0.02623,-0.28874 0.08008,-0.38281 0.05385,-0.0941 0.09721,-0.18279 0.130859,-0.26367 0.03364,-0.0809 0.06184,-0.17095 0.08203,-0.27149 0.03364,-0.21543 0.0024,-0.42508 -0.0918,-0.62695 -0.107698,-0.22224 -0.09965,-0.40064 0.02148,-0.53516 0.0067,-0.14135 -0.0074,-0.28839 -0.04102,-0.44336 -0.05385,-0.25586 -0.05687,-0.43116 -0.0098,-0.52539 0.06058,-0.10431 0.150328,-0.16463 0.271484,-0.18164 z M 46.5,403.93555 c 0.148082,0.0113 0.251952,0.0304 0.3125,0.0508 0.05386,0.0113 0.105213,0.0304 0.152344,0.0508 0.100951,0.034 0.204821,0.0482 0.3125,0.041 0.174992,-0.0113 0.313096,0.001 0.414062,0.041 0.09422,0.0404 0.19198,0.0787 0.292969,0.11914 0.249033,0.11452 0.390171,0.24045 0.423828,0.375 0.01323,0.0741 0.0276,0.1344 0.04102,0.18164 0.01323,0.0473 0.04264,0.0733 0.08984,0.0801 0.03364,0.0113 0.07396,-0.008 0.121094,-0.0605 0.0404,-0.054 0.105864,-0.10648 0.19336,-0.16015 0.0875,-0.0605 0.143011,-0.11191 0.169922,-0.15235 0.02683,-0.0404 0.04405,-0.0777 0.05078,-0.11133 0.02003,-0.1009 0.04532,-0.16494 0.07227,-0.1914 0.07404,-0.0605 0.13451,-0.10403 0.181641,-0.13086 0.04713,-0.034 0.116715,-0.044 0.210937,-0.0293 0.09422,0.0113 0.19198,0.0113 0.292969,0 0.100951,-0.0113 0.207822,-0.0266 0.322266,-0.0391 0.107679,-0.0113 0.199359,-0.0113 0.273437,0 0.07404,0.008 0.128434,0.0117 0.16211,0.0117 l 0.261718,-0.0391 c 0.161538,0 0.293558,0.0465 0.394532,0.14062 0.100951,0.0941 0.158457,0.16861 0.171875,0.22266 0.01323,0.054 0.0083,0.10548 -0.01172,0.15234 -0.02003,0.0473 -0.04637,0.0839 -0.08008,0.11719 -0.02683,0.034 -0.04405,0.062 -0.05078,0.082 -0.01323,0.0189 -0.01953,0.0464 -0.01953,0.0801 -0.0068,0.0265 -0.01764,0.0601 -0.03125,0.0937 -0.03364,0.12132 -0.26759,0.22519 -0.705078,0.3125 -0.215395,0.0472 -0.353461,0.12767 -0.414062,0.24219 -0.0875,0.17499 -0.208473,0.26997 -0.363281,0.2832 -0.07404,0.008 -0.176789,0.01 -0.304688,0.0176 -0.255761,0.0265 -0.412078,0.11551 -0.472656,0.26367 -0.02683,0.0741 -0.04102,0.1407 -0.04102,0.20117 0,0.0605 0.0344,0.12079 0.101563,0.18164 0.100951,0.0809 0.262259,0.12109 0.484375,0.1211 v -0.002 l 0.484375,-0.0293 c 0.262526,-0.0113 0.434852,0.0561 0.515625,0.20313 0.269253,0.0404 0.508137,0.0605 0.716796,0.0605 0.09422,0.0472 0.14974,0.1247 0.169922,0.23242 0.02683,0.20183 -0.02572,0.33184 -0.160156,0.39258 -0.168264,0.0873 -0.259944,0.15922 -0.273437,0.21289 -0.0068,0.0113 -0.0098,0.034 -0.0098,0.0703 -0.0068,0.0265 -0.01764,0.0611 -0.03125,0.10156 -0.02003,0.0404 -0.07262,0.0576 -0.160156,0.0508 -0.0875,-0.0113 -0.159033,-0.0113 -0.212891,0 -0.05386,0.0113 -0.111289,0.0265 -0.171875,0.0488 -0.17503,0.0541 -0.342388,0.082 -0.503906,0.082 h -0.3125 c -0.09422,-0.008 -0.18898,-0.0117 -0.283203,-0.0117 -0.302892,0.0113 -0.561956,0.0531 -0.777344,0.1211 -0.215395,0.0605 -0.356522,0.10068 -0.423828,0.12109 -0.148082,0.0404 -0.289209,0.0606 -0.423828,0.0606 -0.08077,0 -0.138237,-0.009 -0.171875,-0.0312 l -0.121094,-0.0606 c -0.100951,-0.0541 -0.218889,-0.0741 -0.353516,-0.0605 -0.134626,0.008 -0.269666,0.0162 -0.404297,0.0312 -0.141353,0.008 -0.296582,0.018 -0.464843,0.0293 -0.174992,0.008 -0.359471,0.0161 -0.554688,0.0312 -0.195212,0.008 -0.384667,0.01 -0.566406,0.01 -0.592324,0 -0.924006,-0.0745 -0.998047,-0.22266 -0.01323,-0.0265 -0.0276,-0.0562 -0.04102,-0.0898 -0.02003,-0.0404 -0.04636,-0.0866 -0.08008,-0.14063 -0.03364,-0.054 -0.06792,-0.10251 -0.101562,-0.14258 -0.03364,-0.0472 -0.06185,-0.0934 -0.08203,-0.14062 -0.0404,-0.0873 -0.03218,-0.19118 0.02148,-0.3125 0.04713,-0.12813 0.07946,-0.21939 0.09961,-0.27344 0.01323,-0.0541 0.0276,-0.10844 0.04102,-0.16211 0.0068,-0.054 0.0098,-0.11436 0.0098,-0.18164 -0.0068,-0.0741 -0.0098,-0.17498 -0.0098,-0.30273 -0.0068,-0.13455 -0.0068,-0.27552 0,-0.42383 0.0068,-0.15458 0.02683,-0.30201 0.06055,-0.44336 0.09422,-0.4577 0.347223,-0.81151 0.757812,-1.06055 0.181758,-0.10771 0.343032,-0.16507 0.484375,-0.17187 0.141355,-0.008 0.279459,-0.0158 0.414063,-0.0195 0.127899,-0.0113 0.27511,-0.0385 0.443359,-0.0801 0.161537,-0.0404 0.316762,-0.0527 0.464844,-0.0391 z m 0.01367,1.3789 c -0.09239,-0.008 -0.181485,-0.008 -0.265625,0.002 -0.174992,0.0113 -0.289892,0.0341 -0.34375,0.0605 -0.06059,0.0189 -0.08984,0.0886 -0.08984,0.20313 0,0.10771 -0.02836,0.21751 -0.08203,0.33203 -0.05386,0.10772 -0.117365,0.16803 -0.191406,0.18164 -0.161537,0.0113 -0.218968,0.0639 -0.171875,0.15234 0.02683,0.0473 0.05516,0.0792 0.08203,0.0996 0.02003,0.0189 0.08669,0.0379 0.201172,0.0508 0.235578,0.0189 0.420076,0.0189 0.554687,0 0.134627,-0.0265 0.226307,-0.044 0.273438,-0.0508 0.0404,-0.008 0.08677,-0.01 0.140625,-0.01 0.04713,-0.008 0.104561,-0.0117 0.171875,-0.0117 0.06059,-0.008 0.16138,-0.0158 0.302734,-0.0195 0.134627,-0.0113 0.249527,-0.0155 0.34375,-0.0117 0.09422,0.008 0.19198,-6.5e-4 0.292969,-0.0293 -0.01323,-0.10696 -0.06054,-0.20371 -0.140625,-0.29101 -0.08031,-0.0869 -0.152569,-0.17145 -0.212891,-0.25196 -0.06731,-0.0873 -0.151002,-0.15689 -0.251953,-0.21093 -0.107679,-0.0609 -0.21654,-0.10932 -0.324219,-0.14258 -0.10097,-0.027 -0.196668,-0.0442 -0.289062,-0.0527 z m -9.576172,2.34571 c 0.07404,-0.0113 0.179834,-0.004 0.314453,0.0293 0.127888,0.0265 0.217638,0.0734 0.271485,0.14063 0.05385,0.0673 0.0881,0.14177 0.101562,0.22265 0.01346,0.0809 0.01646,0.15873 0.0098,0.23243 -0.0067,0.0741 -0.0098,0.13635 -0.0098,0.18359 0,0.0472 0.0141,0.0811 0.04102,0.10156 0.02018,0.0113 0.04338,0.0304 0.07031,0.0508 0.04712,0.0473 0.05014,0.13499 0.0098,0.26953 -0.04039,0.13456 -0.124066,0.24826 -0.251953,0.33594 -0.13462,0.0873 -0.306966,0.0954 -0.515625,0.0293 -0.06731,-0.0189 -0.127794,-0.0405 -0.181641,-0.0605 -0.06058,-0.0189 -0.111956,-0.0231 -0.152344,-0.0117 -0.09423,0.0265 -0.143659,0.0905 -0.15039,0.19141 -0.0067,0.10091 0.0195,0.18764 0.08008,0.26172 0.09423,0.10091 0.212165,0.16986 0.353515,0.20312 0.13462,0.0265 0.232391,0.0369 0.292969,0.0293 0.06058,-0.0113 0.124097,-0.0176 0.191406,-0.0176 0.06731,0 0.13885,-0.004 0.212891,-0.0117 0.175003,-0.0264 0.292937,-0.0674 0.353516,-0.12109 0.06059,-0.0605 0.09288,-0.1119 0.09961,-0.15234 0.0068,-0.0404 0.01172,-0.0777 0.01172,-0.11133 -0.0068,-0.0404 -0.01172,-0.0806 -0.01172,-0.1211 0,-0.0404 0.01699,-0.0978 0.05078,-0.17187 0.03364,-0.0741 0.06793,-0.14858 0.101563,-0.22266 0.03364,-0.0809 0.08811,-0.15046 0.162109,-0.21093 0.07404,-0.0605 0.120405,-0.11191 0.140625,-0.15235 0.02003,-0.0472 0.04033,-0.0874 0.06055,-0.12109 0.01323,-0.034 0.0276,-0.063 0.04102,-0.0899 0.01323,-0.034 0.04568,-0.062 0.09961,-0.082 0.235578,-0.0873 0.50874,-0.10783 0.818359,-0.0605 0.114407,0.0113 0.206087,0.0263 0.273438,0.041 0.06731,0.008 0.127783,0.0158 0.18164,0.0195 0.04713,0.008 0.09049,0.012 0.13086,0.0195 0.03364,0.008 0.08811,0.0117 0.162109,0.0117 0.275981,0 0.486684,0.0485 0.634766,0.14258 0.148082,0.0873 0.248876,0.17542 0.302734,0.26953 0.05386,0.0941 0.0961,0.15638 0.123047,0.1836 0.02683,0.0264 0.05924,0.0503 0.09961,0.0703 0.0404,0.0113 0.08377,0.0379 0.130859,0.0723 0.114406,0.0809 0.195057,0.19503 0.242187,0.34961 0.05386,0.175 0.07899,0.3647 0.07227,0.56641 0,0.1954 -0.01084,0.34736 -0.03125,0.45508 -0.02003,0.10771 -0.06958,0.20862 -0.150391,0.30273 -0.08077,0.0873 -0.169487,0.15986 -0.263671,0.22071 -0.100952,0.054 -0.153429,0.0996 -0.160157,0.13281 -0.01323,0.034 -0.02148,0.0693 -0.02148,0.10937 v 0.12305 c 0,0.10772 -0.02911,0.18026 -0.08984,0.2207 -0.06731,0.034 -0.127782,0.0498 -0.181641,0.043 -0.06059,-0.0113 -0.146189,-0.0155 -0.253906,-0.0117 h -0.302734 c -0.09422,-0.008 -0.174874,-0.0482 -0.242188,-0.12109 -0.127899,-0.16139 -0.194444,-0.30273 -0.201172,-0.42383 -0.0068,-0.12132 -0.02987,-0.20175 -0.07031,-0.24219 -0.0404,-0.0404 -0.07769,-0.0694 -0.111328,-0.0898 -0.03364,-0.0265 -0.05382,-0.0611 -0.06055,-0.10156 -0.0068,-0.0473 -0.0038,-0.0934 0.0098,-0.14063 0.03364,-0.11452 0.102173,-0.17187 0.203125,-0.17187 h 0.28125 c 0.08077,-0.008 0.155342,-0.0225 0.222656,-0.041 0.17503,-0.0472 0.25568,-0.13397 0.242187,-0.26172 -0.01323,-0.14135 -0.154468,-0.21919 -0.423828,-0.23242 h -0.21289 -0.220703 c -0.316347,0 -0.56024,0.15005 -0.728516,0.45313 -0.06731,0.12132 -0.130821,0.23937 -0.191406,0.35351 -0.06059,0.11452 -0.135161,0.22331 -0.222657,0.32422 -0.20194,0.22866 -0.432801,0.37305 -0.695312,0.43359 -0.262507,0.0605 -0.431821,0.10403 -0.505859,0.13086 -0.08077,0.0265 -0.133231,0.0552 -0.160157,0.082 -0.02691,0.0189 -0.04708,0.0415 -0.06055,0.0684 -0.01346,0.0265 -0.05378,0.066 -0.121093,0.11329 -0.100963,0.0741 -0.218897,0.0912 -0.353516,0.0508 -0.134619,-0.0404 -0.246481,-0.0763 -0.333984,-0.10352 -0.09423,-0.0265 -0.195037,-0.041 -0.302735,-0.041 -0.107694,0 -0.211537,0.008 -0.3125,0.0195 -0.107694,0.008 -0.216526,0.0117 -0.324218,0.0117 -0.242317,-0.0113 -0.464087,-0.10412 -0.666016,-0.27344 v 0.004 c -0.195198,-0.16138 -0.316162,-0.3572 -0.363281,-0.58593 -0.02691,-0.10092 -0.05011,-0.20182 -0.07031,-0.30274 -0.02018,-0.10091 -0.06051,-0.20673 -0.121094,-0.31445 -0.114425,-0.20183 -0.171875,-0.33788 -0.171875,-0.41211 0,-0.0809 0.0061,-0.14315 0.01953,-0.18359 0.01346,-0.0473 0.02452,-0.0964 0.03125,-0.15039 0.0067,-0.0605 0.0098,-0.1208 0.0098,-0.18164 0,-0.0673 0.0061,-0.14178 0.01953,-0.22266 0.03364,-0.25588 0.202964,-0.52589 0.505859,-0.8086 0.195197,-0.18178 0.396807,-0.29196 0.605469,-0.33203 0.20866,-0.0472 0.413304,-0.0673 0.615234,-0.0605 0.289432,0.008 0.505135,-0.0114 0.646484,-0.0605 0.141351,-0.0472 0.248225,-0.0762 0.322266,-0.0898 z m 10.441406,3.5 v 0.002 c 0.161537,0 0.322812,0.0544 0.484375,0.16211 0.06059,0.0472 0.178524,0.0644 0.353516,0.0508 0.174992,-0.0113 0.350364,-0.0238 0.525391,-0.0312 0.437517,-0.008 0.710665,0.019 0.818359,0.0723 0.100951,0.054 0.16142,0.0942 0.181641,0.12109 0.02003,0.0189 0.03515,0.0405 0.04883,0.0606 0.04713,0.10091 0.190188,0.19098 0.425781,0.27148 0.22885,0.0741 0.416382,0.17499 0.564453,0.30274 0.141354,0.12811 0.259254,0.26305 0.353516,0.40429 0.0875,0.13455 0.154041,0.24334 0.201172,0.32422 0.05386,0.0741 0.105213,0.12652 0.152343,0.16016 0.04713,0.034 0.09349,0.0679 0.140625,0.10156 0.107679,0.0873 0.16211,0.1971 0.16211,0.33203 0,0.22866 -0.05443,0.39807 -0.16211,0.50586 -0.06059,0.0472 -0.147275,0.0983 -0.261718,0.15234 -0.181758,0.10092 -0.330895,0.23397 -0.445313,0.40235 -0.127899,0.1886 -0.318462,0.30526 -0.574219,0.3457 -0.0875,0.0189 -0.176213,0.0251 -0.263672,0.0176 -0.0875,-0.0113 -0.197404,-0.007 -0.332031,0.0117 -0.134627,0.0113 -0.255565,0.0385 -0.363281,0.0801 -0.107679,0.0404 -0.208474,0.0635 -0.302734,0.0703 -0.282709,0.034 -0.434885,0.12862 -0.455079,0.2832 -0.01323,0.11452 -0.185687,0.18114 -0.515625,0.20117 -0.168264,0.008 -0.326512,0.002 -0.474609,-0.0195 -0.154809,-0.0189 -0.284865,-0.0484 -0.392578,-0.082 -0.195213,-0.0541 -0.421959,-0.0712 -0.677735,-0.0508 -0.262487,0.0189 -0.493379,0.0189 -0.695312,0 -0.376932,-0.034 -0.684336,-0.11444 -0.919922,-0.24219 -0.100951,-0.0605 -0.201745,-0.14758 -0.302734,-0.26172 -0.100951,-0.12132 -0.198708,-0.23937 -0.292969,-0.35351 v -0.002 c -0.06731,-0.0741 -0.136898,-0.13578 -0.210937,-0.18945 -0.08077,-0.054 -0.155343,-0.12363 -0.222657,-0.21094 -0.195212,-0.23546 -0.252681,-0.47145 -0.171875,-0.70703 0.107679,-0.28951 0.176215,-0.5546 0.203125,-0.79687 0.02683,-0.24227 0.08742,-0.41775 0.181641,-0.52539 0.09422,-0.11452 0.195056,-0.21209 0.302734,-0.29297 0.255761,-0.1954 0.534996,-0.31345 0.837891,-0.35352 0.114406,-0.008 0.195057,-0.0265 0.242187,-0.0605 0.148082,-0.0873 0.346659,-0.11571 0.595704,-0.082 0.249032,0.0265 0.424424,0.0372 0.52539,0.0293 0.09422,-0.0113 0.163807,-0.0304 0.210938,-0.0508 0.04713,-0.0265 0.09549,-0.0503 0.142578,-0.0703 0.127899,-0.0541 0.254928,-0.082 0.382812,-0.082 z m -10.349609,1.00195 c 0.444245,-0.0265 0.780912,-0.0265 1.009765,0 0.228851,0.0265 0.43958,0.0372 0.634766,0.0293 0.195213,-0.0113 0.381637,0.004 0.556641,0.0508 0.174992,0.0472 0.34235,0.0908 0.503906,0.13086 0.161537,0.034 0.287504,0.0679 0.375,0.10156 0.0875,0.034 0.171222,0.066 0.251953,0.0996 0.20194,0.0741 0.392484,0.12551 0.574219,0.15234 0.282709,0.0473 0.472171,0.14481 0.566406,0.29297 0.05386,0.0673 0.08312,0.14178 0.08984,0.22266 0,0.0805 0.01399,0.14277 0.04102,0.18359 0.02003,0.0404 0.05139,0.0787 0.0918,0.11914 0.03364,0.0404 0.06897,0.084 0.109375,0.13086 0.09422,0.12132 0.136502,0.20805 0.123047,0.26172 -0.01323,0.0472 -0.04155,0.089 -0.08203,0.12305 -0.0404,0.034 -0.08377,0.063 -0.130859,0.0898 -0.1279,0.0741 -0.194445,0.12847 -0.201172,0.16211 -0.0068,0.034 -7.49e-4,0.088 0.01953,0.16211 0.02003,0.0673 0.04033,0.1477 0.06055,0.24219 0.09422,0.4577 -0.01775,0.80847 -0.333985,1.05078 -0.255759,0.1954 -0.578355,0.33637 -0.96875,0.42383 -0.168263,0.034 -0.352743,0.0693 -0.554687,0.10937 -0.20194,0.034 -0.377313,0.0851 -0.525391,0.15234 -0.154809,0.0605 -0.283803,0.10069 -0.384765,0.1211 -0.100951,0.0189 -0.198745,0.0231 -0.292969,0.0117 -0.09422,-0.0189 -0.198094,-0.0386 -0.3125,-0.0586 -0.329802,-0.0605 -0.591912,-0.0743 -0.787109,-0.041 -0.195198,0.0265 -0.35345,0.0529 -0.47461,0.0801 -0.127888,0.0189 -0.25189,0.0379 -0.373047,0.0508 -0.242316,0.034 -0.532592,0.0258 -0.86914,-0.0195 -0.181739,-0.0265 -0.343026,-0.042 -0.484375,-0.0488 -0.148082,-0.0113 -0.275115,-0.0263 -0.382813,-0.041 -0.336548,-0.0404 -0.514963,-0.17841 -0.535156,-0.41406 -0.01346,-0.12132 -0.01346,-0.25021 0,-0.38477 0.01346,-0.14135 0.01646,-0.2393 0.0098,-0.29296 l -0.03125,-0.3125 c 0,-0.16139 0.04834,-0.27119 0.142578,-0.33204 0.161544,-0.12812 0.478052,-0.19335 0.949218,-0.19336 v -0.004 l 1.089844,0.041 c 0.121157,0 0.221959,-0.004 0.302735,-0.0117 0.07404,-0.0113 0.137559,-0.0217 0.191406,-0.0293 0.195197,-0.0265 0.442117,-0.007 0.738281,0.0605 0.289433,0.0673 0.55152,0.0795 0.78711,0.0391 0.05386,-0.008 0.09115,-0.0161 0.111328,-0.0312 0.02003,-0.0113 0.04033,-0.0217 0.06055,-0.0293 0.06059,-0.034 0.138199,-0.0508 0.232422,-0.0508 0.09422,-0.008 0.195056,-0.0452 0.302735,-0.11133 0.107678,-0.0673 0.157118,-0.14808 0.15039,-0.24219 -0.01323,-0.10091 -0.114136,-0.18171 -0.302734,-0.24218 -0.188485,-0.0673 -0.444493,-0.0844 -0.767578,-0.0508 -0.323074,0.0265 -0.568056,0.0473 -0.736328,0.0605 -0.168276,0.008 -0.320459,0.0117 -0.455078,0.0117 -0.235582,0.008 -0.469493,-0.003 -0.705079,-0.0312 -0.498091,-0.0605 -0.915404,-0.0705 -1.251953,-0.0293 -0.121156,0.0113 -0.256213,0.0263 -0.404297,0.041 -0.154808,0.0113 -0.269709,-0.0191 -0.34375,-0.0996 -0.07404,-0.0805 -0.105255,-0.16622 -0.0918,-0.25391 0.0067,-0.0873 0.01779,-0.19414 0.03125,-0.32226 0.01346,-0.12813 0.01646,-0.232 0.0098,-0.3125 -0.01346,-0.0805 -0.02755,-0.15538 -0.04102,-0.22266 -0.02018,-0.17499 -0.0061,-0.29008 0.04102,-0.34375 0.04039,-0.054 0.07767,-0.0943 0.111328,-0.12109 0.03364,-0.0265 0.09111,-0.0503 0.171875,-0.0703 0.161545,-0.0404 0.426672,-0.0543 0.796875,-0.041 0.612519,0.0113 1.141693,0.007 1.585938,-0.0195 z m 10.419922,0.66016 c -0.350022,0 -0.649393,0.0524 -0.898438,0.16015 -0.25576,0.10772 -0.382812,0.23961 -0.382812,0.39453 0,0.14816 0.164335,0.28309 0.49414,0.4043 0.296164,0.10772 0.491703,0.15384 0.585938,0.14063 v -0.002 c 0.09422,-0.0189 0.171874,-0.0543 0.232422,-0.10156 0.05386,-0.054 0.140547,-0.0909 0.261719,-0.11133 0.121132,-0.0265 0.256214,-0.0388 0.404296,-0.0312 0.141355,0.008 0.279459,0.0117 0.414063,0.0117 0.127899,0 0.245838,-0.006 0.353515,-0.0176 0.100952,-0.0113 0.193755,-0.0342 0.28125,-0.0605 0.208668,-0.0741 0.314454,-0.17796 0.314454,-0.3125 0,-0.20863 -0.405172,-0.35493 -1.212891,-0.43555 -0.222123,-0.0265 -0.504388,-0.0391 -0.847656,-0.0391 z m -23.296875,2.18359 c 0.15882,0.008 0.282999,0.0425 0.373047,0.10547 0.127132,0.0843 0.219959,0.18103 0.277343,0.29101 0.05562,0.10356 0.111763,0.1872 0.169922,0.24805 0.06293,0.0525 0.09948,0.11953 0.107422,0.20117 0.0063,0.0752 0.01879,0.13723 0.03906,0.1875 0.0251,0.042 0.03482,0.0933 0.0293,0.15039 -0.0055,0.0571 -0.01195,0.11248 -0.01758,0.16993 -0.0024,0.14701 0.02861,0.24452 0.08984,0.29101 0.06766,0.0446 0.126721,0.0873 0.179688,0.12891 0.05121,0.034 0.0935,0.0762 0.126953,0.12304 0.09333,0.11452 0.130597,0.22299 0.109375,0.32618 -0.02113,0.10318 -0.05005,0.20453 -0.08594,0.30468 -0.02937,0.0986 -0.0852,0.16193 -0.167969,0.19141 -0.222344,0.0805 -0.365371,0.16086 -0.427734,0.24023 -0.06407,0.0729 -0.119221,0.1269 -0.166016,0.16016 -0.114386,0.0933 -0.235804,0.11896 -0.365234,0.0781 -0.20468,-0.034 -0.324395,-0.17162 -0.359375,-0.40624 -0.06027,-0.27667 -0.202416,-0.39875 -0.423828,-0.36719 -0.100785,0.0151 -0.192233,0.0708 -0.277344,0.16797 -0.08485,0.0994 -0.140824,0.21499 -0.167969,0.34765 -0.05466,0.34205 0.004,0.63107 0.177735,0.86328 0.04343,0.0578 0.07737,0.13454 0.103515,0.23243 l 0.06836,0.2539 c 0.04004,0.14929 0.05108,0.26564 0.03125,0.34766 -0.01334,0.0805 -0.0099,0.17051 0.0098,0.26953 0.0178,0.0926 0.04304,0.20025 0.07617,0.32422 0.0397,0.12208 0.08552,0.25323 0.136719,0.39258 0.05605,0.13115 0.112522,0.25134 0.169922,0.36132 0.144699,0.25399 0.279715,0.3566 0.40625,0.3086 0.104024,-0.0265 0.172722,-0.0979 0.205078,-0.21094 0.009,-0.0442 0.02158,-0.0887 0.03711,-0.13477 0.01553,-0.0457 0.04692,-0.0859 0.09375,-0.11914 0.04503,-0.0401 0.06868,-0.089 0.07422,-0.14648 0.01206,-0.059 0.0094,-0.12388 -0.0098,-0.19531 -0.01436,-0.0797 -0.06454,-0.23738 -0.148438,-0.47266 -0.04875,0.0265 -0.09838,0.0466 -0.150391,0.0606 v -0.002 c -0.182047,0.0488 -0.288012,-0.0113 -0.320312,-0.18554 -0.0237,-0.14022 -0.05751,-0.25109 -0.09961,-0.33008 -0.07086,-0.13417 -0.105719,-0.23634 -0.103516,-0.30664 -2.26e-4,-0.20901 0.199215,-0.31118 0.597656,-0.30664 0.07022,0.002 0.12505,0.001 0.164063,-0.01 0.03902,-0.0113 0.07818,-0.0283 0.115234,-0.0449 0.111802,-0.051 0.214305,-0.0775 0.310547,-0.082 0.100785,-0.0151 0.187585,-0.0359 0.257813,-0.0586 0.06955,-0.0265 0.130275,-0.0521 0.185546,-0.0801 0.06175,-0.0302 0.117725,-0.058 0.166016,-0.0859 0.04875,-0.0265 0.09511,-0.0446 0.140625,-0.0566 0.06501,-0.0189 0.126017,0.0265 0.181641,0.12891 0.06036,0.0952 0.10442,0.20831 0.132812,0.33984 0.06938,0.33676 0.04255,0.54813 -0.08008,0.63672 -0.08709,0.065 -0.164092,0.15287 -0.232422,0.26172 -0.0619,0.10696 -0.06089,0.24225 0.0039,0.40625 0.06955,0.15571 0.118411,0.28158 0.144532,0.3789 0.03095,0.0892 0.05185,0.17082 0.06445,0.24414 0.01742,0.065 0.0297,0.12407 0.03711,0.17774 0.01221,0.0457 0.03303,0.10725 0.06055,0.18359 0.03209,0.068 0.05477,0.16642 0.06836,0.29492 0.02022,0.127 0.01954,0.24587 0,0.35547 -0.04778,0.26381 -0.16289,0.38838 -0.347656,0.375 -0.133973,-0.004 -0.28297,-0.0765 -0.445312,-0.21484 -0.05466,-0.048 -0.106739,-0.0865 -0.15625,-0.11523 -0.04471,-0.0378 -0.09319,-0.0378 -0.146485,-0.002 -0.05525,0.0265 -0.0995,0.0733 -0.130859,0.13867 -0.02683,0.0559 -0.05633,0.11544 -0.08789,0.17969 -0.182479,0.41129 -0.516862,0.55304 -1.003906,0.42578 -0.245911,-0.0597 -0.434849,-0.16566 -0.566406,-0.31836 -0.05345,-0.0692 -0.112636,-0.14744 -0.177735,-0.23437 -0.05867,-0.0888 -0.1215,-0.17297 -0.191406,-0.25195 -0.161476,-0.18634 -0.301247,-0.30193 -0.417969,-0.34766 -0.110199,-0.0473 -0.255526,-0.38451 -0.4375,-1.01172 -0.04316,-0.13493 -0.07293,-0.2526 -0.08594,-0.35352 -0.01493,-0.10733 -0.04216,-0.23847 -0.08398,-0.39453 l -0.121094,-0.44922 c -0.03835,-0.14324 -0.07775,-0.28003 -0.119141,-0.4082 -0.05576,-0.20825 -0.08838,-0.39396 -0.09766,-0.55859 -0.24463,-0.0809 -0.396065,-0.32239 -0.455078,-0.72461 -0.03368,-0.25588 -0.0367,-0.44611 -0.0078,-0.57227 0.03364,-0.13455 0.05178,-0.26154 0.05469,-0.38086 0.0076,-0.12737 0.01551,-0.25852 0.02148,-0.39258 0.0042,-0.14021 0.03663,-0.24024 0.09766,-0.29882 0.0611,-0.0582 0.09686,-0.10182 0.109375,-0.13282 0.01251,-0.0302 0.02452,-0.0625 0.03711,-0.0937 0.07476,-0.21505 0.308998,-0.41121 0.701172,-0.58593 0.17331,-0.0813 0.355808,-0.11194 0.548828,-0.0937 0.192964,0.0189 0.350226,0.0151 0.470703,-0.002 0.12028,-0.0189 0.233839,-0.0389 0.339844,-0.0586 v 0.002 c 0.227795,-0.0471 0.421257,-0.0663 0.580078,-0.0586 z m 20.490234,0.87891 v 0.002 c 0.148082,0.008 0.286186,0.0225 0.414063,0.041 0.343294,0.0405 0.568083,0.0576 0.675781,0.0508 0.107679,-0.0113 0.21954,-0.0263 0.333984,-0.041 0.114407,-0.0189 0.224353,-0.0271 0.332032,-0.0195 0.262487,0.0113 0.411659,0.1193 0.445312,0.32226 0.02003,0.14816 -0.01399,0.25499 -0.101562,0.32227 -0.09422,0.0673 -0.195056,0.12463 -0.302735,0.17188 -0.114406,0.0404 -0.215238,0.084 -0.302734,0.13085 -0.0875,0.0405 -0.116796,0.10272 -0.08984,0.1836 0.02003,0.0805 0.106872,0.12998 0.261719,0.15039 0.148082,0.0189 0.326477,0.0271 0.535156,0.0195 0.20194,-0.008 0.414592,-0.0225 0.636719,-0.041 0.215395,-0.0189 0.399866,-0.0342 0.554687,-0.041 0.148082,-0.008 0.300284,-0.012 0.455078,-0.0195 0.15481,-0.0113 0.298964,-0.0176 0.433594,-0.0176 0.289436,0 0.488009,0.0402 0.595703,0.12109 0.05386,0.0404 0.117366,0.0605 0.191407,0.0605 0.07404,0 0.151653,-0.008 0.232421,-0.0195 0.08077,-0.0189 0.161419,-0.0405 0.242188,-0.0606 0.08077,-0.0189 0.178525,-0.0293 0.292969,-0.0293 0.269253,0 0.456755,0.12101 0.564453,0.36328 0.0404,0.0873 0.108901,0.16811 0.203125,0.24218 0.09422,0.0741 0.15473,0.13144 0.18164,0.17188 0.03364,0.034 0.0426,0.0772 0.0293,0.13086 -0.0068,0.0472 -0.02987,0.0825 -0.07031,0.10937 -0.03364,0.0189 -0.07093,0.0405 -0.111328,0.0605 -0.107679,0.0404 -0.177262,0.0978 -0.210938,0.17188 -0.02003,0.0873 -0.09472,0.14169 -0.222656,0.1621 -0.127899,0.0113 -0.239723,0.0238 -0.333985,0.0312 -0.10095,0 -0.221926,0.008 -0.363281,0.0195 -0.141354,0.0113 -0.256254,0.056 -0.34375,0.13085 -0.0875,0.0741 -0.139973,0.1344 -0.160156,0.18165 -0.02683,0.0472 -0.08442,0.0762 -0.171875,0.0898 -0.09422,0.0113 -0.18898,0.0113 -0.283203,0 -0.09422,-0.0189 -0.198094,-0.0435 -0.3125,-0.0703 -0.329839,-0.0805 -0.640255,-0.12406 -0.929688,-0.13086 -0.538476,-0.0189 -0.895305,-0.0189 -1.070312,0 -0.350022,0.0265 -0.523438,0.12181 -0.523438,0.2832 0.0068,0.0805 0.0421,0.13824 0.109375,0.17188 0.06059,0.034 0.135161,0.0709 0.222657,0.11132 0.222122,0.0941 0.282591,0.2646 0.18164,0.51368 -0.0404,0.0873 -0.10391,0.14466 -0.191406,0.17187 -0.0875,0.0189 -0.188328,0.0338 -0.302734,0.041 -0.121134,0 -0.245148,0.004 -0.373047,0.0117 -0.134627,0 -0.260594,0.0227 -0.375,0.0703 -0.121134,0.0404 -0.234081,0.0806 -0.341797,0.12109 -0.107679,0.0404 -0.21654,0.0576 -0.324219,0.0508 -0.107679,-0.008 -0.211549,-0.0303 -0.3125,-0.0703 -0.100951,-0.0472 -0.201745,-0.0611 -0.302734,-0.041 -0.100951,0.0113 -0.198708,-0.008 -0.292969,-0.0605 -0.100951,-0.0605 -0.144314,-0.16435 -0.130859,-0.3125 v -0.004 c 0.01323,-0.15458 0.01953,-0.28989 0.01953,-0.4043 -0.0068,-0.12132 -0.0068,-0.29973 0,-0.53515 0.02003,-0.39043 -0.006,-0.66659 -0.08008,-0.82813 -0.168265,-0.32995 -0.188406,-0.59493 -0.06055,-0.79687 0.05386,-0.0941 0.08615,-0.18418 0.09961,-0.27149 0.01323,-0.0873 -0.02683,-0.21361 -0.121093,-0.375 -0.07404,-0.17499 -0.08919,-0.31937 -0.04883,-0.43359 0.0404,-0.11452 0.0898,-0.19791 0.150391,-0.25195 0.06059,-0.054 0.169409,-0.088 0.324219,-0.10157 0.148082,-0.0189 0.295296,-0.0231 0.443359,-0.0117 z m -24.751953,0.22265 c 0.08338,-10e-4 0.16759,0.0163 0.253906,0.0527 0.172645,0.0722 0.265215,0.27401 0.277344,0.60546 -0.0037,0.16819 0.01194,0.28209 0.04883,0.3418 0.03689,0.0597 0.08091,0.11752 0.130859,0.17383 0.05642,0.0544 0.09019,0.12817 0.101563,0.22266 0.0097,0.0881 0.01907,0.18726 0.02734,0.29687 0.01338,0.30992 0.06458,0.55107 0.152343,0.72266 0.212504,0.40293 0.292308,0.8618 0.242188,1.37695 -0.05092,0.56417 0.05737,1.19789 0.322266,1.90039 0.197877,0.50449 0.307974,0.84008 0.332031,1.00781 0.02891,0.1595 0.02855,0.29516 -0.0039,0.40821 -0.03235,0.11338 -0.117364,0.18832 -0.253907,0.22461 -0.234062,0.0627 -0.415363,0.0376 -0.542968,-0.0742 -0.07295,-0.0643 -0.12514,-0.15609 -0.158204,-0.2793 -0.03307,-0.12359 -0.08327,-0.2291 -0.148437,-0.31641 -0.05867,-0.0888 -0.124577,-0.16955 -0.199219,-0.24023 -0.17232,-0.14891 -0.323444,-0.2432 -0.453125,-0.28516 -0.21518,-0.0748 -0.435277,-0.33333 -0.658203,-0.77539 -0.150837,-0.32882 -0.300918,-0.59241 -0.451172,-0.78906 -0.04343,-0.0578 -0.08111,-0.11947 -0.113281,-0.1875 -0.03383,-0.0745 -0.0674,-0.14681 -0.09961,-0.21484 -0.08082,-0.14551 -0.170056,-0.20577 -0.267578,-0.17969 -0.149538,0.0401 -0.149404,0.27097 -0.002,0.69141 0.03095,0.0892 0.06704,0.17119 0.107422,0.24414 0.04519,0.0646 0.07168,0.15091 0.08008,0.25976 0.0084,0.10923 0.01073,0.22274 0.0078,0.3418 -0.0014,0.3069 0.03899,0.52214 0.121094,0.64648 0.08731,0.144 0.14759,0.30542 0.18164,0.48438 0.03235,0.17234 0.04226,0.3137 0.0293,0.42187 -0.01463,0.10167 -0.06524,0.185 -0.152344,0.25 -0.03065,0.11981 -0.0464,0.25134 -0.04883,0.39844 -0.0042,0.14022 -0.01028,0.23609 -0.01758,0.28711 -7.04e-4,0.0488 -0.0147,0.0802 -0.03906,0.0937 -0.100086,0.0684 -0.214966,0.0939 -0.345704,0.0742 -0.124473,-0.0227 -0.214579,-0.0758 -0.271484,-0.1582 -0.05867,-0.0888 -0.100419,-0.17549 -0.123047,-0.25977 -0.01606,-0.0862 -0.04443,-0.15702 -0.08789,-0.21484 -0.03865,-0.0661 -0.06398,-0.12262 -0.07617,-0.16797 -0.0056,-0.0473 -0.01517,-0.0953 -0.02734,-0.14063 -0.01493,-0.10734 -0.05195,-0.18064 -0.111328,-0.2207 -0.07592,-0.0495 -0.131859,-0.12786 -0.167969,-0.23633 -0.02959,-0.11074 -0.05524,-0.20534 -0.07617,-0.2832 -0.02086,-0.0779 -0.03218,-0.14366 -0.0332,-0.19922 0.01236,-0.13569 -0.01739,-0.33035 -0.0918,-0.58203 -0.146645,-0.46942 -0.282573,-0.73915 -0.40625,-0.81055 -0.156669,-0.0903 -0.284902,-0.30084 -0.386718,-0.62891 -0.02744,-0.076 -0.04449,-0.148 -0.04883,-0.21679 2.98e-4,-0.0767 -0.01483,-0.14877 -0.04687,-0.2168 -0.02574,-0.0699 -0.03295,-0.14644 -0.01953,-0.22656 0.01542,-0.15043 -0.01977,-0.34619 -0.105469,-0.58789 -0.08741,-0.24832 -0.14722,-0.42323 -0.18164,-0.52539 -0.02959,-0.11074 -0.06706,-0.22255 -0.111328,-0.33594 -0.0397,-0.12208 -0.05836,-0.23257 -0.05664,-0.33008 0.0064,-0.1062 0.03556,-0.20421 0.08789,-0.29492 0.115513,-0.21883 0.318746,-0.36888 0.611328,-0.44727 0.105649,-0.12585 0.237498,-0.23647 0.392578,-0.33398 0.161594,-0.099 0.306523,-0.14213 0.435547,-0.12891 0.129214,0.0151 0.229117,0.0638 0.300781,0.14844 0.07166,0.0854 0.135806,0.1816 0.191406,0.28516 0.06212,0.10167 0.12233,0.20642 0.179688,0.3164 0.06212,0.10167 0.137837,0.17989 0.228515,0.23243 0.09068,0.0525 0.166196,0.12545 0.226563,0.2207 0.05867,0.0888 0.113681,0.17586 0.164062,0.25976 0.05041,0.0843 0.09722,0.15507 0.140625,0.2129 0.04167,0.0514 0.09188,0.0682 0.150391,0.0527 0.05851,-0.0151 0.06831,-0.10474 0.03125,-0.26953 -0.03243,-0.17273 -0.08074,-0.36549 -0.144531,-0.57813 -0.05752,-0.21467 -0.117187,-0.42142 -0.177735,-0.62109 -0.05576,-0.20825 -0.07519,-0.36359 -0.06055,-0.46484 0.01289,-0.1081 0.06117,-0.1981 0.146484,-0.26954 0.09183,-0.0733 0.21212,-0.091 0.361328,-0.0547 0.185896,-0.11226 0.338158,-0.12823 0.457031,-0.0488 0.08016,-0.0389 0.162713,-0.0593 0.246094,-0.0606 z m 20.873047,0.9668 v 0.004 c 0.22885,-0.0189 0.461691,-0.0189 0.697266,0 0.228849,0.0113 0.36087,0.0821 0.394531,0.21094 v 0.002 c 0.07404,0.0404 0.128434,0.0948 0.162109,0.1621 0.0404,0.0673 0.03218,0.1339 -0.02148,0.20118 -0.04713,0.0673 -0.06728,0.1187 -0.06055,0.15234 0.0068,0.0265 0.01506,0.0532 0.02148,0.0801 0.0068,0.0605 -0.03851,0.12079 -0.132812,0.18164 -0.09422,0.0605 -0.166883,0.0948 -0.220703,0.10156 -0.06059,0.008 -0.118055,0.008 -0.171875,0 -0.121172,-0.0265 -0.230033,-0.007 -0.324219,0.0606 -0.09422,0.0605 -0.163807,0.10402 -0.210938,0.13086 -0.04713,0.0189 -0.115629,0.0312 -0.203125,0.0312 -0.09422,0 -0.151692,0.006 -0.171875,0.0176 -0.02683,0.008 -0.04709,0.0157 -0.06055,0.0195 -0.06059,0.034 -0.153352,0.0459 -0.28125,0.0391 -0.1279,-0.0113 -0.216579,0.004 -0.263672,0.0508 -0.05386,0.0473 -0.09415,0.11248 -0.121094,0.19336 -0.02683,0.0741 -0.01599,0.1344 0.03125,0.18164 0.0404,0.0404 0.0898,0.081 0.15039,0.12109 0.06059,0.034 0.114979,0.0772 0.16211,0.13086 0.0404,0.0541 0.04933,0.12363 0.0293,0.21094 -0.02003,0.0809 -4e-6,0.17253 0.06055,0.27344 0.06059,0.10091 0.13516,0.16123 0.222656,0.18164 0.08077,0.0189 0.164495,0.0435 0.251953,0.0703 0.0875,0.0265 0.168148,0.0372 0.242187,0.0293 0.07404,-0.0113 0.148616,-0.0113 0.222657,0 0.06731,0.008 0.135811,0.0228 0.203125,0.0488 0.168264,0.054 0.257991,0.12123 0.271484,0.19531 0.0068,0.0605 0.0068,0.12218 0,0.18945 0.134627,0.0741 0.215277,0.16434 0.242188,0.26563 0.06059,0.2759 0.01737,0.43833 -0.13086,0.49219 -0.0875,0.034 -0.202395,0.0537 -0.34375,0.0605 -0.282708,0.0113 -0.473253,0.0434 -0.574218,0.0918 -0.100952,0.0472 -0.221927,0.0611 -0.363282,0.041 -0.141354,-0.0265 -0.284449,-0.0387 -0.425781,-0.0313 -0.141354,0.008 -0.248225,0.008 -0.322266,0 -0.07404,-0.008 -0.140549,-0.0158 -0.201171,-0.0195 -0.06059,-0.0113 -0.118017,-0.0247 -0.171876,-0.0391 -0.06059,-0.0113 -0.129085,-0.0195 -0.203124,-0.0195 -0.08077,-0.008 -0.170534,-0.0225 -0.271485,-0.041 -0.100951,-0.0189 -0.204821,-0.0405 -0.3125,-0.0605 -0.269253,-0.0541 -0.472803,-0.0743 -0.607422,-0.0605 -0.134627,0.0113 -0.247562,0.002 -0.341797,-0.0312 -0.09423,-0.0404 -0.179865,-0.0856 -0.253906,-0.13281 -0.195197,-0.12132 -0.35345,-0.17673 -0.474609,-0.16992 -0.127888,0.008 -0.225659,0.012 -0.292969,0.0195 -0.07404,0 -0.146662,-0.004 -0.220703,-0.0117 -0.363474,-0.034 -0.932969,-0.20409 -1.707031,-0.51367 -0.07404,-0.0189 -0.131491,-0.0837 -0.171875,-0.19141 -0.04039,-0.10772 -0.04341,-0.21612 -0.0098,-0.32422 0.02691,-0.11452 0.04102,-0.20421 0.04102,-0.27148 -0.0067,-0.0741 -0.03492,-0.1344 -0.08203,-0.18164 -0.05385,-0.054 -0.103275,-0.10844 -0.15039,-0.16211 -0.04712,-0.0605 -0.08441,-0.13201 -0.111328,-0.21289 -0.03364,-0.0805 -0.05078,-0.17057 -0.05078,-0.27149 0,-0.10091 0.03122,-0.2097 0.0918,-0.32422 0.100963,-0.18859 0.193747,-0.31257 0.28125,-0.37304 0.0875,-0.0605 0.159044,-0.10107 0.212891,-0.1211 0.05385,-0.0189 0.128421,-0.0524 0.222656,-0.0996 0.09423,-0.0472 0.177912,-0.0673 0.251953,-0.0605 0.07404,0 0.160753,-0.0153 0.261719,-0.041 0.100963,-0.0265 0.218896,-0.0265 0.353516,0 0.134619,0.0265 0.269676,0.0265 0.404297,0 0.127886,-0.0265 0.214603,-0.041 0.261718,-0.041 0.04712,0 0.09243,-0.004 0.132813,-0.0117 0.114425,-0.008 0.215234,-0.0302 0.302734,-0.0703 0.09423,-0.0404 0.212165,-0.0486 0.353516,-0.0293 0.134619,0.0113 0.247562,0.0155 0.341797,0.0117 0.0875,-0.0113 0.179202,-0.0517 0.273437,-0.11328 0.181758,-0.11452 0.383357,-0.15316 0.605469,-0.11915 0.06059,0.008 0.129084,0.008 0.203125,0 0.06731,-0.0113 0.130858,-0.0195 0.191406,-0.0195 0.05386,0 0.123442,0.008 0.210938,0.0195 0.127899,0.0189 0.283124,0.0147 0.464843,-0.0117 0.336567,-0.0405 0.561353,-0.0605 0.675782,-0.0605 0.114406,0 0.2122,-0.004 0.292968,-0.0117 0.07404,-0.008 0.154692,-0.012 0.242188,-0.0195 z m -25.96875,0.32422 c 0.06971,-0.0133 0.131106,-0.0118 0.183594,0.002 v -0.002 c 0.111477,0.0265 0.185937,0.0725 0.224609,0.13867 0.04519,0.0646 0.07893,0.13799 0.101563,0.22266 0.02094,0.0782 0.03734,0.16527 0.04883,0.25976 0.0178,0.0926 0.05033,0.18809 0.09766,0.28711 0.121243,0.21846 0.175953,0.40888 0.164062,0.57227 -0.01364,0.15685 -0.03738,0.25813 -0.07422,0.30273 -0.03854,0.0382 -0.08125,0.0674 -0.125,0.0859 -0.03704,0.0189 -0.07689,0.0342 -0.121094,0.0508 -0.03902,0.0113 -0.06953,0.0432 -0.08984,0.0977 -0.02937,0.0983 0.03201,0.43026 0.183594,0.99609 l 0.457031,1.62305 c 0.111492,0.41608 0.188824,0.81337 0.234375,1.1914 0.07512,0.0983 0.158974,0.13552 0.25,0.11133 0.08453,-0.0227 0.143005,-0.0227 0.177734,0.004 0.06469,0.0593 0.102844,0.19653 0.111329,0.41015 0.0053,0.12397 0.01251,0.21826 0.02344,0.28516 0.01742,0.065 0.02956,0.12072 0.03516,0.16797 0.008,0.0813 -0.0147,0.17876 -0.06836,0.29101 -0.06535,0.0941 -0.146839,0.17233 -0.242187,0.23243 -0.09055,0.0521 -0.16501,0.0924 -0.226563,0.12304 -0.05979,0.0378 -0.123809,0.0848 -0.191406,0.14453 -0.101326,0.09 -0.194986,0.14391 -0.28125,0.16016 -0.07999,0.0113 -0.144612,0.0217 -0.191407,0.0293 -0.03901,0.0113 -0.08538,0.034 -0.138671,0.0684 -0.0468,0.034 -0.08662,0.0516 -0.121094,0.0527 -0.0325,0.008 -0.06776,0.0114 -0.103516,0.008 -0.107958,-0.0113 -0.202584,-0.007 -0.287109,0.0156 -0.117018,0.0302 -0.247087,-0.14214 -0.390625,-0.52149 -0.06127,-0.1508 -0.105424,-0.29855 -0.130859,-0.44531 -0.02544,-0.14664 -0.02801,-0.24535 -0.0059,-0.29297 0.0203,-0.054 0.05174,-0.0938 0.09375,-0.11914 0.04029,-0.0302 0.07993,-0.0556 0.117188,-0.0723 0.03575,-0.0227 0.06907,-0.0427 0.09961,-0.0586 0.03379,-0.0302 0.03529,-0.10391 0.0039,-0.2207 -0.02657,-0.12548 -0.05076,-0.23988 -0.07226,-0.3457 -0.07008,-0.28763 -0.101332,-0.49557 -0.09375,-0.62305 0.01799,-0.19313 -0.03281,-0.34053 -0.150391,-0.44141 -0.124569,-0.12661 -0.232003,-0.3975 -0.322266,-0.8125 -0.0533,-0.25058 -0.110593,-0.45068 -0.171875,-0.60156 -0.107894,-0.29858 -0.174613,-0.50947 -0.201172,-0.63477 -0.0178,-0.0926 -0.03292,-0.1666 -0.04687,-0.21874 -0.01395,-0.0522 -0.02941,-0.0891 -0.04297,-0.11329 -0.03341,-0.0469 -0.09774,-0.0589 -0.195313,-0.0312 -0.09948,0.0189 -0.203582,-0.003 -0.310547,-0.0625 -0.107157,-0.0616 -0.177098,-0.18552 -0.21289,-0.37109 -0.02929,-0.18709 -0.07523,-0.35374 -0.134766,-0.49805 -0.05951,-0.144 -0.0807,-0.26413 -0.06445,-0.35937 0.01637,-0.0949 0.02094,-0.17233 0.01172,-0.23242 -0.0091,-0.0601 -0.01435,-0.11531 -0.01367,-0.16407 0.01115,-0.11452 0.08377,-0.19658 0.216797,-0.24609 0.139774,-0.0503 0.270331,-0.0817 0.392578,-0.0937 0.126803,-0.0189 0.246228,-0.0294 0.357422,-0.0332 0.290479,-0.008 0.47798,-0.0227 0.5625,-0.0469 0.06501,-0.0189 0.134218,-0.0433 0.208984,-0.0762 0.07931,-0.0419 0.15599,-0.0793 0.230469,-0.11328 0.08666,-0.0406 0.164668,-0.0687 0.234375,-0.082 z m -3.54492,0.9707 c 0.07909,-0.004 0.15757,0.0201 0.234375,0.0723 0.08764,0.0669 0.204812,0.0849 0.349609,0.0527 0.144994,-0.0302 0.231534,-0.0383 0.257813,-0.0156 0.03299,0.0189 0.08667,0.0401 0.162109,0.0605 l -0.002,-0.004 c 0.07375,0.0151 0.126297,0.0406 0.15625,0.0742 0.03473,0.0265 0.07228,0.0518 0.115235,0.082 0.04125,0.0227 0.0675,0.0527 0.07617,0.0859 0.0087,0.034 0.01372,0.0686 0.01758,0.10938 0.0039,0.0404 0.0063,0.0819 0.0039,0.125 0.0022,0.034 0.0157,0.0733 0.04101,0.11523 0.03167,0.0404 0.0343,0.10498 0.0098,0.19532 -0.02634,0.0835 -0.05101,0.21128 -0.07422,0.38476 -0.02321,0.17348 -0.02559,0.36243 -0.0059,0.56641 0.02623,0.20182 0.05707,0.40308 0.08984,0.60351 0.03107,0.19389 0.06062,0.38496 0.08984,0.57227 0.03413,0.17877 0.045,0.34699 0.03125,0.5039 -0.0071,0.15534 -0.0047,0.32353 0.0098,0.50782 0.01931,0.17612 0.04169,0.35981 0.06445,0.54883 0.05868,0.47901 0.08315,0.79268 0.07422,0.9414 -0.0089,0.14854 -0.0083,0.24529 0.0039,0.29102 0.01221,0.0457 0.02085,0.10346 0.02539,0.17187 0.01281,0.17802 -0.01875,0.35641 -0.0957,0.53711 -0.07217,0.17273 -0.109895,0.30502 -0.113282,0.39649 -0.0034,0.0915 -0.0086,0.1802 -0.01367,0.26562 -2.96e-4,0.0767 -0.009,0.14089 -0.0293,0.19531 -0.01856,0.0609 -0.06215,0.0968 -0.128907,0.10743 -0.06046,0.008 -0.105485,0.008 -0.134765,0.004 -0.02271,-0.008 -0.04509,-0.0159 -0.06836,-0.0234 -0.08418,-0.054 -0.177012,-0.0622 -0.279296,-0.0293 -0.09557,0.034 -0.167377,0.0517 -0.214844,0.0566 -0.105978,0.0189 -0.187045,-0.002 -0.240235,-0.0703 -0.04695,-0.0711 -0.104514,-0.18747 -0.175781,-0.34961 -0.06473,-0.16366 -0.13392,-0.33147 -0.207031,-0.5 -0.194748,-0.41469 -0.345195,-0.60794 -0.449219,-0.58008 -0.05851,0.0151 -0.07844,0.0687 -0.06055,0.16211 0.0178,0.0926 0.03167,0.17037 0.04102,0.23047 0.01565,0.0586 0.02711,0.1293 0.03516,0.21093 0.0081,0.0816 0.01293,0.2048 0.01563,0.3711 0.0028,0.16667 -0.002,0.32733 -0.01563,0.48437 -0.04421,0.38121 -0.161064,0.59791 -0.349609,0.64844 -0.149537,0.0401 -0.270599,0.0114 -0.365235,-0.0801 -0.03819,-0.0385 -0.07702,-0.0767 -0.115234,-0.11523 -0.039976,-0.045 -0.099509,-0.0747 -0.1796875,-0.0879 -0.075443,-0.0227 -0.1413173,-0.0466 -0.1972656,-0.0723 -0.055948,-0.0265 -0.105007,-0.0691 -0.1484375,-0.12695 -0.061644,-0.0741 -0.1352451,-0.21431 -0.21875,-0.42188 -0.078686,-0.21581 -0.1544038,-0.38087 -0.2265625,-0.49414 -0.072144,-0.11301 -0.1458412,-0.22148 -0.2226563,-0.32617 -0.185896,-0.27779 -0.2976093,-0.4878 -0.3359375,-0.63086 -0.031786,-0.14475 -0.071817,-0.26659 -0.1191406,-0.36523 -0.040747,-0.10054 -0.086409,-0.1964 -0.1386719,-0.28711 -0.052169,-0.0907 -0.1128503,-0.18361 -0.1796875,-0.27735 -0.060363,-0.0952 -0.1216842,-0.19659 -0.1855469,-0.30468 -0.059146,-0.11679 -0.1226159,-0.2211 -0.1894531,-0.31446 -0.062124,-0.10167 -0.1229975,-0.19791 -0.1816406,-0.28711 -0.125983,-0.21014 -0.1811139,-0.40709 -0.1679687,-0.59179 0.019767,-0.18633 -0.016743,-0.3617 -0.109375,-0.52539 -0.092534,-0.16328 -0.1976393,-0.31901 -0.3144532,-0.46875 -0.112029,-0.15799 -0.2110656,-0.30275 -0.2949218,-0.4336 -0.09205,-0.13568 -0.1201267,-0.2567 -0.085938,-0.36328 0.032353,-0.11338 0.098461,-0.19299 0.1972657,-0.24023 0.1053014,-0.0491 0.2143187,-0.0796 0.3300781,-0.0898 0.1137827,-0.0189 0.2266742,-0.0273 0.3378906,-0.0273 0.1729663,-0.004 0.2858815,-0.0301 0.3359375,-0.0781 0.054573,-0.0563 0.099272,-0.0977 0.1347657,-0.12109 0.033789,-0.0302 0.076896,-0.0489 0.1289062,-0.0625 0.05201,-0.0151 0.1226695,-0.0128 0.2128906,0.0137 0.096722,0.0227 0.1653884,0.0615 0.2070313,0.11328 0.048166,0.0495 0.085849,0.11116 0.1132812,0.1875 0.033827,0.0745 0.063761,0.1603 0.089844,0.25782 0.024378,0.0911 0.083446,0.22261 0.1777343,0.39257 0.2876372,0.50132 0.4393637,0.97509 0.4550782,1.42383 0.00767,0.26268 0.054128,0.47096 0.1367187,0.62305 0.080818,0.14551 0.1546059,0.20167 0.2226563,0.16992 0.061746,-0.0302 0.091262,-0.089 0.087891,-0.17969 -0.00491,-0.0964 -0.0257,-0.20787 -0.060547,-0.33789 -0.030009,-0.13833 -0.065402,-0.28426 -0.1054687,-0.43359 -0.041802,-0.1561 -0.065386,-0.30042 -0.074219,-0.4375 -0.00881,-0.13682 -0.017278,-0.24353 -0.023437,-0.31836 -0.00627,-0.0752 -0.00854,-0.13345 -0.00586,-0.17578 0.011603,-0.0869 0.041108,-0.14643 0.087891,-0.17969 -0.2159093,-0.70174 -0.2342761,-1.19819 -0.054687,-1.49023 0.035074,-0.051 0.082114,-0.0857 0.140625,-0.10157 0.065008,-0.0189 0.1375884,0.007 0.21875,0.0781 0.081139,0.0688 0.1547394,0.20901 0.2187505,0.42187 0.105229,0.3413 0.227972,0.66743 0.367187,0.97852 0.139113,0.31106 0.237291,0.53929 0.296875,0.68359 0.06612,0.14249 0.128445,0.27211 0.1875,0.38868 0.220415,0.48446 0.335768,0.53695 0.345703,0.1582 0.0044,-0.32164 -0.02517,-0.59996 -0.08789,-0.83399 -0.06274,-0.23395 -0.113096,-0.36283 -0.154297,-0.38671 -0.177861,-0.0919 -0.226784,-0.2725 -0.146484,-0.54493 0.03065,-0.11981 0.02752,-0.26002 -0.0078,-0.41797 -0.05763,-0.31898 -0.08371,-0.50723 -0.07813,-0.56445 0.01036,-0.0654 0.03961,-0.1286 0.08594,-0.18945 0.05105,-0.0695 0.107324,-0.12652 0.171875,-0.17188 0.08144,-0.0603 0.161143,-0.0921 0.240234,-0.0957 z m 26.929688,0.45508 c -0.134627,0.0189 -0.26468,0.0231 -0.392579,0.0117 -0.127887,-0.0113 -0.286141,-0.005 -0.474609,0.0176 -0.188466,0.0189 -0.32656,0.0312 -0.414062,0.0312 -0.09423,0 -0.174875,0.008 -0.242188,0.0195 -0.107698,0.0189 -0.121784,0.0778 -0.04102,0.17187 -0.107697,0.10772 -0.110712,0.19445 -0.0098,0.26172 0.07404,0.0472 0.195005,0.0703 0.363281,0.0703 0.114425,0.0113 0.218265,0.0408 0.3125,0.082 0.09423,0.034 0.198075,0.0571 0.3125,0.0703 0.134619,0.0189 0.300891,0.0557 0.496094,0.10937 0.195212,0.0473 0.339362,0.0414 0.433594,-0.0176 0.09422,-0.0673 0.12851,-0.1477 0.101562,-0.24218 -0.02683,-0.0941 -0.04102,-0.16603 -0.04102,-0.21289 -0.0068,-0.0473 -0.01273,-0.0875 -0.01953,-0.1211 -0.0068,-0.0805 -0.03801,-0.14082 -0.0918,-0.18164 -0.06059,-0.0472 -0.109987,-0.0703 -0.15039,-0.0703 -0.04713,-0.008 -0.09549,-0.008 -0.142578,0 z m -33.070313,1.13867 c 0.2558022,-0.034 0.560673,0.0581 0.9121094,0.27734 0.2260951,0.14174 0.3855422,0.30918 0.4785156,0.5 0.099511,0.18936 0.1710192,0.38122 0.2167969,0.57813 0.068334,0.2812 0.1443918,0.48507 0.2265625,0.60937 0.082099,0.12435 0.1397074,0.22104 0.171875,0.28907 0.032088,0.068 0.048328,0.17026 0.050781,0.30859 0.00707,0.13039 -0.015345,0.23124 -0.066406,0.30078 -0.05105,0.0695 -0.1129299,0.12066 -0.1875,0.1543 -0.074767,0.034 -0.1498437,0.0559 -0.2226563,0.0703 -0.073485,0.0113 -0.1322214,0.0266 -0.1777343,0.0391 -0.045513,0.0113 -0.075373,0.0342 -0.087891,0.0645 -0.00767,0.0227 -0.016673,0.0507 -0.029297,0.082 -0.033335,0.0578 -0.1194846,0.0835 -0.2597656,0.0801 -0.1404737,-0.004 -0.2710413,-0.0561 -0.3886718,-0.15625 -0.1193538,-0.10734 -0.1731456,-0.27099 -0.1621094,-0.49024 0.00206,-0.0703 0.00616,-0.13433 0.011719,-0.1914 0.00375,-0.0639 -0.00598,-0.11291 -0.029297,-0.14844 -0.050408,-0.0843 -0.1253249,-0.11727 -0.2246093,-0.0977 -0.099481,0.0189 -0.1768062,0.0664 -0.2324219,0.14649 -0.073134,0.11716 -0.1075824,0.24947 -0.1035156,0.39453 0.00881,0.13682 0.024644,0.23394 0.046875,0.29101 0.028611,0.0552 0.050947,0.11468 0.068359,0.17969 0.017424,0.065 0.038707,0.13163 0.064453,0.20117 0.071316,0.16214 0.1412969,0.26595 0.2089843,0.31055 0.074158,0.0427 0.1311016,0.0627 0.171875,0.0586 0.04097,-0.003 0.078836,-0.012 0.1113282,-0.0195 0.037039,-0.0189 0.074269,-0.0301 0.1132812,-0.041 0.039016,-0.0113 0.099444,-0.0113 0.1796875,0.002 0.080243,0.0113 0.160029,0.0267 0.2402344,0.041 0.086767,0.0113 0.1684775,0.0468 0.2460937,0.10156 0.077681,0.0559 0.139362,0.0887 0.1835938,0.0976 0.050729,0.008 0.095078,0.0141 0.1328125,0.0254 0.035792,0.002 0.067949,0.008 0.097656,0.0156 0.035792,0.003 0.06987,0.0263 0.1035156,0.0762 0.1455004,0.20485 0.2368639,0.46407 0.2714844,0.77539 0.016706,0.11377 0.026941,0.20465 0.03125,0.27344 0.010847,0.0669 0.019709,0.12602 0.027344,0.17969 0.00563,0.0472 0.00955,0.0924 0.013672,0.13281 0.00217,0.034 0.014117,0.0868 0.033203,0.1582 0.071422,0.26646 0.080064,0.48296 0.027344,0.65039 -0.046182,0.16592 -0.1084104,0.28732 -0.1855468,0.36328 -0.077068,0.0763 -0.1235633,0.13118 -0.1425782,0.16407 -0.019049,0.034 -0.033902,0.071 -0.042969,0.11523 -0.00246,0.0423 -0.012756,0.0901 -0.033203,0.14453 -0.04842,0.13115 -0.1419564,0.24038 -0.2792969,0.32617 -0.155074,0.0975 -0.3305234,0.16949 -0.5273437,0.21485 -0.1885493,0.0506 -0.3380222,0.0796 -0.4472657,0.0879 -0.1092397,0.008 -0.2200703,-0.0151 -0.3320312,-0.0684 -0.1054602,-0.0556 -0.2003069,-0.1201 -0.2832031,-0.19531 -0.078161,-0.0835 -0.1337565,-0.12532 -0.1679688,-0.12305 -0.035792,-0.002 -0.072312,0.002 -0.1113281,0.0117 l -0.1171875,0.0293 c -0.104024,0.0265 -0.183618,0.0161 -0.2382813,-0.0293 -0.049927,-0.0563 -0.078477,-0.11039 -0.085937,-0.16406 -0.00275,-0.062 -0.022413,-0.146 -0.056641,-0.24805 C 4.30027,426.80817 4.274393,426.71218 4.25,426.62109 c -0.017802,-0.0926 6.494e-4,-0.18134 0.054687,-0.26562 0.1229027,-0.16554 0.242082,-0.26727 0.3574219,-0.30469 0.1150601,-0.0385 0.1860702,-0.0825 0.2148437,-0.13086 0.028573,-0.0495 0.04979,-0.0931 0.060547,-0.13086 0.017272,-0.0397 0.044716,-0.0674 0.082031,-0.084 0.043555,-0.0189 0.089247,-0.031 0.1386719,-0.0274 0.1192592,0.003 0.1926637,0.0545 0.21875,0.15235 0.026154,0.0975 0.049638,0.18877 0.072266,0.27344 0.027515,0.0763 0.060798,0.1434 0.097656,0.20312 0.090837,0.15685 0.1944569,0.21055 0.3144531,0.16406 0.1332775,-0.0488 0.172139,-0.20444 0.1152344,-0.46875 -0.019162,-0.0714 -0.037268,-0.13849 -0.054687,-0.20312 L 5.865234,425.58391 C 5.7833594,425.27866 5.5744109,425.08413 5.2382812,425 5.1038511,424.96598 4.9719,424.93497 4.8457031,424.90625 4.7194669,424.87601 4.5967137,424.83397 4.4765625,424.77539 4.2032611,424.63971 4.0034301,424.45261 3.8769531,424.21484 3.7505034,423.97711 3.6643245,423.82436 3.6191406,423.75977 3.5722545,423.68871 3.5329711,423.6439 3.5,423.625 c -0.026449,-0.0189 -0.054486,-0.0342 -0.083984,-0.0391 -0.02928,-0.004 -0.075551,-0.0338 -0.1386718,-0.0879 -0.097681,-0.0782 -0.144815,-0.18791 -0.140625,-0.32813 0.00419,-0.14022 0.00835,-0.25619 0.011719,-0.34765 0.00163,-0.0979 -0.011217,-0.1988 -0.039063,-0.30274 -0.027848,-0.10394 -0.060559,-0.20472 -0.099609,-0.29883 -0.034416,-0.10204 -0.065838,-0.20465 -0.09375,-0.30859 -0.049435,-0.23584 -0.018391,-0.47239 0.089844,-0.70899 0.1054915,-0.23054 0.2618381,-0.39928 0.4707031,-0.5039 0.090546,-0.0522 0.1811312,-0.10113 0.2734375,-0.14649 0.092306,-0.0457 0.1831141,-0.11071 0.2714844,-0.19726 0.1654412,-0.1629 0.2839487,-0.25454 0.3554687,-0.27344 0.078028,-0.0189 0.1393931,-0.0293 0.1816407,-0.0293 0.048775,0 0.098376,-0.004 0.1523437,-0.0117 0.060465,-0.008 0.1211804,-0.0202 0.1796875,-0.0391 0.065008,-0.0189 0.1374599,-0.0304 0.21875,-0.0391 z m 31.818359,1.4082 c 0.154814,-0.0189 0.330191,0.0112 0.525391,0.0996 0.188466,0.0809 0.320488,0.16622 0.394531,0.25391 0.07404,0.0809 0.163768,0.1475 0.271485,0.20117 0.100951,0.0541 0.218888,0.0943 0.353515,0.1211 0.127899,0.0189 0.259916,0.0919 0.394532,0.21289 0.09422,0.0741 0.151731,0.13439 0.171874,0.18164 0.02003,0.0404 0.04337,0.0806 0.07031,0.12109 0.02003,0.0404 0.04944,0.0866 0.08984,0.14062 0.03364,0.054 0.06489,0.11437 0.0918,0.18165 0.08077,0.16818 0.09787,0.31445 0.05078,0.43554 0.03364,0.0741 0.05686,0.14663 0.07031,0.22071 0.0068,0.0673 0.0208,0.13881 0.04102,0.21289 0.05386,0.15458 0.143585,0.24169 0.271484,0.26171 0.1279,0.0113 0.259916,4.4e-4 0.394532,-0.0391 0.134626,-0.0472 0.247573,-0.0752 0.341797,-0.082 0.30289,-0.034 0.566943,0.0409 0.789062,0.22266 0.134627,0.11452 0.278777,0.18902 0.433594,0.22265 0.148082,0.034 0.248876,0.094 0.302734,0.18164 0.134627,0.14816 0.105365,0.28913 -0.08984,0.42383 -0.02003,0.0189 -0.04836,0.0636 -0.08203,0.13086 -0.05386,0.0941 -0.137547,0.15443 -0.251953,0.18164 -0.121134,0.0189 -0.24211,0.0312 -0.363281,0.0312 -0.121172,0 -0.236072,0.007 -0.34375,0.0293 -0.107679,0.0189 -0.222579,0.0435 -0.34375,0.0703 -0.32984,0.0605 -0.554622,0.0918 -0.675781,0.0918 -0.121134,0 -0.245148,0.004 -0.373047,0.0117 -0.1279,0 -0.242799,-0.019 -0.34375,-0.0508 -0.100952,-0.0404 -0.167497,-0.0576 -0.201172,-0.0508 -0.03364,0.008 -0.07093,-5e-5 -0.111328,-0.0195 -0.04713,-0.0189 -0.101562,-0.0435 -0.16211,-0.0703 -0.06731,-0.0265 -0.13382,-0.0473 -0.201172,-0.0605 -0.141354,-0.0265 -0.264283,0.0115 -0.365234,0.1211 -0.114406,0.12132 -0.23539,0.18164 -0.363281,0.18164 h -0.06055 c -0.228854,-0.0189 -0.382118,-0.0209 -0.462891,-0.01 -0.228854,0.054 -0.455611,0.082 -0.677734,0.082 v -0.002 l -0.837891,0.0469 c -0.14135,0 -0.291579,0.004 -0.453125,0.0117 -0.403859,0.0265 -0.630617,8.9e-4 -0.677734,-0.0801 -0.04039,-0.0741 -0.08374,-0.12551 -0.13086,-0.15235 -0.04712,-0.034 -0.07031,-0.066 -0.07031,-0.0996 v -0.17187 c -0.0067,-0.0805 -0.0067,-0.16622 0,-0.25391 0.01346,-0.20863 0.04272,-0.34468 0.08984,-0.41211 0.04712,-0.0741 0.07833,-0.15683 0.0918,-0.24414 0.01346,-0.0873 0.02257,-0.17403 0.0293,-0.26172 v -0.26367 c -0.0067,-0.0809 -0.0098,-0.15046 -0.0098,-0.21094 0,-0.0673 0.008,-0.11082 0.02148,-0.13086 0.03364,-0.0805 0.0458,-0.14945 0.03906,-0.20312 -0.0067,-0.0609 0.02147,-0.11625 0.08203,-0.16992 0.05385,-0.0541 0.09721,-0.0909 0.130859,-0.11133 0.02691,-0.0189 0.04708,-0.0853 0.06055,-0.19336 0.01346,-0.11452 0.02559,-0.20717 0.03906,-0.28125 0.0067,-0.0741 0.03795,-0.14858 0.0918,-0.22266 0.05385,-0.0741 0.0881,-0.13439 0.101562,-0.18164 0.01346,-0.0472 0.05681,-0.0983 0.13086,-0.15234 0.07404,-0.0605 0.128456,-0.10068 0.162109,-0.12109 0.03364,-0.0189 0.08915,-0.0338 0.169922,-0.041 0.188466,-0.008 0.326559,-0.0541 0.414062,-0.14062 0.0875,-0.0873 0.173134,-0.13383 0.253907,-0.14063 0.08077,-0.0113 0.173552,-0.0217 0.28125,-0.0293 0.107696,-0.008 0.242756,-0.0161 0.404296,-0.0312 z m 10.248047,1.61329 c 0.158216,-0.0202 0.293236,-0.009 0.404297,0.0312 l 0.04102,0.0195 c 0.134627,-0.0541 0.27878,-0.0615 0.433594,-0.0195 0.14808,0.034 0.256943,0.06 0.324218,0.0801 0.06059,0.0113 0.130169,0.0341 0.210938,0.0605 0.08077,0.0265 0.186554,0.0582 0.314453,0.0918 0.121172,0.034 0.228043,0.0663 0.322265,0.0996 0.0875,0.034 0.168147,0.0709 0.242188,0.11132 0.148082,0.0809 0.398036,0.29066 0.748047,0.62696 0.107679,0.10771 0.21455,0.18518 0.322265,0.23242 0.107679,0.0404 0.191406,0.10076 0.251954,0.18164 0.20194,0.10772 0.325955,0.19741 0.373046,0.27148 0.114407,0.14816 0.154732,0.34656 0.121094,0.59571 l 0.002,0.002 c 0.208668,0.2691 0.3125,0.49706 0.3125,0.68555 0,0.0873 -0.02836,0.18229 -0.08203,0.2832 -0.05386,0.0941 -0.117365,0.15815 -0.191406,0.19141 -0.07404,0.0265 -0.154692,0.041 -0.242188,0.041 H 50.78125 c -0.181757,-0.008 -0.346055,0.0188 -0.494141,0.0801 -0.148082,0.0605 -0.256943,0.10106 -0.324218,0.12109 -0.141355,0.034 -0.345977,0.044 -0.615235,0.0293 -0.208667,-0.008 -0.332643,-0.002 -0.373047,0.0195 -0.04713,0.0189 -0.09049,0.0293 -0.130859,0.0293 -0.0404,0 -0.183457,-0.0149 -0.425781,-0.041 -0.578865,-0.0741 -0.873256,-0.0398 -0.886719,0.10157 -0.01323,0.0741 -0.0306,0.11132 -0.05078,0.11132 -0.02003,-0.008 -0.06546,0.0115 -0.132813,0.0508 -0.07404,0.0404 -0.129518,0.0665 -0.169922,0.0801 -0.0404,0.008 -0.105863,0.0117 -0.193359,0.0117 -0.0875,0 -0.168148,-0.0125 -0.242187,-0.0312 -0.07404,-0.0189 -0.146663,-0.0415 -0.220704,-0.0684 -0.511555,-0.1886 -0.942954,-0.25522 -1.292968,-0.20117 -0.383664,0.0741 -0.653781,0.10009 -0.808594,0.0801 -0.161537,-0.0265 -0.274484,-0.066 -0.341797,-0.11328 -0.06731,-0.0541 -0.127782,-0.11437 -0.181641,-0.18164 -0.06059,-0.0673 -0.10894,-0.1477 -0.142578,-0.24219 -0.06731,-0.20183 -0.05021,-0.3772 0.05078,-0.52539 0.10095,-0.15458 0.164496,-0.29593 0.191406,-0.42383 0.02683,-0.12812 0.04405,-0.24876 0.05078,-0.36328 0.02003,-0.29631 0.05743,-0.47761 0.111328,-0.54492 0.05386,-0.0673 0.09722,-0.13094 0.130859,-0.19141 0.02683,-0.0673 0.05013,-0.12463 0.07031,-0.17187 0.06731,-0.13455 0.132774,-0.21498 0.193359,-0.24219 0.06059,-0.0265 0.116064,-0.0625 0.169922,-0.10938 0.04713,-0.0472 0.101524,-0.0983 0.16211,-0.15234 0.154809,-0.12132 0.319144,-0.19878 0.49414,-0.23242 0.114407,-0.0189 0.217192,-0.0379 0.304688,-0.0508 0.0875,-0.0113 0.171222,-0.0265 0.251953,-0.0488 0.262526,-0.0605 0.493384,-0.13201 0.695312,-0.21289 0.205295,-0.0807 0.386707,-0.13218 0.544922,-0.15234 z m -10.205078,0.0195 c -0.06262,-0.002 -0.113911,0.0105 -0.154297,0.0371 v 0.002 c -0.134619,0.11452 -0.255583,0.16066 -0.363281,0.14062 -0.0067,-0.008 -0.02385,-0.008 -0.05078,0 -0.01346,0.0113 -0.02861,0.0265 -0.04883,0.0488 -0.02691,0.0189 -0.05207,0.0514 -0.07227,0.0918 -0.06058,0.15458 -0.06058,0.29593 0,0.42383 0.05385,0.12132 0.13449,0.2037 0.242188,0.24414 0.107696,0.034 0.193327,0.0488 0.253906,0.0488 0.05385,-0.008 0.09417,-0.0138 0.121094,-0.0176 0.02018,-0.008 0.04641,-0.0161 0.08008,-0.0312 0.02691,-0.0113 0.06725,-0.0217 0.121093,-0.0293 0.04712,-0.0113 0.11866,-0.0238 0.212891,-0.0312 0.09423,-0.0113 0.195041,-0.0113 0.302734,0 0.100963,0.008 0.193747,0.0157 0.28125,0.0195 0.222123,0.0113 0.348052,-0.0151 0.375,-0.0801 0.03364,-0.0741 -0.058,-0.19509 -0.273437,-0.36328 -0.222119,-0.18179 -0.490284,-0.33371 -0.806641,-0.45508 -0.08414,-0.0302 -0.158083,-0.0469 -0.220703,-0.0488 z m 10.570313,1.60742 v 0.002 c -0.09422,-0.0113 -0.209124,-0.002 -0.34375,0.0371 -0.141355,0.034 -0.256254,0.10555 -0.34375,0.21289 -0.0875,0.10091 -0.162071,0.17283 -0.222657,0.21289 -0.06059,0.0404 -0.113063,0.0757 -0.160156,0.10938 -0.09422,0.0673 -0.122435,0.13251 -0.08203,0.19336 0.06731,0.0873 0.216454,0.13086 0.445312,0.13086 v -0.002 l 0.574219,-0.0293 c 0.161537,-0.0113 0.313739,-0.004 0.455078,0.0293 0.134627,0.034 0.278777,0.0415 0.433594,0.0195 0.154809,-0.0264 0.28683,-0.0346 0.394531,-0.0195 0.107679,0.0113 0.194406,0.009 0.261719,-0.0176 0.06731,-0.0265 0.138812,-0.0346 0.212891,-0.0195 0.06731,0.008 0.13382,0.0157 0.201172,0.0195 0.175028,0.0113 0.269748,-0.0226 0.283203,-0.10156 0.0068,-0.0541 -0.01627,-0.1051 -0.07031,-0.15234 -0.06059,-0.0473 -0.13516,-0.0875 -0.222656,-0.1211 -0.141354,-0.0605 -0.325833,-0.10995 -0.554688,-0.15039 -0.09422,-0.0113 -0.195055,-0.0468 -0.302734,-0.10156 -0.20194,-0.0941 -0.34609,-0.14062 -0.433594,-0.14062 -0.09422,0 -0.15173,-0.004 -0.171875,-0.0117 -0.02683,-0.008 -0.05512,-0.0157 -0.08203,-0.0195 -0.02683,-0.0113 -0.05621,-0.0263 -0.08984,-0.041 -0.03364,-0.0113 -0.09414,-0.0266 -0.18164,-0.0391 z m -26.507813,0.7207 a 9.8267712,9.8267712 0 0 1 9.826172,9.82813 9.8267712,9.8267712 0 0 1 -9.826172,9.82617 9.8267712,9.8267712 0 0 1 -9.826172,-9.82617 9.8267712,9.8267712 0 0 1 9.826172,-9.82813 z m 29.910156,1.79102 v 0.002 c 0.07404,0 0.137586,0.0227 0.191407,0.0703 0.04713,0.0404 0.08742,0.10177 0.121093,0.18946 0.03364,0.0873 0.05686,0.18525 0.07031,0.29296 0.02003,0.24908 -0.01699,0.46469 -0.111328,0.64649 -0.0875,0.16819 -0.113714,0.32956 -0.08008,0.48437 0.03364,0.14816 0.06792,0.26621 0.101562,0.35352 0.02683,0.0805 0.05317,0.17845 0.08008,0.29297 0.02683,0.10771 0.0379,0.21612 0.03125,0.32422 0,0.10771 -0.05747,0.1974 -0.171875,0.27148 -0.121171,0.0741 -0.259275,0.11467 -0.414062,0.1211 -0.15481,0.008 -0.313057,-0.0151 -0.47461,-0.0703 -0.161537,-0.054 -0.342994,-0.0742 -0.544921,-0.0605 -0.208668,0.0113 -0.384033,0.0267 -0.525391,0.041 -0.148082,0.0113 -0.277076,0.0113 -0.384766,0 -0.25576,-0.034 -0.434193,-0.004 -0.535156,0.0899 -0.0875,0.0741 -0.188328,0.11132 -0.302734,0.11132 -0.121134,0 -0.21889,-0.004 -0.292969,-0.0117 -0.07404,-0.008 -0.137548,-0.0303 -0.191406,-0.0703 -0.05386,-0.0404 -0.09722,-0.0635 -0.13086,-0.0703 -0.0404,-0.0113 -0.10691,-0.0113 -0.201172,0 -0.383663,0.0541 -0.680011,0.0742 -0.888672,0.0606 -0.208666,-0.0189 -0.38707,-0.0185 -0.535156,0.0117 -0.154809,0.0189 -0.280776,0.0231 -0.375,0.0117 -0.100951,-0.0113 -0.184677,-0.003 -0.251953,0.0195 -0.06731,0.0265 -0.113677,0.0369 -0.140625,0.0293 -0.03364,-0.0113 -0.07704,-0.0113 -0.130859,0 -0.06059,0.0113 -0.126046,0.0263 -0.19336,0.041 -0.20194,0.0404 -0.340006,0.0542 -0.414062,0.041 -0.07404,-0.0189 -0.15773,-0.0543 -0.251953,-0.10156 -0.100951,-0.0541 -0.161458,-0.11733 -0.181641,-0.19141 -0.02003,-0.0741 -0.0374,-0.11764 -0.05078,-0.13085 -0.01323,-0.0113 -0.0306,-0.0468 -0.05078,-0.10157 -0.0404,-0.14135 -0.04326,-0.24522 -0.0098,-0.3125 0.03364,-0.0673 0.05382,-0.12759 0.06055,-0.18164 v -0.16211 c -0.0068,-0.0609 -0.01569,-0.1182 -0.0293,-0.17187 l -0.01953,-0.1211 c -0.0404,-0.14135 -0.03452,-0.24818 0.01953,-0.32226 0.04713,-0.0473 0.08438,-0.0812 0.111328,-0.10156 0.02683,-0.0189 0.06724,-0.0231 0.121094,-0.0117 0.05386,0.0113 0.09722,0.009 0.130859,-0.0176 0.03364,-0.0265 0.08308,-0.0393 0.150391,-0.0312 0.06059,0.008 0.10894,0.0117 0.142578,0.0117 0.02683,-0.008 0.05621,-0.0157 0.08984,-0.0195 0.06731,-0.0113 0.147926,-0.007 0.242187,0.0195 0.09422,0.0265 0.159684,0.044 0.19336,0.0508 0.02683,0.008 0.05317,0.0117 0.08008,0.0117 0.0875,0 0.171222,0.0115 0.251953,0.0391 0.07404,0.0189 0.137548,0.0338 0.191406,0.041 h 0.171875 0.222656 c 0.08077,0 0.181601,0.006 0.302735,0.0176 0.121171,0.008 0.265326,0.0162 0.433593,0.0312 0.161538,0.008 0.327799,0.0138 0.496094,0.0176 0.44425,0.0265 0.726501,0.0596 0.847656,0.0996 0.06059,0.10772 0.201713,0.12484 0.423829,0.0508 l 0.21289,-0.0703 c 0.20194,-0.0673 0.400506,-0.0996 0.595703,-0.0996 0.195213,0 0.382715,0.0152 0.564454,0.0488 0.107677,-0.1954 0.165148,-0.33146 0.171874,-0.41211 0.02683,-0.1954 6.89e-4,-0.37077 -0.08008,-0.52539 -0.08077,-0.16139 -0.115055,-0.27648 -0.101562,-0.34375 0.01323,-0.0733 0.04846,-0.12318 0.101562,-0.15039 0.04713,-0.034 0.1076,-0.0478 0.181641,-0.041 0.06731,0 0.136898,0.008 0.210937,0.0195 0.07404,0.008 0.157768,0.003 0.251954,-0.0117 0.0875,-0.0113 0.176213,-0.0217 0.263672,-0.0293 0.08077,-0.0113 0.15838,-0.0195 0.232421,-0.0195 z m -3.564453,3.74609 v 0.002 c 0.161537,0 0.322812,0.0544 0.484375,0.16211 0.06059,0.0472 0.178524,0.0624 0.353516,0.0488 0.174992,-0.0113 0.350364,-0.0237 0.525391,-0.0312 0.437517,-0.008 0.710665,0.0151 0.818359,0.0703 0.100951,0.0541 0.16142,0.0943 0.181641,0.1211 0.02003,0.0189 0.03515,0.0405 0.04883,0.0605 0.04713,0.10092 0.190188,0.19256 0.425781,0.27344 0.22885,0.0741 0.416382,0.17499 0.564453,0.30274 0.141354,0.12812 0.259254,0.26305 0.353516,0.40429 0.0875,0.13455 0.154041,0.24139 0.201172,0.32227 0.05386,0.0741 0.105213,0.12847 0.152343,0.16211 0.04713,0.034 0.09349,0.066 0.140625,0.0996 0.107679,0.0873 0.16211,0.19905 0.16211,0.33398 0,0.22866 -0.05443,0.39615 -0.16211,0.50391 -0.06059,0.0472 -0.147275,0.0983 -0.261718,0.15234 -0.181758,0.10092 -0.330895,0.23622 -0.445313,0.4043 -0.127899,0.1886 -0.318462,0.30173 -0.574219,0.3418 -0.0875,0.0189 -0.176213,0.0271 -0.263672,0.0195 -0.0875,-0.0113 -0.197404,-0.007 -0.332031,0.0117 -0.134627,0.0113 -0.255565,0.0385 -0.363281,0.0801 -0.107679,0.0404 -0.208474,0.0655 -0.302734,0.0723 -0.282709,0.034 -0.434885,0.12667 -0.455079,0.28125 -0.01323,0.11452 -0.185687,0.18309 -0.515625,0.20312 -0.168264,0.008 -0.326512,-5e-5 -0.474609,-0.0195 -0.154809,-0.0189 -0.284865,-0.0464 -0.392578,-0.0801 -0.195213,-0.054 -0.421959,-0.0712 -0.677735,-0.0508 -0.262487,0.0189 -0.493379,0.0189 -0.695312,0 -0.376932,-0.034 -0.684336,-0.11444 -0.919922,-0.24218 -0.100951,-0.0605 -0.201745,-0.14878 -0.302734,-0.26368 -0.100951,-0.12132 -0.198708,-0.23937 -0.292969,-0.35351 -0.06731,-0.0741 -0.136898,-0.13774 -0.210937,-0.19141 -0.08077,-0.054 -0.155343,-0.12558 -0.222657,-0.21289 -0.195212,-0.23546 -0.252681,-0.4695 -0.171875,-0.70508 0.107679,-0.28951 0.176215,-0.55652 0.203125,-0.79882 0.02683,-0.24227 0.08742,-0.41779 0.181641,-0.5254 0.09422,-0.1145 0.195056,-0.21208 0.302734,-0.29296 0.255761,-0.19541 0.534996,-0.31346 0.837891,-0.35352 0.114406,-0.008 0.195057,-0.0265 0.242187,-0.0586 0.148082,-0.0873 0.346659,-0.1157 0.595704,-0.082 0.249032,0.0265 0.424424,0.0392 0.52539,0.0312 0.09422,-0.0113 0.163807,-0.0304 0.210938,-0.0508 0.04713,-0.0265 0.09549,-0.0522 0.142578,-0.0723 0.127899,-0.0541 0.254928,-0.0801 0.382812,-0.0801 z m 0.07031,1.6582 v 0.002 c -0.350022,0 -0.649393,0.0544 -0.898438,0.16211 -0.25576,0.10771 -0.382812,0.2396 -0.382812,0.39453 0,0.14815 0.164335,0.28121 0.49414,0.40234 0.296164,0.10772 0.491703,0.15619 0.585938,0.14258 v -0.004 c 0.09422,-0.0189 0.171874,-0.0527 0.232422,-0.0996 0.05386,-0.054 0.140547,-0.0909 0.261719,-0.11132 0.121132,-0.0265 0.256214,-0.0392 0.404296,-0.0312 0.141355,0.008 0.279459,0.0117 0.414063,0.0117 0.127899,0 0.245838,-0.004 0.353515,-0.0195 0.100952,-0.0113 0.193755,-0.0341 0.28125,-0.0605 0.208668,-0.0741 0.314454,-0.17991 0.314454,-0.31446 0,-0.20863 -0.405172,-0.35297 -1.212891,-0.43359 -0.222123,-0.0265 -0.504388,-0.041 -0.847656,-0.041 z m -3.189453,3.21094 v 0.002 c 0.08077,0 0.144313,4.3e-4 0.191406,0.01 0.0404,0.008 0.0898,0.008 0.15039,0 0.161538,-0.0189 0.324776,-0.007 0.486329,0.0312 0.161537,0.0404 0.31782,0.0694 0.472656,0.0898 0.154809,0.0113 0.324132,0.0217 0.505859,0.0293 0.302892,0.0189 0.625471,0.0312 0.96875,0.0312 0.612522,0 1.000569,0.0265 1.16211,0.0723 0.343294,0.11452 0.602336,0.13466 0.777343,0.0605 0.04713,-0.0189 0.1046,-0.0271 0.171875,-0.0195 0.06059,0 0.127094,0.004 0.201172,0.0117 h 0.201172 c 0.06731,0 0.144926,-0.019 0.232422,-0.0508 0.181757,-0.0605 0.374251,-0.003 0.576172,0.17187 0.06731,0.0605 0.185251,0.0865 0.353516,0.0801 0.161536,-0.008 0.282512,-0.0117 0.363281,-0.0117 0.07404,0 0.131509,0.019 0.171875,0.0606 0.03364,0.034 0.07096,0.11148 0.111328,0.23242 0.0404,0.11452 0.06662,0.2415 0.08008,0.38282 0.03364,0.35677 -0.03591,0.58351 -0.210938,0.67773 -0.14808,0.0809 -0.441391,0.10132 -0.878906,0.0606 -0.444242,-0.0473 -0.777877,-0.0782 -1,-0.0918 -0.222123,-0.0189 -0.37731,-0.0147 -0.464844,0.0117 -0.0875,0.0265 -0.139973,0.0704 -0.160156,0.13086 -0.02003,0.0605 -0.02829,0.1257 -0.02148,0.19336 0.01323,0.14815 0.05671,0.24906 0.130859,0.30273 0.15481,-0.008 0.370504,-0.0117 0.646485,-0.0117 0.269253,0 0.542389,0.004 0.818359,0.0117 0.679831,0.0189 1.039694,0.0464 1.080078,0.0801 0.04713,0.0265 0.08138,0.0816 0.101563,0.16211 0.02003,0.0809 0.0293,0.16761 0.0293,0.26172 0.01323,0.21543 -0.02383,0.3564 -0.111328,0.42383 -0.08077,0.0673 -0.144313,0.12166 -0.191406,0.16211 -0.04713,0.0404 -0.07946,0.0978 -0.09961,0.17187 -0.02683,0.0673 -0.06724,0.10749 -0.121094,0.12109 -0.05386,0.0113 -0.122356,0.0263 -0.203125,0.041 -0.188485,0.034 -0.306423,0.034 -0.353516,0 -0.05386,-0.034 -0.123441,-0.0508 -0.210937,-0.0508 -0.0875,-0.008 -0.141928,0.003 -0.162109,0.0312 -0.02683,0.0265 -0.124667,0.0532 -0.292969,0.0801 -0.168265,0.0189 -0.355767,0.0379 -0.564453,0.0508 -0.208668,0.0113 -0.40723,0.0176 -0.595704,0.0176 -0.195211,0 -0.34133,-0.019 -0.435546,-0.0605 -0.215396,-0.0941 -0.423064,-0.1 -0.625,-0.0176 -0.201941,0.0741 -0.360188,0.11763 -0.47461,0.13086 -0.121134,0.0113 -0.229996,0.0238 -0.324218,0.0312 -0.249034,0.008 -0.4073,0.0225 -0.47461,0.041 -0.06731,0.0189 -0.15704,0.0341 -0.271484,0.0391 -0.121134,0.008 -0.250128,0.0117 -0.384766,0.0117 h -0.414062 c -0.141355,-0.008 -0.299603,-0.003 -0.47461,0.0117 -0.174992,0.008 -0.348438,0.003 -0.523437,-0.0117 -0.17503,-0.0189 -0.31007,-0.0803 -0.404297,-0.18164 -0.09422,-0.10772 -0.151692,-0.2347 -0.171875,-0.38282 -0.02003,-0.15458 0.04336,-0.28989 0.191406,-0.40429 v -0.008 c -0.141354,-0.47788 -0.05267,-0.75408 0.263672,-0.82812 0.114406,-0.0265 0.207209,-0.0346 0.28125,-0.0195 0.07404,0.0113 0.154692,0.0195 0.242187,0.0195 h 0.302735 c 0.275981,0 0.471508,0.007 0.585937,0.0293 0.107679,0.0189 0.236677,0.023 0.384766,0.0117 0.148082,-0.0113 0.289209,-0.007 0.423828,0.0195 0.134627,0.0189 0.224355,0.0147 0.271484,-0.0117 0.04713,-0.0265 0.08442,-0.0611 0.111329,-0.10157 0.0404,-0.054 0.06055,-0.12363 0.06055,-0.21093 0,-0.14816 -0.06655,-0.24573 -0.201172,-0.29297 -0.06059,-0.0189 -0.16138,-0.0189 -0.302735,0 -0.148082,0.0113 -0.292236,0.0113 -0.433593,0 -0.141355,-0.0113 -0.270348,-0.007 -0.384766,0.0117 -0.121172,0.0113 -0.248201,0.0266 -0.382813,0.0391 -0.134626,0.008 -0.27273,0.0117 -0.414062,0.0117 -0.329802,0 -0.53945,-0.0396 -0.626953,-0.11328 -0.0875,-0.0741 -0.151042,-0.18722 -0.191406,-0.3418 -0.04713,-0.16139 -0.07031,-0.3318 -0.07031,-0.51367 0,-0.42406 0.09472,-0.70522 0.283203,-0.83985 0.08077,-0.0605 0.161419,-0.0898 0.242188,-0.0898 z m -19.628907,19.02149 c 0.166667,0.0104 0.273438,0.0234 0.320313,0.0391 0.130208,0.0521 0.200521,0.19531 0.210937,0.42969 0.0052,0.10937 0.0078,0.22395 0.0078,0.34375 0,0.11979 0.0052,0.24218 0.01563,0.36718 0.02083,0.26042 -0.07813,0.41407 -0.296875,0.46094 -0.177084,0.0469 -0.210938,0.34896 -0.101563,0.90625 0.03646,0.15104 0.05469,0.27865 0.05469,0.38281 0.0052,0.099 -0.0078,0.20834 -0.03906,0.32813 -0.03125,0.11979 -0.04687,0.21614 -0.04687,0.28906 0,0.0729 -0.01042,0.15885 -0.03125,0.25781 0.0052,0.10938 0.0026,0.22136 -0.0078,0.33594 -0.0052,0.10938 -0.01042,0.21615 -0.01563,0.32031 -0.01563,0.25521 -0.01823,0.40625 -0.0078,0.45313 0.01042,0.0469 0.02604,0.0781 0.04687,0.0937 0.02604,0.0104 0.05469,0.0208 0.08594,0.0312 0.07292,0.026 0.117187,0.0599 0.132812,0.10156 0.01563,0.0417 0.02083,0.10156 0.01563,0.17969 0,0.0729 -0.0078,0.15104 -0.02344,0.23437 -0.04687,0.19792 -0.111979,0.32552 -0.195313,0.38282 -0.04687,0.0312 -0.09635,0.0417 -0.148437,0.0312 -0.04687,-0.0104 -0.09896,-0.0208 -0.15625,-0.0312 -0.177084,-0.0312 -0.328125,-0.0156 -0.453125,0.0469 -0.307292,0.16667 -0.544271,0.16667 -0.710938,0 -0.06771,-0.0677 -0.109375,-0.17187 -0.125,-0.3125 -0.02083,-0.25521 -0.0078,-0.41927 0.03906,-0.49219 0.05208,-0.0729 0.09375,-0.11718 0.125,-0.13281 0.03646,-0.0208 0.06771,-0.0391 0.09375,-0.0547 0.05729,-0.026 0.08594,-0.0703 0.08594,-0.13281 0,-0.0469 0.0052,-0.0964 0.01563,-0.14844 0.01563,-0.0573 0.02865,-0.11718 0.03906,-0.17968 0.02604,-0.15105 0.01302,-0.27605 -0.03906,-0.375 -0.05729,-0.11459 -0.08333,-0.20834 -0.07813,-0.28125 0.01042,-0.0729 0.01823,-0.13803 0.02344,-0.19532 l 0.03125,-0.1875 c 0.01042,-0.15104 0.0078,-0.27864 -0.0078,-0.38281 -0.01563,-0.10937 -0.02865,-0.22135 -0.03906,-0.33594 -0.0052,-0.11979 -0.0078,-0.23177 -0.0078,-0.33593 0.0052,-0.10417 0.0078,-0.20313 0.0078,-0.29688 0,-0.21875 -0.02344,-0.34896 -0.07031,-0.39062 -0.04167,-0.0417 -0.08073,-0.0625 -0.117187,-0.0625 -0.03646,-0.005 -0.07292,-0.008 -0.109375,-0.008 -0.09896,0.0104 -0.161458,-0.005 -0.1875,-0.0469 -0.05729,-0.0573 -0.08594,-0.13021 -0.08594,-0.21875 0,-0.0885 0.01563,-0.15625 0.04687,-0.20313 0.03646,-0.0469 0.0599,-0.099 0.07031,-0.15625 0.01042,-0.0625 0.01563,-0.1276 0.01563,-0.19531 0.01042,-0.15625 0.0052,-0.25781 -0.01563,-0.30469 -0.02083,-0.0521 -0.03646,-0.0964 -0.04687,-0.13281 -0.0052,-0.0417 -0.0078,-0.0807 -0.0078,-0.11719 0,-0.15104 0.106771,-0.22916 0.320313,-0.23437 0.130208,-0.005 0.263021,-0.003 0.398437,0.008 0.135417,0.005 0.242188,0 0.320313,-0.0156 0.270834,-0.0521 0.486979,-0.0729 0.648437,-0.0625 z m 18.25,0 c 0.166667,0.0104 0.273438,0.0234 0.320313,0.0391 0.130208,0.0521 0.200521,0.19531 0.210937,0.42969 0.0052,0.10937 0.0078,0.22395 0.0078,0.34375 0,0.11979 0.0052,0.24218 0.01563,0.36718 0.02083,0.26042 -0.07813,0.41407 -0.296875,0.46094 -0.177084,0.0469 -0.210938,0.34896 -0.101563,0.90625 0.03646,0.15104 0.05469,0.27865 0.05469,0.38281 0.0052,0.099 -0.0078,0.20834 -0.03906,0.32813 -0.03125,0.11979 -0.04687,0.21614 -0.04687,0.28906 0,0.0729 -0.01042,0.15885 -0.03125,0.25781 0.0052,0.10938 0.0026,0.22136 -0.0078,0.33594 -0.0052,0.10938 -0.01042,0.21615 -0.01563,0.32031 -0.01563,0.25521 -0.01823,0.40625 -0.0078,0.45313 0.01042,0.0469 0.02604,0.0781 0.04687,0.0937 0.02604,0.0104 0.05469,0.0208 0.08594,0.0312 0.07292,0.026 0.117187,0.0599 0.132812,0.10156 0.01563,0.0417 0.02083,0.10156 0.01563,0.17969 0,0.0729 -0.0078,0.15104 -0.02344,0.23437 -0.04687,0.19792 -0.111979,0.32552 -0.195313,0.38282 -0.04687,0.0312 -0.09635,0.0417 -0.148437,0.0312 -0.04687,-0.0104 -0.09896,-0.0208 -0.15625,-0.0312 -0.177084,-0.0312 -0.328125,-0.0156 -0.453125,0.0469 -0.307292,0.16667 -0.544271,0.16667 -0.710938,0 -0.06771,-0.0677 -0.109375,-0.17187 -0.125,-0.3125 -0.02083,-0.25521 -0.0078,-0.41927 0.03906,-0.49219 0.05208,-0.0729 0.09375,-0.11718 0.125,-0.13281 0.03646,-0.0208 0.06771,-0.0391 0.09375,-0.0547 0.05729,-0.026 0.08594,-0.0703 0.08594,-0.13281 0,-0.0469 0.0052,-0.0964 0.01563,-0.14844 0.01563,-0.0573 0.02865,-0.11718 0.03906,-0.17968 0.02604,-0.15105 0.01302,-0.27605 -0.03906,-0.375 -0.05729,-0.11459 -0.08333,-0.20834 -0.07813,-0.28125 0.01042,-0.0729 0.01823,-0.13803 0.02344,-0.19532 l 0.03125,-0.1875 c 0.01042,-0.15104 0.0078,-0.27864 -0.0078,-0.38281 -0.01563,-0.10937 -0.02865,-0.22135 -0.03906,-0.33594 -0.0052,-0.11979 -0.0078,-0.23177 -0.0078,-0.33593 0.0052,-0.10417 0.0078,-0.20313 0.0078,-0.29688 0,-0.21875 -0.02344,-0.34896 -0.07031,-0.39062 -0.04167,-0.0417 -0.08073,-0.0625 -0.117187,-0.0625 -0.03646,-0.005 -0.07292,-0.008 -0.109375,-0.008 -0.09896,0.0104 -0.161458,-0.005 -0.1875,-0.0469 -0.05729,-0.0573 -0.08594,-0.13021 -0.08594,-0.21875 0,-0.0885 0.01563,-0.15625 0.04687,-0.20313 0.03646,-0.0469 0.0599,-0.099 0.07031,-0.15625 0.01042,-0.0625 0.01563,-0.1276 0.01563,-0.19531 0.01042,-0.15625 0.0052,-0.25781 -0.01563,-0.30469 -0.02083,-0.0521 -0.03646,-0.0964 -0.04687,-0.13281 -0.0052,-0.0417 -0.0078,-0.0807 -0.0078,-0.11719 0,-0.15104 0.106771,-0.22916 0.320313,-0.23437 0.130208,-0.005 0.263021,-0.003 0.398437,0.008 0.135417,0.005 0.242188,0 0.320313,-0.0156 0.270834,-0.0521 0.486979,-0.0729 0.648437,-0.0625 z m -10.539062,0.0312 c 0.07813,0 0.161458,0.0234 0.25,0.0703 0.145833,0.0781 0.242187,0.15104 0.289062,0.21875 0.04687,0.0677 0.07813,0.12239 0.09375,0.16406 0.01563,0.0417 0.04167,0.099 0.07813,0.17188 0.03646,0.0729 0.05208,0.13802 0.04687,0.19531 0,0.0573 0.01042,0.125 0.03125,0.20312 0.02083,0.0781 0.02083,0.16927 0,0.27344 -0.02083,0.10417 -0.02083,0.20833 0,0.3125 0.02083,0.099 0.03125,0.16667 0.03125,0.20313 0,0.0365 0.0026,0.0703 0.0078,0.10156 0.0052,0.0885 0.02344,0.16666 0.05469,0.23437 0.03125,0.0729 0.03906,0.16407 0.02344,0.27344 -0.01042,0.10417 -0.01302,0.19271 -0.0078,0.26563 0.01042,0.0677 0.03906,0.13802 0.08594,0.21093 0.08854,0.14063 0.119792,0.29688 0.09375,0.46875 -0.0052,0.0469 -0.0052,0.099 0,0.15625 0.01042,0.0521 0.01563,0.10157 0.01563,0.14844 0,0.0417 -0.0052,0.0963 -0.01563,0.16406 -0.01563,0.099 -0.01302,0.21875 0.0078,0.35938 0.03125,0.26042 0.04687,0.43489 0.04687,0.52344 0,0.0885 0.0026,0.16406 0.0078,0.22656 0.0052,0.0573 0.01042,0.11979 0.01563,0.1875 0.01563,0.17708 0.01563,0.35677 0,0.53906 -0.01042,0.17708 -0.0651,0.27865 -0.164063,0.30469 -0.03125,0.0573 -0.07292,0.099 -0.125,0.125 -0.05208,0.0312 -0.104166,0.026 -0.15625,-0.0156 -0.05208,-0.0365 -0.09115,-0.0521 -0.117187,-0.0469 l -0.0625,0.0156 c -0.04687,0.005 -0.09375,-0.0286 -0.140625,-0.10156 -0.04687,-0.0729 -0.07292,-0.13021 -0.07813,-0.17187 -0.0052,-0.0469 -0.0052,-0.0912 0,-0.13282 0.02083,-0.0937 0.0052,-0.17708 -0.04687,-0.25 -0.04687,-0.0729 -0.08073,-0.1276 -0.101563,-0.16406 -0.01563,-0.0365 -0.02344,-0.0885 -0.02344,-0.15625 0,-0.0729 -0.0052,-0.11719 -0.01563,-0.13281 -0.0052,-0.0208 -0.01042,-0.0365 -0.01563,-0.0469 -0.02604,-0.0469 -0.03646,-0.11979 -0.03125,-0.21875 0.01042,-0.099 -0.0026,-0.16666 -0.03906,-0.20312 -0.03646,-0.0417 -0.08594,-0.0729 -0.148437,-0.0937 -0.05729,-0.0208 -0.104167,-0.013 -0.140625,0.0234 -0.03125,0.0312 -0.0625,0.0703 -0.09375,0.11718 -0.02604,0.0469 -0.0599,0.0885 -0.101563,0.125 -0.04167,0.0312 -0.09635,0.0391 -0.164062,0.0234 -0.0625,-0.0156 -0.132813,0 -0.210938,0.0469 -0.07813,0.0469 -0.125,0.10416 -0.140625,0.17187 -0.01563,0.0625 -0.03385,0.1276 -0.05469,0.19531 -0.02083,0.0677 -0.02865,0.13021 -0.02344,0.1875 0.01042,0.0573 0.01042,0.11459 0,0.17188 -0.0052,0.0521 -0.01823,0.10416 -0.03906,0.15625 -0.04167,0.13021 -0.09115,0.20052 -0.148438,0.21094 -0.04687,0.005 -0.09635,0.005 -0.148437,0 -0.05729,0.10416 -0.125,0.16666 -0.203125,0.1875 -0.213542,0.0469 -0.341146,0.013 -0.382813,-0.10157 -0.02604,-0.0677 -0.04167,-0.15625 -0.04687,-0.26562 -0.01042,-0.21875 -0.03385,-0.36719 -0.07031,-0.44531 -0.03646,-0.0781 -0.04687,-0.17188 -0.03125,-0.28125 0.02083,-0.10938 0.02865,-0.21875 0.02344,-0.32813 -0.0052,-0.10937 -0.0052,-0.19271 0,-0.25 0.0052,-0.0573 0.01042,-0.10937 0.01563,-0.15625 0.01042,-0.0469 0.02083,-0.0912 0.03125,-0.13281 0.01042,-0.0469 0.01563,-0.099 0.01563,-0.15625 0.0052,-0.0625 0.01563,-0.13281 0.03125,-0.21094 0.01563,-0.0781 0.03125,-0.15885 0.04687,-0.24219 0.04167,-0.20833 0.05729,-0.36458 0.04687,-0.46875 -0.01042,-0.10416 -0.0026,-0.19271 0.02344,-0.26562 0.03125,-0.0729 0.0651,-0.13802 0.101562,-0.19531 0.09375,-0.15105 0.138021,-0.27344 0.132813,-0.36719 -0.0052,-0.099 -0.01042,-0.17448 -0.01563,-0.22656 0,-0.0573 0.0026,-0.11459 0.0078,-0.17188 0.02604,-0.28125 0.158854,-0.72135 0.398438,-1.32031 0.01563,-0.0573 0.0651,-0.10156 0.148437,-0.13281 0.08333,-0.0312 0.166667,-0.0339 0.25,-0.008 0.08854,0.0208 0.158854,0.0312 0.210938,0.0312 0.05729,-0.005 0.104166,-0.026 0.140625,-0.0625 0.04167,-0.0417 0.08333,-0.0807 0.125,-0.11718 0.04687,-0.0365 0.101562,-0.0651 0.164062,-0.0859 0.0625,-0.026 0.132813,-0.0391 0.210938,-0.0391 z m -19.515625,0.0391 c 0.06771,-0.0312 0.148437,-0.026 0.242187,0.0156 0.09896,0.0365 0.169271,0.0625 0.210938,0.0781 l 0.125,0.0312 c 0.04167,0.005 0.08854,0.008 0.140625,0.008 0.05729,-0.005 0.135416,-0.008 0.234375,-0.008 0.104167,-0.005 0.213541,-0.005 0.328125,0 0.119792,0.005 0.234375,0.0208 0.34375,0.0469 0.354167,0.0729 0.627604,0.26823 0.820312,0.58594 0.08333,0.14063 0.127605,0.26563 0.132813,0.375 0.0052,0.10938 0.01042,0.21615 0.01563,0.32031 0.01042,0.099 0.03125,0.21354 0.0625,0.34375 0.03125,0.125 0.04167,0.24479 0.03125,0.35938 -0.01042,0.11458 -0.02344,0.19531 -0.03906,0.24219 -0.01042,0.0417 -0.02344,0.0807 -0.03906,0.11718 -0.02604,0.0781 -0.03646,0.15886 -0.03125,0.24219 0.01042,0.13542 0,0.24219 -0.03125,0.32031 -0.03125,0.0729 -0.0625,0.14844 -0.09375,0.22657 -0.08854,0.1927 -0.184896,0.30208 -0.289063,0.32812 -0.05729,0.0104 -0.104166,0.0208 -0.140625,0.0312 -0.03646,0.0104 -0.05729,0.0338 -0.0625,0.0703 -0.01042,0.026 0.0052,0.0573 0.04687,0.0937 0.04167,0.0312 0.08333,0.0807 0.125,0.14844 0.04687,0.0677 0.08594,0.11198 0.117188,0.13281 0.03125,0.0208 0.0599,0.0339 0.08594,0.0391 0.07813,0.0156 0.127605,0.0338 0.148438,0.0547 0.04687,0.0573 0.08073,0.10417 0.101562,0.14063 0.02604,0.0365 0.03386,0.0911 0.02344,0.16406 -0.01042,0.0729 -0.01042,0.14844 0,0.22656 0.01042,0.0781 0.02083,0.16146 0.03125,0.25 0.01042,0.0833 0.01042,0.15365 0,0.21094 -0.0052,0.0573 -0.0078,0.099 -0.0078,0.125 l 0.03125,0.20313 c 0,0.125 -0.03646,0.22656 -0.109375,0.30468 -0.07292,0.0781 -0.130208,0.1224 -0.171875,0.13282 -0.04167,0.0104 -0.08073,0.008 -0.117187,-0.008 -0.03646,-0.0156 -0.06771,-0.0365 -0.09375,-0.0625 -0.02604,-0.0208 -0.04687,-0.0339 -0.0625,-0.0391 -0.01563,-0.0104 -0.03646,-0.0156 -0.0625,-0.0156 -0.02083,-0.005 -0.04427,-0.013 -0.07031,-0.0234 -0.09375,-0.026 -0.174479,-0.20833 -0.242187,-0.54688 -0.03646,-0.16666 -0.09896,-0.27343 -0.1875,-0.32031 -0.135417,-0.0677 -0.208333,-0.16146 -0.21875,-0.28125 -0.0052,-0.0573 -0.01042,-0.13542 -0.01563,-0.23437 -0.02083,-0.19792 -0.08854,-0.32032 -0.203125,-0.36719 -0.05729,-0.0208 -0.109375,-0.0312 -0.15625,-0.0312 -0.04687,0 -0.09375,0.026 -0.140625,0.0781 -0.0625,0.0781 -0.09375,0.20313 -0.09375,0.375 l 0.02344,0.375 c 0.01042,0.20313 -0.04167,0.33594 -0.15625,0.39844 -0.03125,0.20833 -0.04687,0.39323 -0.04687,0.55469 -0.03646,0.0729 -0.09635,0.11719 -0.179687,0.13281 -0.15625,0.0208 -0.257813,-0.0208 -0.304688,-0.125 -0.06771,-0.13021 -0.122395,-0.20052 -0.164062,-0.21094 -0.01042,-0.005 -0.02865,-0.008 -0.05469,-0.008 -0.02083,-0.005 -0.04687,-0.013 -0.07813,-0.0234 -0.03125,-0.0156 -0.04427,-0.0573 -0.03906,-0.125 0.01042,-0.0677 0.01042,-0.12239 0,-0.16406 -0.01042,-0.0417 -0.02344,-0.0859 -0.03906,-0.13281 -0.04167,-0.13542 -0.0625,-0.26563 -0.0625,-0.39063 v -0.24218 c 0.0052,-0.0729 0.0078,-0.14584 0.0078,-0.21875 -0.01042,-0.23438 -0.04167,-0.4349 -0.09375,-0.60157 -0.04687,-0.16666 -0.07813,-0.27604 -0.09375,-0.32812 -0.03125,-0.11459 -0.04687,-0.22396 -0.04687,-0.32813 0,-0.0625 0.0078,-0.10677 0.02344,-0.13281 l 0.04687,-0.0937 c 0.04167,-0.0781 0.05729,-0.16927 0.04687,-0.27344 -0.0052,-0.10416 -0.01302,-0.20833 -0.02344,-0.3125 -0.0052,-0.10937 -0.01302,-0.22916 -0.02344,-0.35937 -0.0052,-0.13542 -0.01302,-0.27865 -0.02344,-0.42969 -0.0052,-0.15104 -0.0078,-0.29687 -0.0078,-0.4375 0,-0.45833 0.05729,-0.71615 0.171875,-0.77344 0.02083,-0.0104 0.04427,-0.0208 0.07031,-0.0312 0.03125,-0.0156 0.06771,-0.0365 0.109375,-0.0625 0.04167,-0.026 0.07813,-0.0521 0.109375,-0.0781 0.03646,-0.026 0.07292,-0.0469 0.109375,-0.0625 z m 13.265625,0.0312 c 0.15625,-0.0521 0.291666,-0.0391 0.40625,0.0391 0.119792,0.0781 0.229166,0.1276 0.328125,0.14844 0.09896,0.0208 0.192708,0.0338 0.28125,0.0391 0.229167,0.0156 0.369791,0.0443 0.421875,0.0859 0.05208,0.0417 0.101562,0.0755 0.148437,0.10156 0.05208,0.0208 0.09635,0.0391 0.132813,0.0547 0.104167,0.0521 0.166667,0.10156 0.1875,0.14844 0.02083,0.0469 0.04948,0.0911 0.08594,0.13281 0.03646,0.0365 0.07552,0.0781 0.117188,0.125 0.09375,0.11979 0.153646,0.24739 0.179687,0.38281 0.01563,0.0885 0.02865,0.16667 0.03906,0.23438 0.01042,0.0677 0.02344,0.13281 0.03906,0.19531 0.04687,0.20312 0.101563,0.38281 0.164063,0.53906 0.125,0.31771 0.15625,0.5625 0.09375,0.73438 l -0.01563,0.0312 c 0.04167,0.10416 0.04687,0.21614 0.01563,0.33593 -0.02604,0.11459 -0.04687,0.19792 -0.0625,0.25 -0.01042,0.0469 -0.02604,0.10157 -0.04687,0.16407 -0.02083,0.0625 -0.04427,0.14322 -0.07031,0.24218 -0.02604,0.0937 -0.05208,0.17709 -0.07813,0.25 -0.02604,0.0677 -0.05469,0.13021 -0.08594,0.1875 -0.0625,0.11459 -0.223958,0.30729 -0.484375,0.57813 -0.08333,0.0833 -0.143229,0.16666 -0.179688,0.25 -0.03125,0.0833 -0.07813,0.14844 -0.140625,0.19531 -0.08333,0.15625 -0.153645,0.2526 -0.210937,0.28906 -0.114584,0.0885 -0.268229,0.11979 -0.460938,0.0937 -0.208333,0.16146 -0.385416,0.24219 -0.53125,0.24219 -0.06771,0 -0.140625,-0.0208 -0.21875,-0.0625 -0.07292,-0.0417 -0.122395,-0.0912 -0.148437,-0.14844 -0.02083,-0.0573 -0.03125,-0.11979 -0.03125,-0.1875 v -0.23437 c 0.0052,-0.14063 -0.01563,-0.26823 -0.0625,-0.38281 -0.04687,-0.11459 -0.07813,-0.19792 -0.09375,-0.25 -0.02604,-0.10938 -0.03385,-0.26823 -0.02344,-0.47657 0.0052,-0.16146 0,-0.25781 -0.01563,-0.28906 -0.01563,-0.0365 -0.02344,-0.0703 -0.02344,-0.10156 0,-0.0312 0.01042,-0.14063 0.03125,-0.32813 0.05729,-0.44791 0.03125,-0.67708 -0.07813,-0.6875 -0.05729,-0.0104 -0.08594,-0.0234 -0.08594,-0.0391 0.0052,-0.0156 -0.0078,-0.0495 -0.03906,-0.10156 -0.03125,-0.0573 -0.05208,-0.10156 -0.0625,-0.13281 -0.0052,-0.0312 -0.0078,-0.0807 -0.0078,-0.14844 0,-0.0677 0.0078,-0.13021 0.02344,-0.1875 0.01563,-0.0573 0.03385,-0.11459 0.05469,-0.17188 0.145834,-0.39583 0.197917,-0.72916 0.15625,-1 -0.05729,-0.29687 -0.07813,-0.50521 -0.0625,-0.625 0.02083,-0.125 0.04948,-0.21354 0.08594,-0.26562 0.04167,-0.0521 0.08854,-0.099 0.140625,-0.14063 0.05208,-0.0469 0.114583,-0.0833 0.1875,-0.10937 z m 12.1875,0 c 0.15625,-0.0521 0.291666,-0.0391 0.40625,0.0391 0.119792,0.0781 0.229166,0.1276 0.328125,0.14844 0.09896,0.0208 0.192708,0.0338 0.28125,0.0391 0.229167,0.0156 0.369791,0.0443 0.421875,0.0859 0.05208,0.0417 0.101562,0.0755 0.148437,0.10156 0.05208,0.0208 0.09635,0.0391 0.132813,0.0547 0.104167,0.0521 0.166667,0.10156 0.1875,0.14844 0.02083,0.0469 0.04948,0.0911 0.08594,0.13281 0.03646,0.0365 0.07552,0.0781 0.117188,0.125 0.09375,0.11979 0.153646,0.24739 0.179687,0.38281 0.01563,0.0885 0.02865,0.16667 0.03906,0.23438 0.01042,0.0677 0.02344,0.13281 0.03906,0.19531 0.04687,0.20312 0.101563,0.38281 0.164063,0.53906 0.125,0.31771 0.15625,0.5625 0.09375,0.73438 l -0.01563,0.0312 c 0.04167,0.10416 0.04687,0.21614 0.01563,0.33593 -0.02604,0.11459 -0.04687,0.19792 -0.0625,0.25 -0.01042,0.0469 -0.02604,0.10157 -0.04687,0.16407 -0.02083,0.0625 -0.04427,0.14322 -0.07031,0.24218 -0.02604,0.0937 -0.05208,0.17709 -0.07813,0.25 -0.02604,0.0677 -0.05469,0.13021 -0.08594,0.1875 -0.0625,0.11459 -0.223958,0.30729 -0.484375,0.57813 -0.08333,0.0833 -0.143229,0.16666 -0.179688,0.25 -0.03125,0.0833 -0.07813,0.14844 -0.140625,0.19531 -0.08333,0.15625 -0.153645,0.2526 -0.210937,0.28906 -0.114584,0.0885 -0.268229,0.11979 -0.460938,0.0937 -0.208333,0.16146 -0.385416,0.24219 -0.53125,0.24219 -0.06771,0 -0.140625,-0.0208 -0.21875,-0.0625 -0.07292,-0.0417 -0.122395,-0.0912 -0.148437,-0.14844 -0.02083,-0.0573 -0.03125,-0.11979 -0.03125,-0.1875 v -0.23437 c 0.0052,-0.14063 -0.01563,-0.26823 -0.0625,-0.38281 -0.04687,-0.11459 -0.07813,-0.19792 -0.09375,-0.25 -0.02604,-0.10938 -0.03385,-0.26823 -0.02344,-0.47657 0.0052,-0.16146 0,-0.25781 -0.01563,-0.28906 -0.01563,-0.0365 -0.02344,-0.0703 -0.02344,-0.10156 0,-0.0312 0.01042,-0.14063 0.03125,-0.32813 0.05729,-0.44791 0.03125,-0.67708 -0.07813,-0.6875 -0.05729,-0.0104 -0.08594,-0.0234 -0.08594,-0.0391 0.0052,-0.0156 -0.0078,-0.0495 -0.03906,-0.10156 -0.03125,-0.0573 -0.05208,-0.10156 -0.0625,-0.13281 -0.0052,-0.0312 -0.0078,-0.0807 -0.0078,-0.14844 0,-0.0677 0.0078,-0.13021 0.02344,-0.1875 0.01563,-0.0573 0.03385,-0.11459 0.05469,-0.17188 0.145834,-0.39583 0.197917,-0.72916 0.15625,-1 -0.05729,-0.29687 -0.07813,-0.50521 -0.0625,-0.625 0.02083,-0.125 0.04948,-0.21354 0.08594,-0.26562 0.04167,-0.0521 0.08854,-0.099 0.140625,-0.14063 0.05208,-0.0469 0.114583,-0.0833 0.1875,-0.10937 z m 7.15625,0 c 0.223959,0.0833 0.429687,0.13541 0.617187,0.15625 0.187501,0.0208 0.322917,0.0677 0.40625,0.14062 0.08854,0.0729 0.164063,0.15104 0.226563,0.23438 0.151042,0.19792 0.242187,0.41406 0.273437,0.64844 0.0052,0.0885 0.02083,0.15104 0.04687,0.1875 0.06771,0.11458 0.08854,0.26822 0.0625,0.46093 -0.02083,0.19271 -0.02865,0.32813 -0.02344,0.40625 0.01042,0.0729 0.02344,0.12761 0.03906,0.16407 0.02083,0.0365 0.03906,0.0729 0.05469,0.10937 0.04167,0.099 0.0625,0.19792 0.0625,0.29688 0,0.125 -0.04167,0.25 -0.125,0.375 -0.03646,0.0469 -0.04948,0.13802 -0.03906,0.27343 0.01042,0.13542 0.01823,0.27084 0.02344,0.40625 0.0052,0.33855 -0.01302,0.54948 -0.05469,0.63282 -0.04167,0.0781 -0.07292,0.125 -0.09375,0.14062 -0.01563,0.0156 -0.03125,0.0286 -0.04687,0.0391 -0.07813,0.0365 -0.148437,0.14584 -0.210937,0.32813 -0.05729,0.17708 -0.135417,0.32291 -0.234375,0.4375 -0.09896,0.10937 -0.203125,0.20052 -0.3125,0.27344 -0.104167,0.0677 -0.1875,0.11979 -0.25,0.15625 -0.05729,0.0417 -0.09896,0.0807 -0.125,0.11718 l -0.07813,0.10938 c -0.06771,0.0833 -0.153646,0.125 -0.257813,0.125 -0.177083,0 -0.307291,-0.0417 -0.390625,-0.125 -0.03646,-0.0469 -0.07552,-0.11459 -0.117187,-0.20313 -0.07813,-0.14062 -0.182292,-0.25521 -0.3125,-0.34375 -0.145834,-0.099 -0.234375,-0.24739 -0.265625,-0.44531 -0.01563,-0.0677 -0.02083,-0.13542 -0.01563,-0.20312 0.01042,-0.0677 0.0078,-0.15365 -0.0078,-0.25782 -0.01042,-0.10416 -0.03125,-0.19791 -0.0625,-0.28125 -0.03125,-0.0833 -0.04948,-0.16146 -0.05469,-0.23437 -0.02604,-0.21875 -0.09896,-0.33594 -0.21875,-0.35156 -0.08854,-0.0104 -0.140625,-0.14323 -0.15625,-0.39844 -0.0052,-0.13021 0,-0.25261 0.01563,-0.36719 0.01563,-0.11979 0.03646,-0.22135 0.0625,-0.30469 0.04167,-0.15104 0.05469,-0.32552 0.03906,-0.52343 -0.01563,-0.20313 -0.01563,-0.38282 0,-0.53907 0.02604,-0.29166 0.08854,-0.52864 0.1875,-0.71093 0.04687,-0.0781 0.114584,-0.15625 0.203125,-0.23438 0.09375,-0.0781 0.184896,-0.15365 0.273438,-0.22656 0.05729,-0.0521 0.106771,-0.10677 0.148437,-0.16406 0.04167,-0.0625 0.09635,-0.1198 0.164063,-0.17188 0.182292,-0.15104 0.364583,-0.19531 0.546875,-0.13281 z m -10.394531,0.0156 c 0.08073,0.0521 0.136718,0.16667 0.167968,0.34375 0.04167,0.21875 0.06771,0.52344 0.07813,0.91407 l -0.03906,1.77343 c 0,0.78646 0.109375,1.15886 0.328125,1.11719 0.1875,-0.0312 0.273437,-0.36198 0.257812,-0.99219 0,-0.1875 0.01302,-0.30729 0.03906,-0.35937 0.03125,-0.0573 0.05208,-0.10417 0.0625,-0.14063 0.02604,-0.10416 0.03125,-0.24218 0.01563,-0.41406 -0.01042,-0.10937 -0.02865,-0.27344 -0.05469,-0.49219 -0.02604,-0.21875 -0.04948,-0.4427 -0.07031,-0.67187 -0.02083,-0.23438 -0.03125,-0.44531 -0.03125,-0.63281 0,-0.1875 0.01823,-0.30469 0.05469,-0.35157 0.04167,-0.0469 0.09115,-0.0729 0.148438,-0.0781 0.0625,-0.0104 0.125,-0.0104 0.1875,0 0.06771,0.005 0.130208,0.0156 0.1875,0.0312 0.0625,0.0156 0.111979,0.0234 0.148437,0.0234 0.04167,0 0.08854,-0.005 0.140625,-0.0156 0.05729,-0.0156 0.111979,-0.026 0.164063,-0.0312 0.05729,-0.0104 0.109375,-0.0156 0.15625,-0.0156 0.05208,0 0.09896,0.0182 0.140625,0.0547 0.04167,0.0365 0.07552,0.12761 0.101562,0.27344 0.03125,0.14583 0.05208,0.31771 0.0625,0.51563 0.01563,0.19791 0.02344,0.41145 0.02344,0.64062 0,0.22396 -0.0026,0.4375 -0.0078,0.64063 -0.02083,0.44791 -0.04167,0.71875 -0.0625,0.8125 -0.01563,0.0937 -0.03646,0.16145 -0.0625,0.20312 -0.02604,0.0417 -0.05208,0.0807 -0.07813,0.11719 -0.05208,0.0729 -0.0599,0.17708 -0.02344,0.3125 0.03646,0.13541 0.0651,0.23958 0.08594,0.3125 0.03646,0.13021 0.03906,0.24739 0.0078,0.35156 -0.03125,0.10417 -0.04167,0.20573 -0.03125,0.30469 0.02604,0.26562 -0.0052,0.45573 -0.09375,0.57031 -0.04167,0.0573 -0.106771,0.11198 -0.195313,0.16406 -0.177083,0.099 -0.307291,0.21875 -0.390625,0.35938 -0.04167,0.0833 -0.09115,0.13281 -0.148437,0.14844 -0.03125,0.0104 -0.07813,0.013 -0.140625,0.008 -0.0625,-0.0104 -0.130208,-0.0182 -0.203125,-0.0234 -0.07292,-0.0104 -0.143229,-0.0182 -0.210938,-0.0234 -0.06771,-0.0104 -0.114583,-0.0104 -0.140625,0 -0.02604,0.005 -0.04948,0.0208 -0.07031,0.0469 l -0.07031,0.0703 c -0.140625,0.14063 -0.286458,0.125 -0.4375,-0.0469 -0.03125,-0.0365 -0.0625,-0.0703 -0.09375,-0.10157 -0.02604,-0.0365 -0.05208,-0.0625 -0.07813,-0.0781 -0.02604,-0.0208 -0.0625,-0.0391 -0.109375,-0.0547 -0.04167,-0.0208 -0.08854,-0.0495 -0.140625,-0.0859 -0.223958,-0.13541 -0.364583,-0.35416 -0.421875,-0.65625 -0.03125,-0.14583 -0.05729,-0.33333 -0.07813,-0.5625 -0.02083,-0.23437 -0.03906,-0.38281 -0.05469,-0.44531 -0.01042,-0.0625 -0.04167,-0.13021 -0.09375,-0.20312 -0.05208,-0.0781 -0.08594,-0.14844 -0.101563,-0.21094 -0.01563,-0.0677 -0.01823,-0.13802 -0.0078,-0.21094 0.01042,-0.0729 0.02344,-0.15625 0.03906,-0.25 0.04167,-0.25 0.05208,-0.46875 0.03125,-0.65625 -0.02083,-0.1875 -0.02604,-0.33333 -0.01563,-0.4375 0.01563,-0.10417 0.01823,-0.16927 0.0078,-0.19531 -0.01042,-0.0312 -0.02865,-0.0599 -0.05469,-0.0859 -0.02083,-0.026 -0.02604,-0.0807 -0.01563,-0.16406 0.01042,-0.0833 0.01563,-0.16406 0.01563,-0.24219 v -0.24219 c 0.01563,-0.35416 0.07031,-0.56771 0.164063,-0.64062 0.07813,-0.0573 0.158854,-0.0885 0.242187,-0.0937 0.130209,-0.005 0.226563,-0.0287 0.289063,-0.0703 0.06771,-0.0417 0.122396,-0.0755 0.164062,-0.10157 0.130209,-0.0729 0.235677,-0.0833 0.316407,-0.0312 z m -17.777344,0.0234 c 0.166667,0.0573 0.320312,0.0755 0.460937,0.0547 0.145834,-0.0208 0.255209,-0.0287 0.328125,-0.0234 0.07813,0 0.164063,0.0286 0.257813,0.0859 0.09375,0.0521 0.166666,0.11719 0.21875,0.19531 0.05208,0.0729 0.08854,0.15365 0.109375,0.24219 0.03646,0.15104 0.03906,0.34375 0.0078,0.57812 -0.03125,0.22917 -0.04427,0.41667 -0.03906,0.5625 0.01042,0.14063 0.04167,0.27604 0.09375,0.40625 0.05729,0.125 0.09375,0.22657 0.109375,0.30469 0.02083,0.0729 0.03646,0.14844 0.04687,0.22656 0.01563,0.0729 0.02604,0.15365 0.03125,0.24219 0.01042,0.0833 0.02604,0.17969 0.04687,0.28906 0.02604,0.10938 0.03906,0.19792 0.03906,0.26563 0.0052,0.0625 0.0052,0.11458 0,0.15625 -0.0052,0.0417 -0.01302,0.0807 -0.02344,0.11719 -0.0052,0.0312 -0.0026,0.0833 0.0078,0.15625 0.01563,0.0677 0.01563,0.14322 0,0.22656 -0.01042,0.0833 -0.02344,0.16406 -0.03906,0.24219 -0.05729,0.23958 -0.08073,0.40885 -0.07031,0.50781 0.02083,0.17708 0.02083,0.30469 0,0.38281 -0.02083,0.0729 -0.04167,0.13281 -0.0625,0.17969 -0.01563,0.0469 -0.03646,0.11198 -0.0625,0.19531 -0.02083,0.0833 -0.06771,0.15885 -0.140625,0.22656 -0.07292,0.0677 -0.143229,0.0885 -0.210937,0.0625 -0.0625,-0.026 -0.104167,-0.0625 -0.125,-0.10937 l -0.04687,-0.15625 c -0.01042,-0.0521 -0.02604,-0.099 -0.04687,-0.14063 -0.01563,-0.0417 -0.04687,-0.0651 -0.09375,-0.0703 -0.08333,-0.0104 -0.127604,-0.0573 -0.132813,-0.14062 -0.0052,-0.0885 -0.0052,-0.16407 0,-0.22657 0.01042,-0.0677 0.0078,-0.13541 -0.0078,-0.20312 -0.01563,-0.0677 -0.04167,-0.13281 -0.07813,-0.19531 -0.09375,-0.16146 -0.203125,-0.25 -0.328125,-0.26563 -0.1875,-0.026 -0.317708,0.0651 -0.390625,0.27344 -0.01563,0.0521 -0.02865,0.12239 -0.03906,0.21094 -0.0052,0.0833 -0.02604,0.15885 -0.0625,0.22656 -0.03125,0.0677 -0.06771,0.125 -0.109375,0.17187 -0.03646,0.0469 -0.07292,0.0911 -0.109375,0.13282 -0.03125,0.0365 -0.05208,0.0833 -0.0625,0.14062 -0.04167,0.22396 -0.130208,0.35156 -0.265625,0.38281 -0.05208,0.0156 -0.111979,0.0104 -0.179687,-0.0156 -0.0625,-0.0208 -0.106771,-0.0625 -0.132813,-0.125 -0.02604,-0.0677 -0.04427,-0.14323 -0.05469,-0.22656 -0.0052,-0.0885 -0.0052,-0.1823 0,-0.28125 0.0052,-0.099 0.0078,-0.19532 0.0078,-0.28907 0,-0.20833 -0.03385,-0.34114 -0.101562,-0.39843 -0.140625,-0.10417 -0.197917,-0.3698 -0.171875,-0.79688 0.02604,-0.24479 0.05469,-0.4401 0.08594,-0.58594 0.05208,-0.23958 0.07552,-0.4427 0.07031,-0.60937 0,-0.16667 0.0052,-0.29688 0.01563,-0.39063 0.01563,-0.0937 0.03125,-0.17187 0.04687,-0.23437 0.02083,-0.0625 0.04427,-0.12761 0.07031,-0.19531 0.02604,-0.0677 0.04948,-0.17969 0.07031,-0.33594 0.05208,-0.39063 0.09896,-0.63281 0.140625,-0.72656 0.05729,-0.13021 0.125,-0.26303 0.203125,-0.39844 0.08333,-0.14063 0.151041,-0.23438 0.203125,-0.28125 0.119792,-0.0885 0.291666,-0.0964 0.515625,-0.0234 z m 3.203125,0.0781 c 0.104167,0.0417 0.179687,0.0573 0.226562,0.0469 0.05208,-0.0104 0.09115,-0.0156 0.117188,-0.0156 0.02604,0 0.05729,0.013 0.09375,0.0391 0.03646,0.0208 0.07813,0.0286 0.125,0.0234 0.04687,-0.0104 0.09375,-0.0234 0.140625,-0.0391 0.135417,-0.0312 0.236979,-0.0365 0.304687,-0.0156 0.06771,0.0208 0.125,0.026 0.171875,0.0156 0.04687,-0.0156 0.08594,-0.0234 0.117188,-0.0234 0.03125,0 0.07031,0.013 0.117187,0.0391 0.04687,0.026 0.08594,0.0417 0.117188,0.0469 0.03646,0.005 0.06771,0.0104 0.09375,0.0156 0.04687,0.0104 0.08594,0.0573 0.117187,0.14062 0.02083,0.0521 0.03385,0.10157 0.03906,0.14844 l 0.01563,0.125 c 0.02083,0.0885 0.05729,0.15625 0.109375,0.20313 0.04167,0.0365 0.0625,0.0781 0.0625,0.125 0,0.0833 0.01823,0.13802 0.05469,0.16406 0.03646,0.0208 0.07031,0.0703 0.101563,0.14844 0.03125,0.0729 0.05469,0.16145 0.07031,0.26562 0.04167,0.26563 0.01563,0.50781 -0.07813,0.72656 -0.03125,0.375 -0.124999,0.60157 -0.28125,0.67969 -0.02604,0.0104 -0.07031,0.0312 -0.132812,0.0625 -0.145834,0.16146 -0.294271,0.29167 -0.445313,0.39063 0.130209,0.0208 0.242188,0.0547 0.335938,0.10156 0.09896,0.0417 0.148437,0.10937 0.148437,0.20312 0,0.0885 0.01042,0.15365 0.03125,0.19532 l 0.0625,0.125 c 0.05208,0.099 0.0625,0.21614 0.03125,0.35156 -0.02604,0.13021 -0.04427,0.25781 -0.05469,0.38281 -0.0052,0.11979 -0.01823,0.23698 -0.03906,0.35156 -0.05208,0.28125 -0.161458,0.44792 -0.328125,0.5 -0.135416,0.0417 -0.255208,0.0729 -0.359375,0.0937 -0.15625,0.21875 -0.291666,0.32032 -0.40625,0.30469 -0.04167,-0.005 -0.07552,-0.0339 -0.101562,-0.0859 -0.02604,-0.0521 -0.0599,-0.0807 -0.101563,-0.0859 -0.04167,-0.005 -0.08594,0 -0.132812,0.0156 l -0.15625,0.0547 c -0.09896,0.0312 -0.255208,0.0104 -0.46875,-0.0625 -0.07813,-0.0312 -0.135417,-0.10417 -0.171875,-0.21875 -0.03646,-0.11459 -0.07031,-0.19531 -0.101563,-0.24219 -0.02604,-0.0521 -0.05208,-0.0937 -0.07813,-0.125 -0.02604,-0.0365 -0.05208,-0.0651 -0.07813,-0.0859 -0.09896,-0.0885 -0.148437,-0.16406 -0.148437,-0.22656 -0.0052,-0.10417 0.0026,-0.23958 0.02344,-0.40625 0.02604,-0.17187 0.03906,-0.31771 0.03906,-0.4375 0.0052,-0.125 0,-0.24219 -0.01563,-0.35156 -0.02604,-0.23438 -0.09635,-0.38802 -0.210938,-0.46094 -0.05729,-0.0365 -0.09896,-0.0651 -0.125,-0.0859 -0.02083,-0.026 -0.03125,-0.0625 -0.03125,-0.10937 0,-0.0469 0.01042,-0.11459 0.03125,-0.20313 0.02083,-0.0885 0.03906,-0.18229 0.05469,-0.28125 0.01563,-0.099 0.03646,-0.16927 0.0625,-0.21093 0.02604,-0.0469 0.03906,-0.125 0.03906,-0.23438 0.0052,-0.11458 0.0026,-0.21875 -0.0078,-0.3125 -0.01042,-0.099 -0.02083,-0.17969 -0.03125,-0.24219 -0.01563,-0.15104 -0.01563,-0.27343 0,-0.36718 0.01563,-0.0937 0.01823,-0.17969 0.0078,-0.25782 -0.0052,-0.0833 -0.0052,-0.16146 0,-0.23437 0.01563,-0.19792 0.161458,-0.38542 0.4375,-0.5625 0.229167,-0.14584 0.424479,-0.17969 0.585938,-0.10156 z m -6.742188,1.13281 c -0.03646,0.0208 -0.0625,0.0417 -0.07813,0.0625 -0.01563,0.0156 -0.02864,0.0677 -0.03906,0.15625 -0.01563,0.18229 -0.01563,0.32552 0,0.42969 0.02083,0.10416 0.03385,0.17447 0.03906,0.21093 0.0052,0.0312 0.0078,0.0677 0.0078,0.10938 0.0052,0.0365 0.0078,0.0807 0.0078,0.13281 0.0052,0.0469 0.01042,0.125 0.01563,0.23438 0.01042,0.10416 0.01302,0.1927 0.0078,0.26562 -0.0052,0.0729 0.0026,0.14844 0.02344,0.22656 0.08333,-0.0104 0.158854,-0.0469 0.226563,-0.10937 0.06771,-0.0625 0.132812,-0.11719 0.195312,-0.16406 0.06771,-0.0521 0.122396,-0.11719 0.164063,-0.19532 0.04687,-0.0833 0.08333,-0.16666 0.109375,-0.25 0.04167,-0.15625 0.05469,-0.29948 0.03906,-0.42968 -0.01042,-0.13542 -0.02604,-0.22396 -0.04687,-0.26563 -0.01563,-0.0469 -0.06771,-0.0703 -0.15625,-0.0703 -0.08333,0 -0.16927,-0.0208 -0.257812,-0.0625 -0.08333,-0.0417 -0.130208,-0.0912 -0.140625,-0.14844 -0.01042,-0.125 -0.04948,-0.16927 -0.117188,-0.13281 z m 7.109375,0.24219 c -0.02604,0.0104 -0.04427,0.0286 -0.05469,0.0547 -0.0052,0.026 -0.0078,0.0573 -0.0078,0.0937 v 0.11719 c 0.0052,0.0417 0.0026,0.0859 -0.0078,0.13281 -0.0052,0.0469 -0.0078,0.0911 -0.0078,0.13282 0.0052,0.0417 0.01302,0.0859 0.02344,0.13281 0.02083,0.13021 0.03125,0.24739 0.03125,0.35156 0.0052,0.10417 0.0052,0.1875 0,0.25 v 0.16406 c 0.0052,0.0833 0.04427,0.13802 0.117187,0.16407 0.07292,0.0312 0.153646,-0.0339 0.242188,-0.19532 0.135417,-0.23437 0.213542,-0.47395 0.234375,-0.71875 0.01042,-0.0885 -0.0052,-0.16927 -0.04687,-0.24218 -0.04167,-0.0781 -0.08073,-0.1198 -0.117188,-0.125 -0.03646,-0.0104 -0.08073,-0.0182 -0.132812,-0.0234 -0.05208,-0.005 -0.09115,-0.0234 -0.117188,-0.0547 -0.02083,-0.0365 -0.03906,-0.0729 -0.05469,-0.10937 -0.01042,-0.0417 -0.02344,-0.0755 -0.03906,-0.10157 -0.01042,-0.026 -0.03125,-0.0339 -0.0625,-0.0234 z m -3.445312,0.27343 c -0.05208,0 -0.08594,0.0286 -0.101563,0.0859 -0.01042,0.0521 -0.01823,0.1224 -0.02344,0.21094 -0.0052,0.27083 -0.03646,0.47656 -0.09375,0.61719 -0.104167,0.28125 -0.117188,0.5052 -0.03906,0.67187 0.05208,0.0937 0.119792,0.14323 0.203125,0.14844 0.151042,0.0156 0.239584,0.005 0.265625,-0.0312 0.03125,-0.0417 0.0651,-0.0833 0.101563,-0.125 0.04167,-0.0469 0.05729,-0.11459 0.04687,-0.20313 -0.01042,-0.0937 -0.01823,-0.17448 -0.02344,-0.24218 -0.0052,-0.0729 -0.03125,-0.15365 -0.07813,-0.24219 -0.04167,-0.0885 -0.07031,-0.18229 -0.08594,-0.28125 -0.01563,-0.10417 -0.02604,-0.20313 -0.03125,-0.29688 -0.02083,-0.20833 -0.06771,-0.3125 -0.140625,-0.3125 z m 14.359375,0.0781 c -0.03646,0.0573 -0.05469,0.15104 -0.05469,0.28125 -0.01042,0.0885 -0.03125,0.16927 -0.0625,0.24219 -0.02604,0.0729 -0.04427,0.15364 -0.05469,0.24218 -0.01563,0.10417 -0.04427,0.23177 -0.08594,0.38282 -0.03646,0.15104 -0.03125,0.26302 0.01563,0.33593 0.05208,0.0729 0.114584,0.099 0.1875,0.0781 0.07292,-0.0208 0.127604,-0.0312 0.164063,-0.0312 0.03646,-0.005 0.06771,-0.0104 0.09375,-0.0156 0.0625,-0.005 0.109375,-0.0286 0.140625,-0.0703 0.03646,-0.0469 0.05469,-0.0859 0.05469,-0.11719 0.0052,-0.0365 0.0052,-0.0729 0,-0.10937 -0.01563,-0.10417 -0.01823,-0.20573 -0.0078,-0.30469 0.01042,-0.099 0.0052,-0.22135 -0.01563,-0.36719 -0.01563,-0.14583 -0.02344,-0.2526 -0.02344,-0.32031 0,-0.0729 -0.0052,-0.13542 -0.01563,-0.1875 -0.01563,-0.0833 -0.0599,-0.0937 -0.132812,-0.0312 -0.08333,-0.0833 -0.151042,-0.0859 -0.203125,-0.008 z m 13.742187,0.0234 c -0.114583,0 -0.218749,0.1276 -0.3125,0.38281 -0.08333,0.22917 -0.119791,0.38021 -0.109375,0.45312 0.01563,0.0729 0.04167,0.13282 0.07813,0.17969 0.04167,0.0417 0.07031,0.10938 0.08594,0.20313 0.02083,0.0937 0.02865,0.19791 0.02344,0.3125 -0.0052,0.10937 -0.0078,0.21614 -0.0078,0.32031 0,0.099 0.0052,0.1901 0.01563,0.27344 0.01042,0.0781 0.02604,0.15104 0.04687,0.21875 0.05729,0.16145 0.138021,0.24218 0.242187,0.24218 0.161459,0 0.273438,-0.3125 0.335938,-0.9375 0.02083,-0.17187 0.03125,-0.39062 0.03125,-0.65625 0,-0.27083 -0.04167,-0.5026 -0.125,-0.69531 -0.08333,-0.19792 -0.184896,-0.29687 -0.304688,-0.29687 z m -18.601562,0.17187 c -0.06771,0.0521 -0.101563,0.16667 -0.101563,0.34375 l 0.02344,0.44531 c 0.01042,0.125 0.0026,0.24219 -0.02344,0.35157 -0.02604,0.10416 -0.03125,0.21614 -0.01563,0.33593 0.02083,0.11979 0.02604,0.22136 0.01563,0.30469 -0.01042,0.0833 -0.0052,0.15104 0.01563,0.20313 0.02083,0.0521 0.02604,0.10677 0.01563,0.16406 l -0.01563,0.15625 c -0.01042,0.13541 0.01563,0.20833 0.07813,0.21875 0.04167,0.005 0.08073,-0.013 0.117188,-0.0547 0.03646,-0.0469 0.06771,-0.10417 0.09375,-0.17187 0.04687,-0.10938 0.08594,-0.25261 0.117187,-0.42969 0.01042,-0.0729 0.03646,-0.15104 0.07813,-0.23438 0.07292,-0.15625 0.109375,-0.26823 0.109375,-0.33593 0,-0.0729 0.0026,-0.11719 0.0078,-0.13282 l 0.01563,-0.0625 c 0.01042,-0.0208 0.02083,-0.0443 0.03125,-0.0703 0.01042,-0.026 0.02083,-0.0729 0.03125,-0.14062 0.01042,-0.0729 0,-0.16146 -0.03125,-0.26563 -0.02604,-0.10937 -0.08073,-0.19792 -0.164063,-0.26562 -0.07813,-0.0677 -0.132812,-0.125 -0.164062,-0.17188 -0.03125,-0.0469 -0.0599,-0.0885 -0.08594,-0.125 -0.05208,-0.0729 -0.101562,-0.0937 -0.148437,-0.0625 z m 12.1875,0 c -0.06771,0.0521 -0.101563,0.16667 -0.101563,0.34375 l 0.02344,0.44531 c 0.01042,0.125 0.0026,0.24219 -0.02344,0.35157 -0.02604,0.10416 -0.03125,0.21614 -0.01563,0.33593 0.02083,0.11979 0.02604,0.22136 0.01563,0.30469 -0.01042,0.0833 -0.0052,0.15104 0.01563,0.20313 0.02083,0.0521 0.02604,0.10677 0.01563,0.16406 l -0.01563,0.15625 c -0.01042,0.13541 0.01563,0.20833 0.07813,0.21875 0.04167,0.005 0.08073,-0.013 0.117188,-0.0547 0.03646,-0.0469 0.06771,-0.10417 0.09375,-0.17187 0.04687,-0.10938 0.08594,-0.25261 0.117187,-0.42969 0.01042,-0.0729 0.03646,-0.15104 0.07813,-0.23438 0.07292,-0.15625 0.109375,-0.26823 0.109375,-0.33593 0,-0.0729 0.0026,-0.11719 0.0078,-0.13282 l 0.01563,-0.0625 c 0.01042,-0.0208 0.02083,-0.0443 0.03125,-0.0703 0.01042,-0.026 0.02083,-0.0729 0.03125,-0.14062 0.01042,-0.0729 0,-0.16146 -0.03125,-0.26563 -0.02604,-0.10937 -0.08073,-0.19792 -0.164063,-0.26562 -0.07813,-0.0677 -0.132812,-0.125 -0.164062,-0.17188 -0.03125,-0.0469 -0.0599,-0.0885 -0.08594,-0.125 -0.05208,-0.0729 -0.101562,-0.0937 -0.148437,-0.0625 z m -18.1875,1.61719 c -0.02083,0.0156 -0.03125,0.0391 -0.03125,0.0703 0.0052,0.026 0.0026,0.0573 -0.0078,0.0937 -0.01042,0.0365 -0.02344,0.0755 -0.03906,0.11719 -0.01042,0.0365 -0.01042,0.0859 0,0.14844 0.01563,0.0573 0.01823,0.11197 0.0078,0.16406 -0.0052,0.0521 -0.01563,0.12239 -0.03125,0.21094 l -0.02344,0.1875 c 0,0.0417 0.02344,0.0963 0.07031,0.16406 0.04687,0.0625 0.09375,0.0755 0.140625,0.0391 0.05208,-0.0365 0.08333,-0.0755 0.09375,-0.11719 0.01563,-0.0417 0.04167,-0.0781 0.07813,-0.10937 0.03646,-0.0365 0.0599,-0.10677 0.07031,-0.21094 0.01563,-0.17708 -0.0026,-0.30208 -0.05469,-0.375 -0.04687,-0.0781 -0.07813,-0.17187 -0.09375,-0.28125 -0.05729,-0.0365 -0.09635,-0.0651 -0.117187,-0.0859 -0.02083,-0.026 -0.04167,-0.0312 -0.0625,-0.0156 z m 8.867187,1.53125 c 0.09375,0.0104 0.169271,0.0651 0.226563,0.16406 0.04167,0.0833 0.05469,0.15885 0.03906,0.22656 -0.01042,0.0625 -0.03385,0.11719 -0.07031,0.16407 -0.03646,0.0417 -0.07813,0.0807 -0.125,0.11718 -0.09375,0.0677 -0.177083,0.10677 -0.25,0.11719 -0.07292,0.0104 -0.125,0.0312 -0.15625,0.0625 -0.02604,0.0365 -0.07292,0.0469 -0.140625,0.0312 -0.0625,-0.0156 -0.104167,-0.0495 -0.125,-0.10156 -0.01563,-0.0469 -0.04427,-0.0781 -0.08594,-0.0937 -0.04167,-0.0156 -0.07813,-0.0365 -0.109375,-0.0625 -0.03125,-0.026 -0.05729,-0.0573 -0.07813,-0.0937 -0.01563,-0.0365 -0.02083,-0.0755 -0.01563,-0.11719 0.01042,-0.0417 0.05208,-0.0964 0.125,-0.16406 0.07813,-0.0677 0.174479,-0.13281 0.289063,-0.19531 0.119792,-0.0625 0.278645,-0.0807 0.476562,-0.0547 z m -4.433593,6.3457 h 6.046875 c 4.397102,0 7.9375,3.53845 7.9375,7.93555 0,4.3971 -3.540398,7.9375 -7.9375,7.9375 h -6.046875 c -4.397103,0 -7.935547,-3.5404 -7.935547,-7.9375 0,-4.3971 3.538444,-7.93555 7.935547,-7.93555 z"
       transform="scale(0.26458333)" /><g
       aria-label="CV"
       transform="rotate(-17.927138)"
       id="text5476-0-5-4"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       aria-label="DIV"
       transform="rotate(-15)"
       id="text5476-0-5-5-4"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       aria-label="TAP "
       transform="rotate(-15)"
       id="text5476-0-5-5-1-8"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       aria-label="SWING"
       transform="rotate(-15)"
       id="text12979-7-0"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       aria-label="PAUSE"
       transform="rotate(-90)"
       id="text12979-7-8-9"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       aria-label="Hold to Reset"
       transform="rotate(-90)"
       id="text12979-7-8-3-7"
       style="font-size:2.73547px;line-height:1.25;display:inline;fill:#ffffff;stroke-width:0.170967" /><g
       transform="rotate(-95.615582)"
       id="text11015-0"
       style="font-size:6.83867px;line-height:1.25;stroke-width:0.170967" /><path
       id="rect7805"
       style="fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
       d="m 53.589844,41.953125 -11.296875,0.96875 1.765625,20.580078 11.296875,-0.96875 z m -6.646485,1.988281 c 0.09294,-0.002 0.166215,0.0094 0.220703,0.03516 0.08028,0.0419 0.13515,0.120474 0.166016,0.236329 0.03034,0.108926 0.03569,0.1999 0.01367,0.271484 -0.02925,0.06524 -0.06001,0.127241 -0.08984,0.185547 -0.06425,0.144907 -0.06496,0.258534 -0.002,0.34375 0.06249,0.07826 0.151962,0.131154 0.265625,0.15625 0.113688,0.0252 0.242792,0.03484 0.388672,0.0293 0.21629,0.0024 0.495693,-0.02174 0.839844,-0.07227 0.123943,-0.01764 0.22601,-0.02589 0.302734,-0.02539 0.06919,-0.006 0.13019,-0.01109 0.185547,-0.01562 0.131477,-0.01134 0.257944,-0.04355 0.378906,-0.0957 0.12097,-0.05221 0.213129,-0.0806 0.275391,-0.08594 0.06226,-0.0053 0.11489,4.44e-4 0.158203,0.01758 0.03578,0.01084 0.06894,0.0322 0.09961,0.06445 0.02369,0.03281 0.04999,0.06259 0.08008,0.08789 0.02318,0.0259 0.04949,0.05371 0.08008,0.08594 0.02318,0.02588 0.05144,0.05566 0.08203,0.08789 0.33606,-0.0637 0.604206,-0.09342 0.80664,-0.08984 0.195528,0.0043 0.362993,0.0032 0.501954,-0.002 0.138985,-0.0048 0.250595,0.02061 0.332031,0.07617 0.104012,0.07471 0.187134,0.234938 0.25,0.480469 0.0194,0.144705 -0.04798,0.258949 -0.201172,0.341797 -0.146268,0.08224 -0.33072,0.12853 -0.552734,0.140624 -0.222589,0.0053 -0.391973,0.02385 -0.507813,0.05469 -0.122759,0.03152 -0.224637,0.06773 -0.304687,0.109375 -0.08066,0.0348 -0.151045,0.06853 -0.210938,0.101563 -0.06682,0.03364 -0.157607,0.06684 -0.273437,0.09766 -0.11583,0.03094 -0.244168,0.02697 -0.386719,-0.0098 -0.1024,0.106381 -0.214363,0.183237 -0.335938,0.228516 -0.121574,0.04528 -0.28406,0.05562 -0.488281,0.03125 -0.211729,-0.03061 -0.403073,-0.04535 -0.570312,-0.04492 -0.167862,-0.0066 -0.319273,-0.0013 -0.457032,0.01758 -0.317092,0.04112 -0.494102,0.129965 -0.53125,0.265625 -0.0194,0.09922 0.01339,0.203335 0.09961,0.314453 0.08562,0.104189 0.14189,0.187575 0.167968,0.248047 0.02618,0.06047 0.01767,0.123009 -0.02539,0.189453 -0.04367,0.05951 -0.100731,0.09369 -0.169922,0.09961 -0.06979,-0.0011 -0.14282,-0.0094 -0.220703,-0.02344 -0.08481,-0.01361 -0.166837,-0.02394 -0.244141,-0.03125 -0.07791,-0.01436 -0.15,-0.0045 -0.216797,0.0293 -0.06682,0.03361 -0.107815,0.07195 -0.125,0.115234 -0.01739,0.04331 -0.05042,0.08432 -0.0957,0.123047 -0.102979,0.09945 -0.293891,0.140811 -0.574218,0.123047 -0.287245,-0.01713 -0.521451,-0.02987 -0.703126,-0.03516 -0.181694,-0.0053 -0.314834,-0.0061 -0.398437,-0.0059 -0.09114,-0.006 -0.171977,-0.02401 -0.244141,-0.05273 -0.07216,-0.02865 -0.139893,-0.07617 -0.201172,-0.140625 -0.139388,-0.162293 -0.20224,-0.382387 -0.191406,-0.662109 0.06372,-1.287942 0.06051,-2.017323 -0.0098,-2.185547 -0.02678,-0.0674 -0.05465,-0.126119 -0.08008,-0.179688 -0.234708,-0.460787 0.02248,-0.766313 0.769532,-0.914062 0.308384,-0.0613 0.570832,-0.09026 0.787109,-0.08789 l 0.513672,0.01758 c 0.118803,0.0038 0.270791,-0.0064 0.457031,-0.0293 0.06961,-0.01119 0.133688,-0.01638 0.189453,-0.01758 z m 4.9375,3.832032 c 0.236448,-0.0063 0.377965,0.05514 0.423829,0.183593 v 0.002 c 0.07967,0.035 0.139145,0.08417 0.179687,0.150391 0.04747,0.06561 0.04745,0.135032 -0.002,0.208984 -0.04248,0.07335 -0.05868,0.128119 -0.04883,0.16211 0.0093,0.02706 0.01802,0.05492 0.02734,0.08203 0.01235,0.06166 -0.02752,0.126664 -0.119141,0.197266 -0.09154,0.07058 -0.164023,0.11138 -0.21875,0.123046 -0.06168,0.01235 -0.121797,0.01789 -0.177735,0.01563 -0.126916,-0.01688 -0.235261,0.01244 -0.326171,0.08984 -0.09154,0.07058 -0.160972,0.122448 -0.207032,0.154297 -0.04664,0.02495 -0.113172,0.04107 -0.203125,0.04883 -0.09686,0.0083 -0.156203,0.02149 -0.175781,0.03711 -0.02709,0.0093 -0.04729,0.01733 -0.06055,0.02539 -0.05929,0.03994 -0.155052,0.06202 -0.287109,0.06641 -0.132636,-0.0025 -0.221329,0.02166 -0.265625,0.07422 -0.0512,0.05317 -0.08689,0.123542 -0.107422,0.208985 -0.02117,0.07849 -0.0058,0.139323 0.04687,0.183593 0.04508,0.03795 0.102129,0.07517 0.167969,0.111329 0.06523,0.02925 0.124544,0.06989 0.177734,0.121093 0.04626,0.05178 0.06178,0.123102 0.04883,0.214844 -0.01361,0.08481 0.01478,0.176972 0.08594,0.275391 0.07116,0.09844 0.152399,0.152988 0.24414,0.166015 0.08481,0.01361 0.173304,0.0308 0.265625,0.05078 0.09232,0.01991 0.176413,0.02312 0.251953,0.0098 0.07494,-0.02041 0.151237,-0.02684 0.228516,-0.01953 0.06979,0.0011 0.141332,0.01357 0.212891,0.03516 0.177713,0.04052 0.276516,0.09696 0.296875,0.171875 0.01235,0.06168 0.01859,0.12747 0.01758,0.197266 0.144907,0.06425 0.234898,0.146654 0.271484,0.248047 0.0866,0.278334 0.05566,0.45307 -0.0918,0.521484 -0.08698,0.04231 -0.20295,0.0724 -0.347656,0.0918 -0.289413,0.03875 -0.482403,0.08718 -0.582031,0.144531 -0.09963,0.05732 -0.22402,0.08248 -0.371094,0.07422 -0.147679,-0.01512 -0.292792,-0.01329 -0.4375,0.0059 -0.144705,0.0194 -0.255332,0.02785 -0.332031,0.02734 -0.07672,-4.96e-4 -0.148097,-5.17e-4 -0.210938,-0.002 -0.06345,-0.0086 -0.123145,-0.01827 -0.179687,-0.02734 -0.06347,-0.0086 -0.13289,-0.0086 -0.208984,-0.002 -0.08363,9.6e-5 -0.177654,-0.0059 -0.283204,-0.01758 -0.105574,-0.01184 -0.215646,-0.02382 -0.328125,-0.03516 -0.281511,-0.0316 -0.489761,-0.03361 -0.626953,-0.0078 -0.137197,0.02568 -0.255613,0.02437 -0.355468,-0.002 -0.100435,-0.03321 -0.191233,-0.07138 -0.271485,-0.113281 -0.211351,-0.107314 -0.379973,-0.152378 -0.503906,-0.134766 -0.130847,0.01839 -0.230192,0.03425 -0.298828,0.04687 -0.07612,0.0066 -0.151817,0.01027 -0.228516,0.0098 -0.376595,-0.0025 -0.975831,-0.128903 -1.798828,-0.378907 -0.07791,-0.01436 -0.142361,-0.07465 -0.193359,-0.18164 -0.05102,-0.107137 -0.06406,-0.218368 -0.03906,-0.332031 0.01764,-0.119988 0.02167,-0.214013 0.01563,-0.283203 -0.01361,-0.07551 -0.04522,-0.135417 -0.09766,-0.179688 -0.06009,-0.0506 -0.116731,-0.101144 -0.169922,-0.152344 -0.05377,-0.0581 -0.09799,-0.128304 -0.132812,-0.208984 -0.04173,-0.08005 -0.06728,-0.171605 -0.07617,-0.275391 -0.0088,-0.103786 0.01237,-0.216883 0.06445,-0.339843 0.08716,-0.202634 0.173201,-0.34016 0.257812,-0.410157 0.08461,-0.06997 0.153463,-0.117053 0.207031,-0.142578 0.05357,-0.02558 0.126051,-0.06638 0.21875,-0.123047 0.0927,-0.05674 0.179161,-0.08436 0.25586,-0.08398 0.07612,-0.0066 0.164208,-0.02789 0.265625,-0.06445 0.101417,-0.03656 0.222532,-0.04715 0.363281,-0.03125 0.14075,0.01587 0.278053,0.0044 0.414063,-0.03516 0.129083,-0.03895 0.219124,-0.06225 0.267578,-0.06641 0.04843,-0.004 0.09189,-0.01065 0.132812,-0.02148 0.117014,-0.01713 0.220241,-0.0505 0.306641,-0.09961 0.0933,-0.04984 0.212301,-0.07071 0.359375,-0.0625 0.139565,0.0019 0.257213,-0.0045 0.353515,-0.01953 0.08877,-0.02142 0.17997,-0.06794 0.271485,-0.138672 0.176705,-0.133644 0.380016,-0.192726 0.611328,-0.177734 0.06287,0.0017 0.131516,-0.004 0.207031,-0.01758 0.06801,-0.01965 0.134979,-0.03157 0.197266,-0.03711 0.05536,-0.0048 0.127613,-0.0042 0.21875,0.002 0.133266,0.0096 0.292157,-0.0088 0.476562,-0.05273 0.342385,-0.07121 0.571827,-0.11099 0.689454,-0.121094 0.117618,-0.01008 0.218337,-0.023 0.300781,-0.03711 0.07552,-0.01361 0.158673,-0.02655 0.248047,-0.04102 0.233474,-0.04102 0.470905,-0.06255 0.714843,-0.0625 z m -3.146484,2.074218 c -0.02421,0.0021 -0.04835,0.0062 -0.07227,0.01172 -0.136592,0.03271 -0.27165,0.04744 -0.404297,0.04492 -0.132661,-0.0025 -0.29498,0.01828 -0.486328,0.0625 -0.191949,0.03747 -0.331932,0.06065 -0.421875,0.06836 -0.09686,0.0083 -0.180015,0.02322 -0.248047,0.04297 -0.108925,0.03034 -0.116678,0.09004 -0.02539,0.179687 -0.101216,0.120215 -0.09781,0.209236 0.01172,0.269532 0.08028,0.0419 0.207893,0.05586 0.380859,0.04102 0.118803,0.0038 0.22769,0.02348 0.328125,0.05664 0.09985,0.02628 0.209322,0.04119 0.328125,0.04492 0.14017,0.0091 0.312183,0.03237 0.517578,0.07031 0.204825,0.03122 0.353805,0.01 0.445313,-0.06055 0.09091,-0.07751 0.118012,-0.163325 0.08203,-0.257813 -0.03601,-0.09449 -0.05639,-0.164462 -0.06055,-0.212891 -0.01109,-0.04782 -0.02142,-0.08903 -0.03125,-0.123046 -0.01411,-0.08242 -0.05054,-0.142901 -0.109375,-0.179688 -0.06642,-0.04309 -0.120585,-0.06217 -0.162109,-0.05859 -0.02452,-0.0014 -0.04805,-0.0021 -0.07227,0 z m -3.289063,3.00586 c 0.09332,0.0023 0.199657,0.02125 0.320313,0.05664 0.05715,0.01613 0.106938,0.02306 0.148437,0.01953 0.04153,-0.0035 0.0835,-0.0082 0.125,-0.01172 0.124549,-0.01058 0.219153,-0.0076 0.283204,0.0078 0.06405,0.01537 0.116678,0.02111 0.158203,0.01758 0.04152,-0.0035 0.0892,-0.0069 0.144531,-0.01172 0.109531,-0.02343 0.218229,-0.01612 0.326172,0.02344 0.06463,0.02242 0.118632,0.03283 0.160156,0.0293 l 0.103516,-0.0098 c 0.08995,-0.0078 0.180146,0.03319 0.271484,0.123047 0.179729,0.144882 0.274309,0.269261 0.283203,0.373047 0.0018,0.02091 -0.0035,0.04266 -0.01563,0.06445 -0.01209,0.02192 -0.02287,0.05492 -0.0332,0.09766 -0.0411,0.170785 -0.06079,0.349088 -0.05859,0.53711 0.0016,0.18109 0.01697,0.313302 0.04492,0.394531 0.05934,0.203994 0.170684,0.322625 0.333985,0.357422 0.170809,0.0411 0.296086,0.01651 0.378906,-0.07422 0.03855,-0.03815 0.06394,-0.07838 0.07422,-0.121094 0.01033,-0.04271 0.0098,-0.08122 0,-0.115234 -0.01739,-0.04034 -0.02029,-0.0928 -0.01172,-0.15625 0.0078,-0.07037 0.01834,-0.139958 0.0332,-0.210937 0.0255,-0.190363 0.02134,-0.317035 -0.01172,-0.376953 -0.04054,-0.06622 -0.0579,-0.109493 -0.05273,-0.13086 0.0045,-0.0283 0.01254,-0.04944 0.02539,-0.06445 0.04427,-0.05259 0.06608,-0.0991 0.0625,-0.140625 -0.01663,-0.11011 0.02457,-0.191769 0.125,-0.242188 0.0933,-0.04984 0.215188,-0.05255 0.365235,-0.0098 0.02091,-0.0018 0.07354,0.0039 0.158203,0.01758 0.17023,0.03417 0.285395,0.04831 0.347656,0.04297 0.06166,-0.01235 0.129588,-0.0082 0.201172,0.01367 0.06463,0.02242 0.12317,0.05737 0.175781,0.101562 0.113865,0.108699 0.15656,0.233041 0.126953,0.375 -0.02242,0.06463 -0.05737,0.12317 -0.101562,0.175781 -0.0735,0.361774 -0.02813,0.599457 0.134766,0.710938 0.08897,0.06206 0.165649,0.09216 0.228515,0.09375 0.06287,0.0017 0.172888,-0.0038 0.332031,-0.01758 l 0.384766,-0.0332 c 0.05458,-0.0953 0.11884,-0.184328 0.195313,-0.267578 0.06959,-0.08265 0.104157,-0.179747 0.101562,-0.291016 -0.0025,-0.11132 -0.01891,-0.207828 -0.04687,-0.289063 -0.0354,-0.08758 -0.0693,-0.166508 -0.103516,-0.240234 -0.08345,-0.160126 -0.106797,-0.312557 -0.07031,-0.455078 0.02966,-0.141934 0.08118,-0.232316 0.154297,-0.273438 0.07315,-0.04112 0.172491,-0.05698 0.298828,-0.04687 0.126337,0.01008 0.220942,0.01115 0.283203,0.0059 0.05475,-0.01184 0.105869,-0.01941 0.154297,-0.02344 0.117619,-0.01008 0.23509,0.02504 0.353516,0.105469 0.153625,0.08438 0.251268,0.167971 0.292968,0.248047 0.0348,0.08066 0.0514,0.185698 0.04883,0.318359 -0.0096,0.133241 0.007,0.240237 0.04883,0.320313 0.0348,0.08066 0.07844,0.153717 0.132812,0.21875 0.05377,0.0581 0.105478,0.117072 0.152344,0.175781 0.07809,0.09784 0.08722,0.214139 0.0293,0.351563 -0.02343,0.0508 -0.0467,0.101546 -0.07031,0.152343 -0.05158,0.12989 -0.06532,0.285548 -0.04297,0.464844 0.02925,0.178721 -0.0067,0.342367 -0.105469,0.490234 -0.105751,0.14846 -0.240788,0.232716 -0.40625,0.253907 -0.166073,0.01436 -0.284489,0.01501 -0.355469,0 -0.07791,-0.01436 -0.138378,-0.03177 -0.181641,-0.04883 -0.09232,-0.01991 -0.161412,0.0011 -0.205078,0.06055 -0.11719,0.177336 -0.28524,0.250738 -0.503906,0.220704 -0.112504,-0.01134 -0.199647,-0.02567 -0.263672,-0.04102 -0.06408,-0.01537 -0.131212,-0.01184 -0.199219,0.0078 -0.07494,0.02041 -0.13998,0.03232 -0.195312,0.03711 -0.06287,-0.0017 -0.121029,0.0039 -0.175781,0.01563 -0.109531,0.02318 -0.167126,0.07577 -0.173829,0.160156 -0.0048,0.10497 -0.109728,0.183919 -0.314453,0.236328 -0.197089,0.05873 -0.398882,0.06365 -0.605468,0.01172 -0.207194,-0.05888 -0.365104,-0.07802 -0.47461,-0.05469 -0.116434,0.02394 -0.224035,0.04327 -0.320312,0.05859 l -0.404297,0.02539 c -0.200668,0.01713 -0.334186,0.04532 -0.400391,0.08594 -0.06622,0.04054 -0.166166,0.05913 -0.298828,0.05664 -0.139565,-0.0019 -0.243145,0.01023 -0.310547,0.03711 -0.07433,0.02736 -0.156141,0.04502 -0.246094,0.05273 l -0.59375,0.0293 c -0.09686,0.0083 -0.193969,0.02749 -0.289062,0.05664 -0.0957,0.02217 -0.197513,0.0065 -0.306641,-0.04687 -0.116661,-0.05969 -0.222119,-0.151044 -0.316406,-0.275391 -0.09431,-0.124346 -0.147873,-0.269497 -0.162109,-0.435546 -0.01436,-0.166048 0.0017,-0.30072 0.04883,-0.402344 0.04704,-0.101594 0.08386,-0.195228 0.111328,-0.28125 0.02746,-0.086 0.04673,-0.18156 0.05859,-0.28711 0.01562,-0.224377 -0.03372,-0.435508 -0.148438,-0.634765 -0.130293,-0.218835 -0.138045,-0.403677 -0.02539,-0.552735 -0.0055,-0.145914 -0.03378,-0.296977 -0.08203,-0.453124 -0.07791,-0.258172 -0.09665,-0.438051 -0.05664,-0.539063 0.07296,-0.154814 0.212675,-0.229751 0.417968,-0.224609 z m 2.919922,4.466796 c 0.06677,-0.0025 0.137189,0.0088 0.208985,0.0332 0.114872,0.03893 0.220318,0.06089 0.318359,0.06641 0.09804,0.0055 0.18386,0.03265 0.257813,0.08203 0.067,0.05002 0.108937,0.09924 0.126953,0.146485 0.01058,0.04092 0.03615,0.08061 0.07422,0.11914 0.03064,0.03223 0.06325,0.05643 0.09961,0.07422 0.03578,0.01084 0.0766,0.03339 0.121094,0.06445 0.110311,0.0672 0.206051,0.166368 0.287109,0.298828 0.124926,-0.08741 0.219909,-0.186563 0.287109,-0.296875 0.06027,-0.109707 0.132766,-0.202371 0.216797,-0.279297 0.0765,-0.08325 0.152421,-0.128239 0.228516,-0.134765 0.07552,-0.01361 0.150883,-0.03822 0.224609,-0.07227 0.07375,-0.03419 0.134586,-0.04955 0.183594,-0.04687 0.04213,0.0035 0.09192,0.01046 0.148438,0.01953 0.04903,0.0028 0.106451,0.0071 0.169921,0.01563 0.05654,0.0091 0.121172,0.01046 0.197266,0.0039 0.06859,-0.01285 0.132307,-0.01001 0.189453,0.0059 0.04961,0.0096 0.103779,0.02866 0.16211,0.05859 0.0508,0.02343 0.107963,0.05358 0.173828,0.08984 0.06581,0.03618 0.145355,0.06689 0.238281,0.09375 0.114268,0.03203 0.222045,0.09252 0.320312,0.181641 0.09073,0.08282 0.16449,0.150551 0.22461,0.201172 0.05259,0.04427 0.126593,0.08621 0.220703,0.126953 0.173783,0.07569 0.29143,0.190717 0.353516,0.345703 0.054,0.141732 0.02518,0.255599 -0.08594,0.341797 -0.07257,0.04805 -0.07944,0.12589 -0.02148,0.232422 0.05732,0.09963 0.103685,0.180341 0.136718,0.240234 0.03994,0.05929 0.05683,0.133473 0.05078,0.22461 9.3e-5,0.08363 -0.0066,0.171955 -0.01953,0.263671 -0.0068,0.08421 0.0075,0.170229 0.04297,0.257813 0.04231,0.08698 0.05994,0.16879 0.05273,0.246094 -0.0073,0.0773 -0.02543,0.147656 -0.05469,0.21289 -0.05732,0.144328 -0.146608,0.242714 -0.267578,0.294922 -0.12097,0.05221 -0.24666,0.09207 -0.376953,0.117188 -0.137197,0.02567 -0.26082,0.05653 -0.369141,0.09375 -0.11525,0.03777 -0.19764,0.05834 -0.246094,0.0625 l -0.251953,-0.0098 -0.376953,0.0957 c -0.06919,0.006 -0.114419,0.0234 -0.132812,0.05273 -0.02532,0.03003 -0.06329,0.07748 -0.113282,0.144531 -0.05002,0.06702 -0.131637,0.112782 -0.248046,0.136719 -0.123364,0.02444 -0.266069,0.03995 -0.425782,0.04687 -0.201852,0.0035 -0.544602,-0.004 -1.027344,-0.02539 -0.590881,0.0995 -0.970793,0.162707 -1.142578,0.191406 -0.906779,0.154482 -1.472683,0.18321 -1.697265,0.08398 -0.05773,-0.02293 -0.102778,-0.04697 -0.132813,-0.07227 -0.06009,-0.0506 -0.151422,-0.06839 -0.27539,-0.05078 -0.253627,0.04964 -0.442057,-0.07017 -0.564454,-0.359375 -0.0354,-0.08758 -0.07637,-0.170555 -0.125,-0.25 -0.04866,-0.07947 -0.09441,-0.163046 -0.136718,-0.25 -0.0864,-0.194722 -0.09743,-0.364854 -0.0332,-0.509766 0.05672,-0.151231 0.07181,-0.30209 0.04492,-0.453125 -0.03389,-0.150425 -0.06917,-0.303568 -0.103515,-0.460937 -0.04132,-0.156775 -0.07044,-0.308432 -0.08984,-0.453125 -0.02016,-0.15161 0.0029,-0.282247 0.07031,-0.392579 0.06662,-0.11724 0.138926,-0.237952 0.21875,-0.363281 0.07927,-0.132258 0.171037,-0.251066 0.273437,-0.357422 0.230677,-0.235867 0.464912,-0.348397 0.703125,-0.333984 0.253422,-0.133266 0.501598,-0.178797 0.742188,-0.136719 0.06408,0.01537 0.126422,0.01329 0.1875,-0.0059 0.122179,-0.03835 0.23278,-0.0468 0.332031,-0.02734 0.09922,0.0194 0.202969,0.01757 0.3125,-0.0059 0.03825,-0.01115 0.07713,-0.01805 0.117187,-0.01953 z m 2.902344,1.75 c -0.01929,-1.96e-4 -0.03863,0.0011 -0.05859,0.002 -0.167256,4.43e-4 -0.298702,0.02151 -0.392578,0.06445 -0.175143,0.0708 -0.276429,0.173589 -0.30664,0.308593 -0.03477,0.163301 0.05101,0.242263 0.259765,0.238282 0.146495,0.0013 0.297179,0.0059 0.451172,0.01367 0.154003,0.0078 0.268815,0.0028 0.34375,-0.01758 0.07433,-0.02736 0.155977,-0.05559 0.244141,-0.08398 0.03102,-0.0445 0.05789,-0.08895 0.08203,-0.132812 0.02419,-0.04389 0.04958,-0.08413 0.07422,-0.121094 -0.08658,-0.03439 -0.152768,-0.06661 -0.197266,-0.09766 -0.04508,-0.03795 -0.09371,-0.07022 -0.144531,-0.09375 -0.102057,-0.05223 -0.220412,-0.0787 -0.355469,-0.08008 z m -3.054687,0.13086 c -0.04839,-4.19e-4 -0.09372,0.0067 -0.136719,0.02344 -0.12218,0.03835 -0.190867,0.09787 -0.205078,0.175782 -0.02117,0.07849 -0.05457,0.150378 -0.09766,0.216797 -0.0506,0.06009 -0.08912,0.129891 -0.117188,0.208984 -0.02865,0.07216 0.0049,0.132065 0.09961,0.179687 0.08718,0.0413 0.184459,0.03254 0.291016,-0.02539 0.105953,-0.06486 0.25281,-0.09458 0.441406,-0.08984 0.187994,-0.0022 0.370884,-0.01193 0.550781,-0.02734 0.366708,-0.03147 0.544484,-0.112663 0.533204,-0.24414 -0.006,-0.06919 -0.05866,-0.126786 -0.160157,-0.173829 -0.108522,-0.04646 -0.209644,-0.07203 -0.300781,-0.07812 -0.09056,6.9e-4 -0.179578,0.0041 -0.269531,0.01172 -0.09746,0.0013 -0.219723,-0.03442 -0.365235,-0.105468 -0.09564,-0.04843 -0.183022,-0.07157 -0.263671,-0.07227 z"
       transform="scale(0.26458333)" /><path
       id="rect7805-2"
       style="display:inline;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke"
       d="m 43.970703,85.794922 -1.640625,15.257808 11.273438,1.21094 1.640625,-15.255858 z m 1.853516,1.628906 c 0.03181,-0.0036 0.06343,-4.26e-4 0.09375,0.0098 0.05374,0.01965 0.13108,0.04618 0.232422,0.07813 0.443822,0.159496 0.869971,0.260895 1.277343,0.304687 0.400469,0.04306 0.677681,0.09381 0.832032,0.152344 0.147426,0.05778 0.272867,0.112724 0.378906,0.166016 0.106028,0.05332 0.213112,0.111679 0.318359,0.171875 0.236699,0.137222 0.438533,0.232091 0.607422,0.285156 0.09441,0.03119 0.174407,0.07517 0.238281,0.130859 0.05692,0.055 0.119898,0.106638 0.191407,0.15625 0.202179,0.133493 0.472702,0.211824 0.8125,0.234375 0.645843,0.03454 0.998264,0.113507 1.054687,0.238281 0.04238,0.06045 0.05455,0.107592 0.03711,0.140626 -0.01663,0.02613 -0.0051,0.05581 0.0332,0.08789 0.03155,0.03132 0.111251,0.06283 0.240234,0.09766 0.122054,0.03417 0.256381,0.08672 0.402344,0.158204 0.378711,0.180409 0.586398,0.416509 0.625,0.707031 0.02293,0.177058 1.38e-4,0.299874 -0.07031,0.36914 -0.06266,0.06309 -0.143781,0.106721 -0.24414,0.13086 -0.106533,0.01638 -0.214511,0.02939 -0.320313,0.03906 -0.112705,0.0088 -0.192133,0.04191 -0.240234,0.09961 -0.267644,0.215659 -0.594794,0.275296 -0.982422,0.177734 -0.12281,-0.02714 -0.210443,-0.03016 -0.261719,-0.0078 -0.05821,0.02167 -0.115132,0.03704 -0.171875,0.04492 -0.05599,0.0011 -0.116065,0.0047 -0.179687,0.01172 -0.155616,0.01814 -0.256851,0.04697 -0.302735,0.08398 -0.04588,0.03699 -0.08675,0.07077 -0.125,0.101562 -0.0444,0.02318 -0.102546,0.04143 -0.173828,0.05469 -0.179301,0.04357 -0.386806,0.05829 -0.623047,0.04687 -0.236245,-0.01159 -0.415552,-0.01222 -0.535156,-0.0039 -0.126513,0.0073 -0.243077,0.01853 -0.349609,0.03516 -0.269801,0.04082 -0.501708,0.06258 -0.697266,0.0625 -0.194822,-0.0071 -0.360457,0.0018 -0.496094,0.0293 -0.141808,0.01965 -0.280373,0.04297 -0.416015,0.07031 -0.370923,0.07186 -0.65119,0.108695 -0.839844,0.109375 -0.194822,-0.0071 -0.341314,-0.0094 -0.439453,-0.0059 -0.09744,-0.0033 -0.18023,-0.0051 -0.25,-0.0059 -0.292967,-0.0035 -0.40658,-0.162617 -0.337891,-0.476562 0.01436,-0.06828 0.03267,-0.138409 0.05469,-0.212891 0.02268,-0.08136 0.04264,-0.163977 0.05859,-0.246094 0.0088,-0.08285 0.0063,-0.156325 -0.0078,-0.220703 -0.01411,-0.06438 -0.02419,-0.127784 -0.03125,-0.191406 -0.0068,-0.133417 0.03714,-0.254809 0.132812,-0.363281 0.0634,-0.07002 0.151697,-0.105507 0.263672,-0.107422 0.105802,-0.0096 0.229992,-0.0078 0.375,0.0078 0.138835,0.0078 0.291309,0.02122 0.457031,0.03906 0.166476,0.01083 0.342646,0.0016 0.527344,-0.02734 0.185474,-0.03593 0.326432,-0.05231 0.423828,-0.04883 0.09051,0.0025 0.177649,0.01317 0.259766,0.0293 0.220195,0.03077 0.406877,0.03575 0.5625,0.01758 0.148712,-0.0189 0.252606,-0.02829 0.308594,-0.0293 0.04908,-0.0018 0.100288,-0.0032 0.15625,-0.0039 0.04981,-0.0086 0.09412,-0.022 0.130859,-0.03906 0.02986,-0.01789 0.03578,-0.04831 0.01953,-0.0918 -0.02318,-0.0444 -0.06604,-0.06663 -0.128906,-0.06641 -0.174085,-0.0048 -0.323731,-0.07287 -0.449219,-0.205078 -0.130141,-0.153676 -0.295337,-0.206455 -0.496093,-0.158203 -0.200013,0.04135 -0.395578,0.03864 -0.585938,-0.0098 -0.197266,-0.04913 -0.369393,-0.09949 -0.517578,-0.15039 -0.148183,-0.05085 -0.277445,-0.079 -0.388672,-0.08398 -0.118123,-0.0055 -0.226808,-0.0099 -0.324219,-0.01367 -0.104315,-0.004 -0.193562,-0.01122 -0.269531,-0.01953 -0.07597,-0.0081 -0.152371,-0.04798 -0.228516,-0.119141 -0.07617,-0.07106 -0.113406,-0.19024 -0.109374,-0.357421 -0.003,-0.167963 0.04328,-0.336487 0.138671,-0.507813 -0.02394,-0.03749 -0.02532,-0.09065 -0.0039,-0.158203 0.02116,-0.06755 0.05922,-0.115202 0.111328,-0.144531 -0.04558,-0.0957 -0.04766,-0.207736 -0.0059,-0.335938 0.0349,-0.128932 0.08463,-0.208435 0.15039,-0.236328 0.0333,-0.01737 0.06585,-0.02766 0.09766,-0.03125 z m -0.38086,4.771484 c 0.02176,5.83e-4 0.04397,0.0015 0.06641,0.0039 0.08285,0.0088 0.172384,0.02652 0.267578,0.05078 0.0959,0.01739 0.199794,0.02054 0.3125,0.01172 0.255254,-0.03543 0.458454,-0.01557 0.611328,0.05664 0.14594,0.07158 0.234343,0.133516 0.263672,0.185547 0.02242,0.0513 0.03534,0.101333 0.03711,0.150391 0.0025,0.04218 0.0043,0.08766 0.0059,0.136719 -0.0045,0.04145 0.01585,0.08138 0.06055,0.121093 0.08383,0.06491 0.424698,0.12878 1.025391,0.19336 l 1.732422,0.166015 c 0.441897,0.04752 0.853656,0.119966 1.234375,0.216797 0.122557,-0.0357 0.188812,-0.102538 0.199219,-0.199219 0.0096,-0.08975 0.03274,-0.14601 0.07031,-0.169921 0.08116,-0.04016 0.226713,-0.02448 0.435547,0.04687 0.121323,0.04097 0.21492,0.06769 0.283203,0.08203 0.06904,0.0073 0.12821,0.01695 0.175781,0.0293 0.08136,0.02268 0.166146,0.08052 0.253907,0.173828 0.06632,0.09794 0.110185,0.204167 0.132812,0.318359 0.01638,0.106533 0.0286,0.195099 0.03516,0.265625 0.01335,0.07128 0.03591,0.150974 0.06836,0.238282 0.04876,0.130973 0.06536,0.241057 0.04883,0.330078 -0.01587,0.08209 -0.03095,0.14769 -0.04297,0.195312 -0.0045,0.04145 -4.38e-4,0.09385 0.01367,0.158203 0.01487,0.05747 0.01865,0.102955 0.0078,0.136719 -0.0038,0.03452 -0.01582,0.06853 -0.0332,0.101562 -0.05256,0.09913 -0.08407,0.193452 -0.09375,0.283204 -0.01335,0.124296 -0.227738,0.184765 -0.646484,0.18164 -0.167937,0.003 -0.328085,-0.01086 -0.478516,-0.04102 -0.1504,-0.03011 -0.24353,-0.06451 -0.28125,-0.103516 -0.04462,-0.03971 -0.07146,-0.08495 -0.08008,-0.134766 -0.01562,-0.05057 -0.02508,-0.09652 -0.02734,-0.138671 -0.0093,-0.04291 -0.01626,-0.08191 -0.01953,-0.117188 -0.01638,-0.04367 -0.08677,-0.07258 -0.210937,-0.08594 -0.130419,-0.02116 -0.249618,-0.04 -0.359375,-0.05859 -0.303048,-0.03969 -0.514925,-0.0879 -0.634766,-0.142578 -0.178998,-0.0891 -0.337665,-0.09527 -0.478515,-0.01953 -0.168467,0.07269 -0.469588,0.07521 -0.902344,0.0078 -0.260896,-0.042 -0.476584,-0.06157 -0.644532,-0.05859 -0.327488,-0.0073 -0.555095,-0.02205 -0.685546,-0.04297 -0.0959,-0.01739 -0.171331,-0.02911 -0.226563,-0.03516 -0.05523,-0.006 -0.09858,-0.0061 -0.126953,-0.002 -0.05747,0.01487 -0.09043,0.07425 -0.101562,0.177734 -0.01814,0.102804 -0.07648,0.193312 -0.175782,0.273438 -0.09943,0.0801 -0.245669,0.102955 -0.4375,0.06836 -0.191093,-0.04157 -0.368253,-0.06034 -0.529297,-0.05664 -0.161033,0.0038 -0.283849,-0.01901 -0.36914,-0.07031 -0.08532,-0.0511 -0.157371,-0.0841 -0.21875,-0.09766 -0.06138,-0.01361 -0.117197,-0.02975 -0.164063,-0.04883 -0.106028,-0.05332 -0.158039,-0.154312 -0.15625,-0.300782 0.0025,-0.153373 0.02245,-0.29005 0.05664,-0.412109 0.02789,-0.129713 0.06007,-0.247979 0.09961,-0.355469 0.100233,-0.28257 0.156365,-0.468835 0.166016,-0.558593 0.0073,-0.06904 0.0087,-0.146135 0.0039,-0.230469 -0.01109,-0.09199 -0.01865,-0.179338 -0.02344,-0.263672 -0.01361,-0.197039 0.01058,-0.340922 0.07617,-0.431641 0.06637,-0.09764 0.138637,-0.153467 0.216797,-0.166015 0.05921,-0.01455 0.122214,-0.02128 0.1875,-0.01953 z m 1.494141,3.369141 c 0.222313,0.003 0.451907,0.05368 0.6875,0.152344 0.18046,0.07529 0.327441,0.125912 0.443359,0.152344 0.216467,0.06518 0.401798,0.134691 0.554688,0.207031 0.146696,0.06466 0.332023,0.132234 0.554687,0.205078 0.215736,0.07209 0.401038,0.156217 0.558594,0.25 0.150627,0.09303 0.261253,0.16614 0.332031,0.222656 0.07151,0.04961 0.136907,0.09552 0.195313,0.136719 0.149896,0.09993 0.265073,0.165681 0.345703,0.195313 0.08136,0.02268 0.171629,0.05586 0.271484,0.101562 0.09371,0.03802 0.187858,0.0858 0.279297,0.144531 0.206841,0.154936 0.272529,0.323409 0.197266,0.503907 0.161159,0.254813 0.293419,0.422984 0.396484,0.503906 0.09615,0.08018 0.16465,0.15049 0.207032,0.210937 0.04238,0.06045 0.07115,0.118333 0.08594,0.175781 0.01562,0.05057 0.02854,0.102555 0.03711,0.152344 0.0086,0.04981 0.02729,0.100287 0.05664,0.152344 0.02933,0.05203 0.04948,0.12285 0.06055,0.214844 0.01865,0.08582 0.01266,0.174185 -0.01758,0.261718 -0.06518,0.216492 -0.257067,0.313303 -0.576172,0.292969 -0.08834,0.172095 -0.167024,0.278659 -0.234375,0.320309 -0.136164,0.0971 -0.30081,0.13603 -0.494141,0.11524 -0.200239,-0.0214 -0.357519,-0.0485 -0.472656,-0.082 -0.121323,-0.041 -0.237457,-0.0787 -0.345703,-0.11133 -0.262597,-0.09111 -0.470604,-0.124631 -0.626953,-0.09961 -0.163276,0.02444 -0.309765,0.02406 -0.439453,-0.0039 -0.135862,-0.03565 -0.285028,-0.05529 -0.445313,-0.05859 -0.166475,-0.01083 -0.310076,-0.02652 -0.433594,-0.04687 -0.122809,-0.02714 -0.239877,-0.04946 -0.349609,-0.06836 -0.11588,-0.02641 -0.221679,-0.04626 -0.318359,-0.05664 -0.09665,-0.01033 -0.190012,7e-4 -0.277344,0.0332 -0.09421,0.03177 -0.186547,0.05625 -0.279297,0.07422 -0.09199,0.01109 -0.176502,0.01985 -0.253906,0.02539 -0.188649,7.46e-4 -0.327958,0.0212 -0.416016,0.06055 -0.08731,0.03253 -0.185189,0.03845 -0.294922,0.01953 -0.116611,-0.01965 -0.232216,-0.01978 -0.345703,-0.0039 -0.119609,0.0081 -0.209324,0.0085 -0.271484,0.002 -0.06828,-0.01436 -0.139656,-0.01524 -0.210938,-0.002 -0.07743,0.0055 -0.119999,-0.0062 -0.130859,-0.03516 -0.01638,-0.04367 -0.09999,-0.09173 -0.248047,-0.142578 -0.148183,-0.05085 -0.236296,-0.10224 -0.265625,-0.154296 -0.03623,-0.05279 -0.06427,-0.107811 -0.08594,-0.166016 -0.02857,-0.05896 -0.04633,-0.122834 -0.05273,-0.19336 -0.0038,-0.161033 0.0387,-0.304715 0.128906,-0.427734 0.09081,-0.129915 0.136946,-0.226146 0.136719,-0.289062 4.11e-4,-0.0698 -0.01402,-0.140148 -0.04102,-0.212891 -0.06602,-0.230602 -0.08675,-0.449112 -0.06445,-0.65625 0.02217,-0.207143 0.05125,-0.351759 0.08789,-0.431641 0.02971,-0.0806 0.06102,-0.142095 0.09375,-0.1875 0.026,-0.04609 0.05396,-0.08848 0.08594,-0.126953 0.026,-0.04609 0.04384,-0.110487 0.05273,-0.193359 0.0096,-0.08975 0.038,-0.154417 0.08398,-0.191406 0.04588,-0.03699 0.09732,-0.06908 0.15625,-0.09766 0.05969,-0.0355 0.119241,-0.07481 0.179688,-0.117187 0.06045,-0.04238 0.10589,-0.100102 0.134765,-0.173828 0.02268,-0.08136 0.04538,-0.131896 0.06836,-0.150391 0.01663,-0.02615 0.03911,-0.04385 0.06836,-0.05469 0.02217,-0.01159 0.05186,-0.02312 0.08789,-0.0332 0.03676,-0.01713 0.09753,-0.0593 0.18164,-0.126953 0.0772,-0.06853 0.185851,-0.105457 0.326172,-0.111328 0.133418,-0.0068 0.344251,-0.02996 0.634766,-0.06836 0.07263,-0.0097 0.146599,-0.0127 0.220703,-0.01172 z m 1.199219,1.847656 c -0.02276,5.86e-4 -0.04495,0.0032 -0.06641,0.0078 -0.09199,0.01109 -0.194665,0.01752 -0.30664,0.01953 -0.11195,0.0019 -0.215114,0.01418 -0.308594,0.03906 -0.09965,0.01713 -0.172362,0.08066 -0.21875,0.1875 -0.0189,0.04684 -0.04397,0.08848 -0.07617,0.126953 -0.03132,0.03155 -0.05954,0.0634 -0.08398,0.0957 -0.04268,0.07224 -0.02947,0.147381 0.03906,0.224609 0.06854,0.0772 0.189197,0.118285 0.363282,0.123047 0.167206,0.004 0.360376,-1.28e-4 0.578125,-0.01172 0.210847,-0.01235 0.384131,-0.0082 0.521484,0.01367 0.137348,0.02192 0.271428,0.05127 0.400391,0.08594 0.129713,0.02789 0.259722,0.0589 0.388672,0.09375 0.129688,0.02789 0.259419,0.04839 0.390624,0.0625 0.124297,0.01335 0.216456,0.007 0.275391,-0.02148 0.05896,-0.02857 0.08931,-0.06402 0.09375,-0.105468 -0.0025,-0.04218 -0.02454,-0.0862 -0.06836,-0.132813 -0.0508,-0.04737 -0.13412,-0.0849 -0.25,-0.111328 -0.122054,-0.03417 -0.234836,-0.09102 -0.337891,-0.171875 -0.109203,-0.08857 -0.221052,-0.160797 -0.333984,-0.214844 -0.112907,-0.05405 -0.195499,-0.08676 -0.25,-0.09961 -0.05377,-0.01965 -0.101911,-0.03534 -0.142578,-0.04687 -0.04757,-0.0121 -0.09425,-0.0201 -0.142579,-0.02539 -0.05448,-0.01285 -0.135403,-0.04343 -0.242187,-0.08984 -0.08007,-0.03481 -0.154365,-0.05059 -0.222656,-0.04883 z"
       transform="scale(0.26458333)" /></g><g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Soldermask"
     style="display:inline"><g
       aria-label="Rabid.Audio"
       id="text3835-2-1-5-7-3"
       style="font-size:2.11667px;line-height:1.25;display:inline;fill:#cccccc;stroke-width:0.264583"><path
         d="m 3.5838121,121.52671 0.0062,0.0992 q 0.00413,0.0806 -0.041341,0.10542 -0.012402,0.0827 -0.012402,0.14676 -0.014469,0.0289 -0.047542,0.0351 -0.062012,0.008 -0.080615,-0.0331 -0.026872,-0.0517 -0.043408,-0.0558 -0.00413,-0.002 -0.014469,-0.002 -0.00827,-0.002 -0.020671,-0.006 -0.012402,-0.006 -0.010335,-0.0331 0.00413,-0.0269 0,-0.0434 -0.00413,-0.0165 -0.010335,-0.0351 -0.016536,-0.0538 -0.016536,-0.10336 0,-0.0351 0,-0.0641 0.00207,-0.0289 0.00207,-0.0579 -0.00413,-0.093 -0.024805,-0.15917 -0.018604,-0.0661 -0.024805,-0.0868 -0.012402,-0.0455 -0.012402,-0.0868 0,-0.0248 0.0062,-0.0351 0.0062,-0.0124 0.012402,-0.0248 0.016536,-0.031 0.012402,-0.0723 -0.00207,-0.0413 -0.0062,-0.0827 -0.00207,-0.0434 -0.0062,-0.0951 -0.00207,-0.0537 -0.0062,-0.11369 -0.00207,-0.0599 -0.00207,-0.11575 0,-0.1819 0.045475,-0.20464 0.00827,-0.004 0.018604,-0.008 0.012402,-0.006 0.028939,-0.0165 0.016536,-0.0103 0.028939,-0.0207 0.014469,-0.0103 0.028939,-0.0165 0.026872,-0.0124 0.064079,0.004 0.039274,0.0145 0.055811,0.0207 0.016536,0.004 0.033073,0.008 0.016536,0.002 0.037207,0.002 0.022738,-0.002 0.062012,-0.002 0.041341,-0.002 0.086817,0 0.047542,0.002 0.090951,0.0124 0.1405601,0.0289 0.2170414,0.15503 0.033073,0.0558 0.03514,0.0992 0.00207,0.0434 0.00413,0.0847 0.00413,0.0393 0.016536,0.091 0.012402,0.0496 0.00827,0.0951 -0.00413,0.0455 -0.010335,0.0641 -0.00413,0.0165 -0.010335,0.031 -0.010335,0.031 -0.00827,0.0641 0.00413,0.0537 -0.00827,0.0847 -0.012402,0.0289 -0.024805,0.0599 -0.03514,0.0765 -0.076481,0.0868 -0.022738,0.004 -0.037207,0.008 -0.014469,0.004 -0.016536,0.0186 -0.00413,0.0103 0.012402,0.0248 0.016537,0.0124 0.033073,0.0393 0.018604,0.0269 0.031006,0.0351 0.012402,0.008 0.022738,0.0103 0.031006,0.006 0.039274,0.0145 0.018604,0.0227 0.026872,0.0372 0.010335,0.0145 0.0062,0.0434 -0.00413,0.0289 0,0.06 0.00413,0.031 0.00827,0.0661 0.00413,0.0331 0,0.0558 -0.00207,0.0227 -0.00207,0.0331 l 0.00827,0.0537 q 0,0.0496 -0.028939,0.0806 -0.028939,0.031 -0.045475,0.0351 -0.016536,0.004 -0.031006,-0.002 -0.014469,-0.006 -0.024805,-0.0165 -0.010335,-0.008 -0.016536,-0.0103 -0.0062,-0.004 -0.016536,-0.004 -0.00827,-0.002 -0.018604,-0.006 -0.037207,-0.0103 -0.064079,-0.14469 -0.014469,-0.0661 -0.049609,-0.0847 -0.053744,-0.0269 -0.057878,-0.0744 -0.00207,-0.0227 -0.00413,-0.062 -0.00827,-0.0786 -0.053744,-0.0971 -0.022738,-0.008 -0.041341,-0.008 -0.018603,0 -0.037207,0.0207 -0.024805,0.031 -0.024805,0.0992 z m 0.103353,-0.39274 q 0.026872,-0.0248 0.051677,-0.0434 0.026872,-0.0207 0.043408,-0.0517 0.018604,-0.0331 0.028939,-0.0661 0.016536,-0.062 0.010335,-0.11369 -0.00413,-0.0537 -0.012402,-0.0703 -0.0062,-0.0186 -0.041341,-0.0186 -0.033073,0 -0.068213,-0.0165 -0.033073,-0.0165 -0.037207,-0.0393 -0.00413,-0.0496 -0.031006,-0.0351 -0.014469,0.008 -0.020671,0.0165 -0.0062,0.006 -0.010335,0.0413 -0.0062,0.0724 0,0.11369 0.00827,0.0413 0.010335,0.0558 0.00207,0.0124 0.00207,0.0289 0.00207,0.0145 0.00207,0.0351 0.00207,0.0186 0.00413,0.062 0.00413,0.0413 0.00207,0.0703 -0.00207,0.0289 0.0062,0.06 0.033073,-0.004 0.059945,-0.0289 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2191" /><path
         d="m 4.3589598,121.92359 q -0.020671,0.006 -0.047542,-0.004 -0.024805,-0.008 -0.03514,-0.0331 -0.010335,-0.0269 -0.014469,-0.06 -0.00207,-0.0351 0,-0.0744 0.00207,-0.0393 0.00207,-0.0765 0,-0.0827 -0.026872,-0.10542 -0.055811,-0.0413 -0.045475,-0.21084 0.010335,-0.0971 0.022738,-0.15503 0.020671,-0.0951 0.018604,-0.16123 0,-0.0661 0.00413,-0.10336 0.0062,-0.0372 0.012402,-0.062 0.00827,-0.0248 0.018603,-0.0517 0.010335,-0.0269 0.018604,-0.0889 0.020671,-0.15503 0.037207,-0.19223 0.022738,-0.0517 0.053744,-0.10542 0.033073,-0.0558 0.053744,-0.0744 0.047542,-0.0351 0.136426,-0.006 0.066146,0.0227 0.1219565,0.0145 0.057878,-0.008 0.086817,-0.006 0.031006,0 0.068213,0.0227 0.037207,0.0207 0.057878,0.0517 0.020671,0.0289 0.028939,0.0641 0.014469,0.06 0.00207,0.15296 -0.012402,0.091 -0.010335,0.14883 0.00413,0.0558 0.024805,0.10749 0.022738,0.0496 0.028939,0.0806 0.00827,0.0289 0.012402,0.0599 0.0062,0.0289 0.00827,0.0641 0.00413,0.0331 0.012402,0.0765 0.010335,0.0434 0.010335,0.0703 0.00207,0.0248 0,0.0413 -0.00207,0.0165 -0.0062,0.031 -0.00207,0.0124 0.00207,0.0413 0.0062,0.0269 0,0.0599 -0.00413,0.0331 -0.010335,0.0641 -0.022738,0.0951 -0.018604,0.13436 0.00827,0.0703 0,0.10129 -0.00827,0.0289 -0.016536,0.0475 -0.0062,0.0186 -0.016536,0.0517 -0.00827,0.0331 -0.037207,0.0599 -0.028939,0.0269 -0.055811,0.0165 -0.024805,-0.0103 -0.033073,-0.0289 -0.0062,-0.0207 -0.012402,-0.0413 -0.00413,-0.0207 -0.012402,-0.0372 -0.0062,-0.0165 -0.024805,-0.0186 -0.033073,-0.004 -0.03514,-0.0372 -0.00207,-0.0351 0,-0.06 0.00413,-0.0269 -0.00207,-0.0537 -0.0062,-0.0269 -0.020671,-0.0517 -0.037207,-0.0641 -0.086817,-0.0703 -0.074414,-0.0103 -0.103353,0.0724 -0.0062,0.0207 -0.010335,0.0558 -0.00207,0.0331 -0.016536,0.06 -0.012402,0.0269 -0.028939,0.0455 -0.014469,0.0186 -0.028939,0.0351 -0.012402,0.0145 -0.016536,0.0372 -0.016536,0.0889 -0.07028,0.10129 z m 0.1839683,-0.8661 q -0.041341,0.11162 -0.010335,0.17776 0.020671,0.0372 0.053744,0.0393 0.059945,0.006 0.07028,-0.008 0.012402,-0.0165 0.026872,-0.0331 0.016536,-0.0186 0.012402,-0.0537 -0.00413,-0.0372 -0.0062,-0.0641 -0.00207,-0.0289 -0.020671,-0.0641 -0.016536,-0.0351 -0.022738,-0.0744 -0.0062,-0.0413 -0.00827,-0.0786 -0.00827,-0.0827 -0.037207,-0.0827 -0.020671,0 -0.026872,0.0227 -0.00413,0.0207 -0.0062,0.0558 -0.00207,0.10749 -0.024805,0.1633 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2193" /><path
         d="m 5.8658468,121.15257 q -0.057878,0.0641 -0.1178224,0.10336 0.051677,0.008 0.088884,0.0269 0.039274,0.0165 0.039274,0.0537 0,0.0351 0.00827,0.0517 0.00827,0.0165 0.016536,0.0331 0.020671,0.0393 0.00827,0.093 -0.010335,0.0517 -0.014469,0.10128 -0.00207,0.0476 -0.010335,0.093 -0.020671,0.11162 -0.086817,0.13229 -0.053743,0.0165 -0.095085,0.0248 -0.062012,0.0868 -0.1074872,0.0806 -0.016536,-0.002 -0.026872,-0.0227 -0.010335,-0.0207 -0.026872,-0.0227 -0.016536,-0.002 -0.03514,0.004 l -0.041341,0.0145 q -0.039274,0.0124 -0.1240236,-0.0165 -0.031006,-0.0124 -0.045475,-0.0579 -0.014469,-0.0455 -0.026872,-0.0641 -0.010335,-0.0207 -0.020671,-0.0331 -0.010335,-0.0145 -0.020671,-0.0227 -0.039274,-0.0351 -0.039274,-0.06 -0.00207,-0.0413 0.0062,-0.10748 0.010335,-0.0682 0.010335,-0.11576 0.00207,-0.0496 -0.00413,-0.093 -0.010335,-0.093 -0.055811,-0.12195 -0.022738,-0.0145 -0.033073,-0.0227 -0.00827,-0.0103 -0.00827,-0.0289 0,-0.0186 0.00827,-0.0537 0.00827,-0.0351 0.014469,-0.0744 0.0062,-0.0393 0.016536,-0.0558 0.010335,-0.0186 0.010335,-0.062 0.00207,-0.0455 -0.00207,-0.0827 -0.00413,-0.0393 -0.00827,-0.0641 -0.0062,-0.06 0,-0.0972 0.0062,-0.0372 0.00207,-0.0682 -0.00207,-0.0331 0,-0.062 0.0062,-0.0785 0.1157554,-0.14883 0.090951,-0.0579 0.1550296,-0.0269 0.041341,0.0165 0.059945,0.0124 0.020671,-0.004 0.031006,-0.004 0.010335,0 0.024805,0.0103 0.014469,0.008 0.033073,0.006 0.018604,-0.004 0.037207,-0.0103 0.053744,-0.0124 0.080615,-0.004 0.026872,0.008 0.045475,0.004 0.018603,-0.006 0.031006,-0.006 0.012402,0 0.031006,0.0103 0.018604,0.0103 0.031006,0.0124 0.014469,0.002 0.024805,0.004 0.018604,0.004 0.031006,0.0372 0.00827,0.0207 0.010335,0.0393 0.00207,0.0165 0.00413,0.0331 0.00827,0.0351 0.028939,0.0537 0.016536,0.0145 0.016536,0.0331 0,0.0331 0.014469,0.0434 0.014469,0.008 0.026872,0.0393 0.012402,0.0289 0.018604,0.0703 0.016536,0.10542 -0.020671,0.19224 -0.012402,0.14883 -0.074414,0.17984 -0.010335,0.004 -0.03514,0.0165 z m -0.3265955,-0.3762 q -0.00413,-0.0165 -0.010335,-0.0269 -0.00413,-0.0103 -0.016536,-0.006 -0.010335,0.004 -0.014469,0.0145 -0.00207,0.0103 -0.00207,0.0248 0,0.0145 0,0.031 0.00207,0.0165 -0.00207,0.0351 -0.00207,0.0186 -0.00207,0.0351 0.00207,0.0165 0.0062,0.0351 0.00827,0.0517 0.00827,0.093 0.00207,0.0413 0,0.0661 0,0.0248 0,0.0434 0.00207,0.0331 0.031006,0.0434 0.028939,0.0124 0.064079,-0.0517 0.053744,-0.093 0.062012,-0.19017 0.00413,-0.0351 -0.012402,-0.0641 -0.016536,-0.031 -0.031006,-0.0331 -0.014469,-0.004 -0.03514,-0.006 -0.020671,-0.002 -0.031006,-0.0145 -0.00827,-0.0145 -0.014469,-0.0289 z m 0.010335,0.85576 q 0.020671,-0.0145 0.024805,-0.031 0.0062,-0.0165 0.020671,-0.0289 0.014469,-0.0145 0.018604,-0.0558 0.0062,-0.0703 -0.014469,-0.0992 -0.018604,-0.031 -0.024805,-0.0744 -0.022738,-0.0145 -0.031006,-0.0227 -0.00827,-0.0103 -0.016536,-0.004 -0.00827,0.006 -0.00827,0.0186 0.00207,0.0103 -0.00207,0.0248 -0.00413,0.0145 -0.010335,0.031 -0.00413,0.0145 0,0.0393 0.0062,0.0227 0.00207,0.0434 -0.00207,0.0207 -0.00827,0.0558 -0.00413,0.0331 -0.0062,0.0496 0,0.0165 0.018603,0.0434 0.018604,0.0248 0.037207,0.0103 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2195" /><path
         d="m 6.5851839,120.7557 q -0.07028,0.0186 -0.026872,0.23978 0.014469,0.0599 0.014469,0.10128 0.00207,0.0393 -0.010335,0.0868 -0.012402,0.0475 -0.012402,0.0765 0,0.0289 -0.00827,0.0682 0.00207,0.0434 -0.00207,0.0889 -0.00207,0.0434 -0.00413,0.0847 -0.0062,0.10128 -0.00207,0.11988 0.00413,0.0186 0.012402,0.0248 0.010335,0.004 0.022738,0.008 0.028939,0.0103 0.03514,0.0269 0.0062,0.0165 0.00413,0.0475 0,0.0289 -0.0062,0.062 -0.018603,0.0785 -0.051676,0.10129 -0.018604,0.0124 -0.039274,0.008 -0.018604,-0.004 -0.041341,-0.008 -0.07028,-0.0124 -0.1198896,0.0124 -0.1219565,0.0662 -0.1881025,0 -0.026872,-0.0269 -0.033073,-0.0827 -0.00827,-0.10129 0.010335,-0.13023 0.020671,-0.0289 0.033073,-0.0351 0.014469,-0.008 0.024805,-0.0145 0.022738,-0.0103 0.022738,-0.0351 0,-0.0186 0.00413,-0.0393 0.0062,-0.0227 0.010335,-0.0475 0.010335,-0.06 -0.010335,-0.0992 -0.022738,-0.0455 -0.020671,-0.0744 0.00413,-0.0289 0.0062,-0.0517 l 0.00827,-0.0496 q 0.00413,-0.06 -0.00207,-0.10129 -0.0062,-0.0434 -0.010335,-0.0889 -0.00207,-0.0475 -0.00207,-0.0889 0.00207,-0.0413 0.00207,-0.0785 0,-0.0868 -0.018604,-0.10335 -0.016536,-0.0165 -0.031006,-0.0165 -0.014469,-0.002 -0.028939,-0.002 -0.039274,0.004 -0.049609,-0.0124 -0.022738,-0.0227 -0.022738,-0.0579 0,-0.0351 0.012402,-0.0537 0.014469,-0.0186 0.018604,-0.0413 0.00413,-0.0248 0.00413,-0.0517 0.00413,-0.062 -0.00413,-0.0806 -0.00827,-0.0207 -0.012402,-0.0351 -0.00207,-0.0165 -0.00207,-0.031 0,-0.06 0.084749,-0.062 0.051677,-0.002 0.10542,0.002 0.053744,0.002 0.08475,-0.004 0.1074872,-0.0207 0.171566,-0.0165 0.066146,0.004 0.08475,0.0103 0.051677,0.0207 0.055811,0.11369 0.00207,0.0434 0.00207,0.091 0,0.0475 0.00413,0.0971 0.00827,0.10335 -0.078548,0.12196 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2197" /><path
         d="m 7.1164183,121.89051 q -0.082682,0.0641 -0.1405601,0.0641 -0.026872,0 -0.057878,-0.0165 -0.028939,-0.0165 -0.039274,-0.0393 -0.00827,-0.0227 -0.00827,-0.0496 0,-0.0289 0,-0.062 0.00207,-0.0558 -0.016536,-0.10129 -0.018604,-0.0455 -0.024805,-0.0661 -0.010335,-0.0434 -0.0062,-0.12609 0.00207,-0.0641 -0.00413,-0.0765 -0.0062,-0.0145 -0.0062,-0.0269 0,-0.0124 0.00827,-0.0868 0.022738,-0.17777 -0.020671,-0.1819 -0.022738,-0.004 -0.022738,-0.0103 0.00207,-0.006 -0.010335,-0.0269 -0.012402,-0.0227 -0.016536,-0.0351 -0.00207,-0.0124 -0.00207,-0.0393 0,-0.0269 0.0062,-0.0496 0.0062,-0.0227 0.014469,-0.0455 0.057878,-0.1571 0.041341,-0.26458 -0.022738,-0.11783 -0.016536,-0.16537 0.00827,-0.0496 0.022738,-0.0703 0.016536,-0.0207 0.037207,-0.0372 0.020671,-0.0186 0.049609,-0.0289 0.062012,-0.0207 0.1074871,0.0103 0.047542,0.031 0.086817,0.0393 0.039274,0.008 0.074414,0.0103 0.090951,0.006 0.1116212,0.0227 0.020671,0.0165 0.039274,0.0269 0.020671,0.008 0.03514,0.0145 0.041341,0.0207 0.049609,0.0393 0.00827,0.0186 0.022738,0.0351 0.014469,0.0145 0.031006,0.0331 0.037207,0.0475 0.047542,0.10128 0.0062,0.0351 0.010335,0.062 0.00413,0.0269 0.010335,0.0517 0.018604,0.0806 0.043408,0.14263 0.049609,0.12609 0.024805,0.1943 l -0.00413,0.008 q 0.016536,0.0413 0.00413,0.0889 -0.010335,0.0455 -0.016536,0.0661 -0.00413,0.0186 -0.012402,0.0434 -0.00827,0.0248 -0.018604,0.0641 -0.010335,0.0372 -0.020671,0.0661 -0.010335,0.0269 -0.022738,0.0496 -0.024805,0.0455 -0.1281577,0.15296 -0.033073,0.0331 -0.047542,0.0661 -0.012402,0.0331 -0.037207,0.0517 -0.033073,0.062 -0.055811,0.0765 -0.045475,0.0351 -0.1219566,0.0248 z m -0.028939,-0.91157 0.0062,0.11782 q 0.00413,0.0496 -0.0062,0.093 -0.010335,0.0413 -0.00413,0.0889 0.00827,0.0476 0.00413,0.0806 -0.00413,0.0331 0.00413,0.0537 0.00827,0.0207 0.00413,0.0434 -0.00207,0.0207 -0.00413,0.0413 -0.00413,0.0537 0.020671,0.0579 0.016536,0.002 0.031006,-0.0145 0.014469,-0.0186 0.024805,-0.0455 0.018604,-0.0434 0.031006,-0.11368 0.00413,-0.0289 0.020671,-0.062 0.028939,-0.062 0.028939,-0.0889 0,-0.0289 0.00207,-0.0351 0.00207,-0.008 0.00413,-0.0165 0.00413,-0.008 0.00827,-0.0186 0.00413,-0.0103 0.00827,-0.0372 0.00413,-0.0289 -0.00827,-0.0703 -0.010335,-0.0434 -0.043408,-0.0703 -0.031006,-0.0269 -0.043408,-0.0455 -0.012402,-0.0186 -0.022738,-0.0331 -0.020671,-0.0289 -0.039274,-0.0165 -0.026872,0.0207 -0.026872,0.0909 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2199" /><path
         d="m 7.6414519,121.86157 q -0.0062,-0.0145 -0.00413,-0.031 0.00413,-0.0165 0.033073,-0.0434 0.031006,-0.0269 0.076481,-0.0517 0.047542,-0.0248 0.1260906,-0.0145 0.037207,0.004 0.059945,0.0434 0.016536,0.0331 0.010335,0.06 -0.00413,0.0248 -0.018604,0.0434 -0.014469,0.0165 -0.033073,0.031 -0.037207,0.0269 -0.066146,0.031 -0.028939,0.004 -0.041341,0.0165 -0.010335,0.0145 -0.037207,0.008 -0.024805,-0.006 -0.033073,-0.0269 -0.0062,-0.0186 -0.022738,-0.0248 -0.016536,-0.006 -0.028939,-0.0165 -0.012402,-0.0103 -0.020671,-0.0248 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2201" /><path
         d="m 8.8196764,121.91118 q -0.012402,0.0227 -0.033073,0.0331 -0.020671,0.0124 -0.041341,-0.004 -0.020671,-0.0145 -0.031006,-0.0124 -0.00827,0.002 -0.016536,0.004 -0.018604,0.002 -0.037207,-0.0269 -0.018604,-0.0289 -0.020671,-0.0455 -0.00207,-0.0186 0,-0.0351 0.00827,-0.0372 -0.012402,-0.0662 -0.018603,-0.0289 -0.026872,-0.0434 -0.0062,-0.0145 -0.0062,-0.0413 0,-0.0289 -0.00413,-0.0351 -0.00207,-0.008 -0.00413,-0.0124 -0.010335,-0.0186 -0.00827,-0.0579 0.00413,-0.0393 -0.010335,-0.0537 -0.01447,-0.0165 -0.039274,-0.0248 -0.022738,-0.008 -0.037207,0.006 -0.012402,0.0124 -0.024805,0.031 -0.010335,0.0186 -0.026872,0.0331 -0.016537,0.0124 -0.043408,0.006 -0.024805,-0.006 -0.055811,0.0124 -0.031006,0.0186 -0.037207,0.0455 -0.0062,0.0248 -0.014469,0.0517 -0.00827,0.0269 -0.0062,0.0496 0.00413,0.0227 0,0.0455 -0.00207,0.0207 -0.010335,0.0413 -0.016536,0.0517 -0.039274,0.0558 -0.018604,0.002 -0.039274,0 -0.022738,0.0414 -0.053744,0.0496 -0.084749,0.0186 -0.1012859,-0.0269 -0.010335,-0.0269 -0.012402,-0.0703 -0.00413,-0.0868 -0.018603,-0.11782 -0.01447,-0.031 -0.00827,-0.0744 0.00827,-0.0434 0.0062,-0.0868 -0.00207,-0.0434 0,-0.0661 0.00207,-0.0227 0.00413,-0.0413 0.00413,-0.0186 0.00827,-0.0351 0.00413,-0.0186 0.00413,-0.0413 0.00207,-0.0248 0.00827,-0.0558 0.0062,-0.031 0.012402,-0.0641 0.016536,-0.0827 0.012402,-0.12402 -0.00413,-0.0413 0.0062,-0.0703 0.012402,-0.0289 0.026872,-0.0517 0.037207,-0.0599 0.03514,-0.0971 -0.00207,-0.0393 -0.00413,-0.06 0,-0.0227 0.00207,-0.0455 0.010335,-0.11162 0.1054201,-0.34933 0.0062,-0.0227 0.039274,-0.0351 0.033073,-0.0124 0.066146,-0.002 0.03514,0.008 0.055811,0.008 0.022738,-0.002 0.037207,-0.0165 0.016536,-0.0165 0.033073,-0.031 0.018604,-0.0145 0.043408,-0.0227 0.024805,-0.0103 0.055811,-0.0103 0.031006,0 0.066146,0.0186 0.057878,0.031 0.076481,0.0579 0.018604,0.0269 0.024805,0.0434 0.0062,0.0165 0.020671,0.0455 0.014469,0.0289 0.012402,0.0517 0,0.0227 0.00827,0.0537 0.00827,0.031 0,0.0723 -0.00827,0.0413 0,0.0827 0.00827,0.0393 0.00827,0.0537 0,0.0145 0.00207,0.0269 0.00207,0.0351 0.014469,0.062 0.012402,0.0289 0.0062,0.0724 -0.00413,0.0413 -0.00207,0.0703 0.00413,0.0269 0.022738,0.0558 0.03514,0.0558 0.024805,0.12402 -0.00207,0.0186 0,0.0413 0.00413,0.0207 0.00413,0.0393 0,0.0165 -0.00413,0.0434 -0.0062,0.0393 0.00207,0.0951 0.012402,0.10336 0.012402,0.1385 0,0.0351 0.00207,0.0599 0.00207,0.0227 0.00413,0.0496 0.0062,0.0703 0,0.14263 -0.00413,0.0703 -0.043408,0.0806 z m -0.3162602,-0.83302 q 0.00413,-0.0393 -0.00413,-0.0971 -0.0062,-0.0579 -0.0062,-0.0847 0,-0.0289 -0.00413,-0.0496 -0.0062,-0.0331 -0.03514,-0.008 -0.033073,-0.0331 -0.053743,-0.002 -0.01447,0.0227 -0.01447,0.0744 -0.00413,0.0351 -0.016536,0.0641 -0.010335,0.0289 -0.014469,0.0641 -0.0062,0.0413 -0.022738,0.10129 -0.01447,0.0599 0.00413,0.0889 0.020671,0.0289 0.049609,0.0207 0.028939,-0.008 0.043408,-0.008 0.014469,-0.002 0.024805,-0.004 0.024805,-0.002 0.037207,-0.0186 0.014469,-0.0186 0.014469,-0.031 0.00207,-0.0145 0,-0.0289 -0.0062,-0.0413 -0.00207,-0.0806 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2203" /><path
         d="m 9.3364415,120.68542 -0.010335,0.46922 q 0,0.31213 0.086816,0.29559 0.074414,-0.0124 0.068213,-0.26252 0,-0.0744 0.010335,-0.0951 0.012402,-0.0227 0.016536,-0.0372 0.010335,-0.0413 0.00413,-0.10955 -0.00413,-0.0434 -0.014469,-0.13023 -0.010335,-0.0868 -0.018604,-0.17777 -0.00827,-0.093 -0.00827,-0.16743 0,-0.0744 0.014469,-0.093 0.016537,-0.0186 0.039274,-0.0207 0.024805,-0.004 0.049609,0 0.026872,0.002 0.049609,0.008 0.024805,0.006 0.039274,0.006 0.016537,0 0.037207,-0.004 0.022738,-0.006 0.043408,-0.008 0.022738,-0.004 0.041341,-0.004 0.020671,0 0.037207,0.0145 0.016537,0.0145 0.026872,0.0723 0.012402,0.0579 0.016536,0.13643 0.0062,0.0786 0.0062,0.1695 0,0.0889 -0.00207,0.1695 -0.00827,0.17776 -0.016537,0.21497 -0.0062,0.0372 -0.016537,0.0537 -0.010335,0.0165 -0.020671,0.031 -0.020671,0.0289 -0.0062,0.0827 0.014469,0.0538 0.022738,0.0827 0.014469,0.0517 0.00207,0.093 -0.012402,0.0413 -0.00827,0.0806 0.010335,0.10542 -0.024805,0.15089 -0.016537,0.0227 -0.051677,0.0434 -0.07028,0.0393 -0.1033531,0.0951 -0.016537,0.0331 -0.039274,0.0393 -0.012402,0.004 -0.037207,0.002 -0.024805,-0.004 -0.053744,-0.006 -0.028939,-0.004 -0.055811,-0.006 -0.026872,-0.004 -0.037207,0 -0.010335,0.002 -0.018604,0.0124 -0.00827,0.008 -0.018604,0.0186 -0.055811,0.0558 -0.1157554,-0.0124 -0.012402,-0.0145 -0.024805,-0.0269 -0.010335,-0.0145 -0.020671,-0.0207 -0.010335,-0.008 -0.028939,-0.0145 -0.016536,-0.008 -0.037207,-0.0227 -0.088884,-0.0537 -0.1116213,-0.17363 -0.012402,-0.0579 -0.020671,-0.14883 -0.00827,-0.093 -0.014469,-0.11782 -0.00413,-0.0248 -0.024805,-0.0537 -0.020671,-0.031 -0.026872,-0.0558 -0.0062,-0.0269 -0.00207,-0.0558 0.00413,-0.0289 0.010335,-0.0661 0.016536,-0.0992 0.00827,-0.17364 -0.00827,-0.0744 -0.00413,-0.11575 0.0062,-0.0413 0.00207,-0.0517 -0.00413,-0.0124 -0.014469,-0.0227 -0.00827,-0.0103 -0.00413,-0.0434 0.00413,-0.0331 0.00413,-0.0641 0,-0.031 0,-0.0641 0.0062,-0.14056 0.043408,-0.1695 0.031006,-0.0227 0.064079,-0.0248 0.051676,-0.002 0.076481,-0.0186 0.026872,-0.0165 0.043408,-0.0269 0.103353,-0.0579 0.1281578,0.0827 0.016536,0.0868 0.020671,0.24185 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2205" /><path
         d="m 10.341033,121.89051 q -0.08268,0.0641 -0.14056,0.0641 -0.02687,0 -0.05788,-0.0165 -0.02894,-0.0165 -0.03927,-0.0393 -0.0083,-0.0227 -0.0083,-0.0496 0,-0.0289 0,-0.062 0.0021,-0.0558 -0.01654,-0.10129 -0.0186,-0.0455 -0.0248,-0.0661 -0.01034,-0.0434 -0.0062,-0.12609 0.0021,-0.0641 -0.0041,-0.0765 -0.0062,-0.0145 -0.0062,-0.0269 0,-0.0124 0.0083,-0.0868 0.02274,-0.17777 -0.02067,-0.1819 -0.02274,-0.004 -0.02274,-0.0103 0.0021,-0.006 -0.010335,-0.0269 -0.012402,-0.0227 -0.016536,-0.0351 -0.00207,-0.0124 -0.00207,-0.0393 0,-0.0269 0.0062,-0.0496 0.0062,-0.0227 0.014469,-0.0455 0.057877,-0.1571 0.041341,-0.26458 -0.02274,-0.11783 -0.01654,-0.16537 0.0083,-0.0496 0.02274,-0.0703 0.01654,-0.0207 0.03721,-0.0372 0.02067,-0.0186 0.04961,-0.0289 0.06201,-0.0207 0.107487,0.0103 0.04754,0.031 0.08682,0.0393 0.03927,0.008 0.07442,0.0103 0.09095,0.006 0.111621,0.0227 0.02067,0.0165 0.03927,0.0269 0.02067,0.008 0.03514,0.0145 0.04134,0.0207 0.04961,0.0393 0.0083,0.0186 0.02274,0.0351 0.01447,0.0145 0.03101,0.0331 0.03721,0.0475 0.04754,0.10128 0.0062,0.0351 0.01034,0.062 0.0041,0.0269 0.01034,0.0517 0.0186,0.0806 0.04341,0.14263 0.04961,0.12609 0.02481,0.1943 l -0.0041,0.008 q 0.01654,0.0413 0.0041,0.0889 -0.01034,0.0455 -0.01654,0.0661 -0.0041,0.0186 -0.0124,0.0434 -0.0083,0.0248 -0.0186,0.0641 -0.01034,0.0372 -0.02067,0.0661 -0.01034,0.0269 -0.02274,0.0496 -0.0248,0.0455 -0.128157,0.15296 -0.03307,0.0331 -0.04754,0.0661 -0.0124,0.0331 -0.03721,0.0517 -0.03307,0.062 -0.05581,0.0765 -0.04548,0.0351 -0.121957,0.0248 z m -0.02894,-0.91157 0.0062,0.11782 q 0.0041,0.0496 -0.0062,0.093 -0.01033,0.0413 -0.0041,0.0889 0.0083,0.0476 0.0041,0.0806 -0.0041,0.0331 0.0041,0.0537 0.0083,0.0207 0.0041,0.0434 -0.0021,0.0207 -0.0041,0.0413 -0.0041,0.0537 0.02067,0.0579 0.01654,0.002 0.03101,-0.0145 0.01447,-0.0186 0.0248,-0.0455 0.0186,-0.0434 0.03101,-0.11368 0.0041,-0.0289 0.02067,-0.062 0.02894,-0.062 0.02894,-0.0889 0,-0.0289 0.0021,-0.0351 0.0021,-0.008 0.0041,-0.0165 0.0041,-0.008 0.0083,-0.0186 0.0041,-0.0103 0.0083,-0.0372 0.0041,-0.0289 -0.0083,-0.0703 -0.01033,-0.0434 -0.04341,-0.0703 -0.03101,-0.0269 -0.04341,-0.0455 -0.0124,-0.0186 -0.02274,-0.0331 -0.02067,-0.0289 -0.03927,-0.0165 -0.02687,0.0207 -0.02687,0.0909 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2207" /><path
         d="m 11.413837,120.7557 q -0.07028,0.0186 -0.02687,0.23978 0.01447,0.0599 0.01447,0.10128 0.0021,0.0393 -0.01034,0.0868 -0.0124,0.0475 -0.0124,0.0765 0,0.0289 -0.0083,0.0682 0.0021,0.0434 -0.0021,0.0889 -0.0021,0.0434 -0.0041,0.0847 -0.0062,0.10128 -0.0021,0.11988 0.0041,0.0186 0.0124,0.0248 0.01033,0.004 0.02274,0.008 0.02894,0.0103 0.03514,0.0269 0.0062,0.0165 0.0041,0.0475 0,0.0289 -0.0062,0.062 -0.0186,0.0785 -0.05168,0.10129 -0.0186,0.0124 -0.03927,0.008 -0.0186,-0.004 -0.04134,-0.008 -0.07028,-0.0124 -0.11989,0.0124 -0.121956,0.0662 -0.188102,0 -0.02687,-0.0269 -0.03307,-0.0827 -0.0083,-0.10129 0.01033,-0.13023 0.02067,-0.0289 0.03307,-0.0351 0.01447,-0.008 0.02481,-0.0145 0.02274,-0.0103 0.02274,-0.0351 0,-0.0186 0.0041,-0.0393 0.0062,-0.0227 0.01034,-0.0475 0.01034,-0.06 -0.01034,-0.0992 -0.02274,-0.0455 -0.02067,-0.0744 0.0041,-0.0289 0.0062,-0.0517 l 0.0083,-0.0496 q 0.0041,-0.06 -0.0021,-0.10129 -0.0062,-0.0434 -0.01033,-0.0889 -0.0021,-0.0475 -0.0021,-0.0889 0.0021,-0.0413 0.0021,-0.0785 0,-0.0868 -0.0186,-0.10335 -0.01654,-0.0165 -0.03101,-0.0165 -0.01447,-0.002 -0.02894,-0.002 -0.03927,0.004 -0.04961,-0.0124 -0.02274,-0.0227 -0.02274,-0.0579 0,-0.0351 0.0124,-0.0537 0.01447,-0.0186 0.0186,-0.0413 0.0041,-0.0248 0.0041,-0.0517 0.0041,-0.062 -0.0041,-0.0806 -0.0083,-0.0207 -0.0124,-0.0351 -0.0021,-0.0165 -0.0021,-0.031 0,-0.06 0.08475,-0.062 0.05168,-0.002 0.105421,0.002 0.05374,0.002 0.08475,-0.004 0.107487,-0.0207 0.171566,-0.0165 0.06615,0.004 0.08475,0.0103 0.05168,0.0207 0.05581,0.11369 0.0021,0.0434 0.0021,0.091 0,0.0475 0.0041,0.0971 0.0083,0.10335 -0.07855,0.12196 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2209" /><path
         d="m 11.794177,120.47251 q 0.02274,-0.0207 0.03927,-0.0434 0.01654,-0.0248 0.04341,-0.0455 0.07235,-0.06 0.144694,-0.0351 0.08888,0.0331 0.163298,0.0413 0.07441,0.008 0.107487,0.0372 0.03514,0.0289 0.05994,0.062 0.05995,0.0785 0.07235,0.17156 0.0021,0.0351 0.0124,0.0496 0.02687,0.0455 0.01654,0.12196 -0.0083,0.0765 -0.0062,0.10748 0.0041,0.0289 0.01033,0.0434 0.0083,0.0145 0.01447,0.0289 0.01654,0.0393 0.01654,0.0785 0,0.0496 -0.03307,0.0992 -0.01447,0.0186 -0.01033,0.0724 0.0041,0.0537 0.0062,0.10748 0.0021,0.13436 -0.01447,0.16744 -0.01654,0.031 -0.0248,0.0372 -0.0062,0.006 -0.0124,0.0103 -0.03101,0.0145 -0.05581,0.0868 -0.02274,0.0703 -0.06201,0.11576 -0.03927,0.0434 -0.08268,0.0724 -0.04134,0.0269 -0.06615,0.0413 -0.02274,0.0165 -0.03307,0.031 -0.01034,0.0145 -0.02067,0.0289 -0.02687,0.0331 -0.06821,0.0331 -0.07028,0 -0.103353,-0.0331 -0.01447,-0.0186 -0.03101,-0.0537 -0.03101,-0.0558 -0.08268,-0.0909 -0.05788,-0.0393 -0.07028,-0.11782 -0.0062,-0.0269 -0.0041,-0.0537 0.0041,-0.0269 -0.0021,-0.0682 -0.0041,-0.0413 -0.01654,-0.0744 -0.0124,-0.0331 -0.01447,-0.062 -0.01034,-0.0868 -0.05788,-0.093 -0.03514,-0.004 -0.04134,-0.10542 -0.0021,-0.0517 0.0041,-0.0972 0.0062,-0.0475 0.01654,-0.0806 0.01654,-0.06 0.01034,-0.13849 -0.0062,-0.0806 0,-0.14263 0.01033,-0.11576 0.04961,-0.1881 0.0186,-0.031 0.05374,-0.062 0.03721,-0.031 0.07235,-0.0599 z m 0.130225,0.59118 q 0.0062,0.0289 0.02067,0.0475 0.01654,0.0165 0.02274,0.0537 0.0083,0.0372 0.0062,0.0827 -0.0021,0.0434 -0.0021,0.0847 0,0.0393 0.0041,0.0723 0.0041,0.031 0.0124,0.0579 0.02274,0.0641 0.06408,0.0641 0.06408,0 0.08888,-0.24805 0.0083,-0.0682 0.0083,-0.17363 0,-0.10749 -0.03307,-0.18397 -0.03307,-0.0785 -0.08061,-0.0785 -0.04548,0 -0.08268,0.10129 -0.03307,0.091 -0.02894,0.11989 z"
         style="font-family:Creepster;-inkscape-font-specification:Creepster"
         id="path2211" /></g><g
       id="g8083-6-6-9"
       transform="matrix(0.8676038,0,0,0.8676038,23.736422,3.3153835)"
       style="display:inline;fill:#cccccc;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:0;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers fill stroke"><g
         id="g10265"
         style="fill:#cccccc"><g
           aria-label="The"
           id="text2029-0-2-7"
           style="font-size:2.11667px;line-height:1.25"><path
             d="m -20.529768,3.1083628 q -0.0124,0 0.09095,0.038241 0.03927,0.015503 0.06925,0.014469 0.01757,0 0.05168,0.00413 0.03307,0.0031 0.05168,0.0031 0.02584,0 0.05994,-0.00517 0.01964,-0.0031 0.02584,0 0.0021,0.00103 0.0052,0.00517 0.0031,0.00413 0.0062,0.00517 0.0062,0.0031 0.0217,-0.0031 0.01344,-0.00517 0.0217,-0.00103 0.02274,0.011369 0.01757,0.011369 0.0052,0 0.01447,-0.00827 0.01034,-0.0093 0.01654,-0.010335 0.001,0.00103 0.03204,0.00517 0.01034,0.00103 0.01757,0.0062 0.0062,0.00103 0.0155,-0.00207 0.0124,-0.0031 0.01654,-0.00413 0.0072,-0.00103 0.0217,0 0.0155,0 0.02274,-0.00103 0.07751,-0.010335 0.117822,0.00207 0.02894,0.00827 0.04237,0.00517 0.03204,-0.00723 0.05788,-0.0062 0.0062,0.00103 0.02687,0.00517 0.0155,0.0031 0.02687,0.00103 0.02894,-0.00517 0.03411,-0.00413 0.0052,0.00207 0.01137,0.0062 0.0072,0.00517 0.01137,0.0062 0.02481,0.0062 0.05064,0.0062 0.03514,0 0.12299,-0.027905 0.04754,-0.015503 0.05788,-0.018604 0.03101,-0.010335 0.03411,-0.013436 0.0062,-0.0031 0.0124,-0.020671 0.0062,-0.01757 0.01137,-0.020671 -0.0021,0.025838 -0.0021,0.1085207 0,0.048576 -0.0062,0.059945 -0.01344,0.024805 -0.02377,0.059945 -0.0041,0.013436 -0.0021,0.027905 0.001,0.010335 0.0072,0.019637 -0.001,0.0031 -0.0031,0.0062 -0.0031,0.00207 -0.0041,0.00517 -0.0062,0.020671 -0.0083,0.032039 -0.001,0.0062 10e-4,0.021704 0.0021,0.013436 0,0.020671 -10e-4,0.0031 -0.0041,0.0093 -0.0031,0.00517 -0.0041,0.010335 -0.0021,0.012402 0.0072,0.039274 10e-4,0.00207 0.02274,0.090951 0.01344,0.050643 0,0.081649 -0.03514,-0.044442 -0.06925,-0.056844 -0.02481,-0.00827 -0.04031,-0.015503 -0.0041,-0.00103 -0.01137,-0.0031 -0.0093,-0.00207 -0.01344,-0.0031 -0.02481,-0.00517 -0.01757,-0.00517 -0.0072,-0.00103 -0.0155,0.00207 -0.0093,0.00207 -0.01344,0.00207 -0.0041,0 -0.0124,-0.00413 -0.0093,-0.0062 -0.0124,-0.0062 -0.0052,-0.00207 -0.02481,-0.00207 -0.06304,0.00103 -0.101286,0.00827 -0.001,0.011369 0.0072,0.032039 0.0083,0.022738 0.0083,0.033073 0,0.016536 -0.01447,0.028939 -0.01447,0.011369 -0.01654,0.016536 0.0072,0.00517 0.0155,0.01757 0.0083,0.014469 0.01344,0.019637 -0.001,0.0031 -0.01447,0.01757 -0.01034,0.012402 -0.0083,0.020671 0.001,0.00517 0.0124,0.015503 0.01137,0.010335 0.01344,0.015503 0.0041,0.00827 0,0.026872 -0.0021,0.00723 -0.0021,0.031006 v 0.1116213 q 0,0.029972 0,0.025838 0.001,0.0062 0.0041,0.019637 0.0041,0.013436 0.0052,0.019637 -0.001,-0.0062 -0.001,0.062012 0,0.00517 0.0083,0.05271 0.0124,0.066146 -0.02274,0.1105877 0.0041,0.0031 0.0031,0.031006 -0.0021,0.032039 0.0031,0.042375 0.02481,0.056844 0.0186,0.073381 -0.01964,0.051677 -0.0186,0.067179 0,0.00723 0.0083,0.022738 0.0083,0.015503 0.0083,0.040308 -10e-4,0.064079 0.03307,0.096118 0,0 0.04754,0.057878 0.02894,0.036174 0.06098,0.045475 -0.0072,-0.0031 -0.04134,-0.0093 -0.01964,-0.0031 -0.04341,0.00103 -0.02377,0.0031 -0.04341,-0.00103 -0.01137,-0.00207 -0.06615,-0.021704 -0.04651,-0.016536 -0.06718,-0.016536 h -0.02997 q 0,0 -0.02687,0.00517 -0.0083,0.00103 -0.07958,0.00103 h -0.120923 q -0.01964,0 -0.07648,0.012402 -0.0083,0.00103 -0.02791,0.00413 -0.01654,0.0031 -0.02687,0.00517 -0.04444,0.010335 -0.09819,0.03514 0,-0.00413 0.0217,-0.05271 0.0052,-0.011369 0.04134,-0.033073 0.03514,-0.022738 0.04134,-0.034107 0.0093,-0.01757 0.0093,-0.048576 10e-4,-0.031006 0.0093,-0.049609 0.02067,-0.043408 0.0217,-0.075448 0.001,-0.00827 0.0052,-0.031006 0.0041,-0.018604 0.0031,-0.031006 -0.001,-0.0062 -0.0052,-0.016536 -0.0031,-0.0093 -0.0031,-0.01757 v -0.086816 q 0,-0.0031 -0.0083,-0.041341 -0.001,-0.00517 0,-0.012402 0,-0.010335 0,-0.013436 0,-0.00517 -0.0021,-0.013436 -0.0031,-0.0093 -0.0041,-0.013436 -0.001,-0.00827 -0.001,-0.046509 0,-0.048576 -0.001,-0.047542 0.001,-0.0031 0.0041,-0.0062 0.0031,-0.0031 0.0052,-0.00723 0.0031,-0.010335 -10e-4,-0.025838 -0.01344,-0.073381 -0.01447,-0.073381 l 0.01344,-0.034107 q -0.0021,-0.00723 -0.0093,-0.019637 -0.0052,-0.0093 -0.0052,-0.019637 0,-0.0093 0.0031,-0.025838 0.0041,-0.018604 0.0052,-0.025838 0.0041,-0.040308 0.0052,-0.034107 -0.0041,-0.016536 -0.0052,-0.053744 -0.001,-0.0093 -0.0041,-0.026872 -0.0041,-0.01757 -0.0041,-0.026872 0,-0.021704 0,-0.019637 -10e-4,-0.0031 -0.0041,-0.0062 -0.0031,-0.00413 -0.0041,-0.0062 -0.0031,-0.0093 -0.001,-0.027905 0.001,-0.019637 -10e-4,-0.027905 -0.0052,-0.028939 -0.01344,-0.032039 0.0062,0.00207 -0.04754,0 0.0052,0 -0.04754,0.0062 -0.02687,0.00413 -0.06511,0.00723 -0.02377,0.00207 -0.04961,0.020671 -0.0083,0.00517 -0.02274,0.012402 -0.0155,0.00723 -0.02274,0.012402 -0.03307,0.020671 -0.03307,0.020671 -0.0041,0.0031 -0.01757,0.022738 -0.01137,0.015503 -0.01964,0.01757 -10e-4,-0.0062 0.0031,-0.016536 0.0031,-0.011369 0.0041,-0.015503 0.0052,-0.067179 0.0052,-0.068213 0.0031,-0.00827 0.0021,-0.025838 0,-0.01757 0.0021,-0.025838 0.0021,-0.00827 0.0124,-0.034106 0.01034,-0.026872 0.01034,-0.1260907 v -0.085783 q 0,-0.057878 -0.0021,-0.067179 -0.0021,-0.00827 -0.0041,-0.031006 -10e-4,-0.019637 -0.0041,-0.029972 -0.001,-0.00207 -0.03204,-0.040308 -0.0062,-0.00723 -0.03824,-0.040308 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6848" /><path
             d="m -18.702487,4.4777904 q 0.0093,0.036174 0.0083,0.051677 -0.001,0.00827 0.0186,0.041341 0.01034,0.018604 0.05788,0.037207 -0.02067,0.00207 -0.02791,0.00413 -0.0031,0 -0.01654,-0.00413 -0.0155,-0.0062 -0.0217,-0.00723 -0.0052,0 -0.01757,-0.00517 -0.01344,-0.0062 -0.02687,-0.0093 -0.0248,-0.00517 -0.124024,0.00723 -0.0052,0.00103 -0.0124,0.00413 -0.0093,0.0031 -0.01344,0.00413 -0.04651,0.0093 -0.06201,0.016536 -0.01137,0.00517 -0.03927,0.012402 -0.02584,0.00723 -0.03824,0.014469 -0.02584,0.012402 -0.06408,0.045475 -0.02894,0.023771 -0.05168,0.027905 -0.15503,0.025838 -0.143661,0.027905 -0.0072,-0.00103 -0.07545,-0.01757 -0.01654,-0.0031 -0.05788,-0.039274 -0.01964,-0.018604 -0.03204,-0.028939 0.139527,0.026872 0.249081,-0.041341 0.05478,-0.034107 0.08165,-0.073381 l 0.0062,-0.014469 q 0.0072,-0.016536 0.0093,-0.032039 0,-0.0062 0.0031,-0.015503 0.0041,-0.010335 0.0052,-0.015503 -10e-4,0.00517 -0.0093,-0.046509 -0.0041,-0.037207 0,-0.063045 0.001,-0.00413 0.0052,-0.018604 0.0031,-0.010335 0.0041,-0.018604 0,-0.0062 0,-0.016536 -10e-4,-0.012402 -10e-4,-0.01757 10e-4,-0.013436 -0.0031,-0.040308 -0.0041,-0.025838 -0.0041,-0.039274 0,-0.029972 10e-4,-0.037207 0.001,-0.0031 0.0041,-0.011369 0.0031,-0.0062 0.0041,-0.010335 0.01757,-0.00207 0.02067,-0.014469 -0.0041,0 -0.01034,0.00103 -0.0062,0.00207 -0.0093,0.00207 -0.0083,-0.00103 -0.01137,-0.014469 10e-4,0.0031 10e-4,-0.031006 0,-0.094051 -0.0021,-0.1023195 -0.001,-0.00517 -0.0062,-0.039274 -0.001,-0.00517 -0.0052,-0.018604 -0.0031,-0.011369 -0.0041,-0.018604 0,-0.00413 0,-0.015503 10e-4,-0.0093 -0.001,-0.015503 -0.001,-0.0031 -0.0052,-0.0093 -0.0052,-0.0062 -0.0062,-0.00827 0.01447,-0.011369 0.01137,-0.046509 -0.001,-0.019637 -0.01034,-0.032039 0.0041,-0.00207 0.0021,-0.0062 -0.0062,-0.00413 -0.0062,-0.073381 0,-0.060978 -0.0021,-0.068213 -0.0031,-0.014469 -0.01137,-0.036173 -0.01137,-0.028939 -0.01344,-0.036174 -10e-4,-0.00413 -0.0062,-0.015503 -0.0052,-0.010335 -0.0062,-0.015503 -0.0021,-0.0093 0.01447,-0.045475 0.0021,-0.0031 0.01964,-0.032039 0.0124,-0.020671 0.01447,-0.033073 0,-0.00413 -0.0093,-0.029972 -0.02791,-0.074414 -0.03307,-0.1054201 -0.0072,-0.037207 -0.0083,-0.077515 -0.001,-0.022738 -0.01964,-0.029972 -0.02067,-0.020671 -0.03824,-0.036174 -0.01757,-0.015503 -0.07752,-0.036173 0.06718,-0.022738 0.09302,-0.024805 0.02997,-0.0031 0.06408,0.010335 0.02584,0.010335 0.04961,0.018604 0.0062,0.00207 0.01447,0.0031 0.0083,0.00103 0.01344,0.00207 l 0.02584,0.00827 q 0.03411,0.0031 0.03101,0.00207 0.02377,0.0062 0.05788,0.0062 0.07855,0 0.09508,-0.0062 0.01034,-0.00413 0.05891,-0.015503 0.01447,-0.00413 0.04651,-0.00413 0.03101,0 0.04754,-0.00517 0.07441,-0.023771 0.07441,-0.023771 -0.0021,0.00517 -0.04754,0.094051 -0.0083,0.015503 -0.0072,0.045475 0.001,0.038241 -10e-4,0.047542 -0.0062,0.03514 -0.0062,0.055811 0,0.047542 10e-4,0.045475 l -0.01964,0.031006 q -0.0072,0.012402 0.0041,0.033073 0.02481,0.044442 0.02377,0.054777 -0.001,0.00827 -0.0093,0.019637 -0.0072,0.011369 -0.0083,0.021704 0.001,-0.010335 0,0.1064537 0,0.023771 0,0.022738 0.0021,0.00827 0.01654,0.010335 0.0062,0.00103 0.01964,0.00103 0.0124,-0.00103 0.01964,0.00103 0.0031,0 0.0072,0.00207 0.0031,0.00207 0.0093,0.00207 0.0021,-0.0062 0.0093,-0.00723 0.0072,-0.00103 0.01964,0.0062 0.01137,0.00517 0.02067,0.00207 0.0021,-0.010335 10e-4,-0.1126548 0,-0.015503 0.0041,-0.044442 0.0041,-0.029972 0.0041,-0.045475 -0.001,-0.059945 -0.01034,-0.097152 -0.0072,-0.026872 0.0062,-0.049609 0.01137,-0.020671 0.01034,-0.024805 0,-0.0031 -0.0062,-0.010335 -0.0062,-0.00723 -0.0062,-0.0093 -0.0031,-0.00723 -0.0021,-0.021704 0.001,-0.029972 0,-0.03204 -10e-4,-0.0031 -0.0041,-0.00723 -0.0031,-0.00517 -0.0041,-0.0093 0,-0.00413 0.001,-0.023771 -0.0021,-0.01447 -0.0072,-0.027905 -0.001,-0.00517 -0.01757,-0.020671 -0.01654,-0.015503 -0.01654,-0.020671 0.0186,-0.0031 0.08475,0.016536 0.0041,0.00207 0.02687,0.013436 0.01654,0.0093 0.02584,0.00827 0.04961,-0.00827 0.05271,-0.013436 -0.0041,-0.00207 0.02997,0.012402 0.02067,0.0093 0.04031,0 0.03204,-0.013436 0.08992,-0.013436 0.04341,0 0.04134,0.00103 0.0062,-0.00207 0.01757,-0.00723 0.0124,-0.00517 0.01757,-0.00723 0.03617,-0.023771 0.05168,-0.028939 0.01757,-0.0062 0.06408,0.00207 0.04134,0.00723 0.05891,0.041341 h -0.02584 q -0.0072,0 -0.0155,0.0093 -0.01137,0.012402 -0.01757,0.015503 -0.0072,0.00413 -0.01137,0.013436 -0.0041,0.011369 -0.01447,0.019637 -0.01344,0.011369 -0.01033,0.032039 0.001,0.043408 -0.01034,0.096118 0,0.00207 -0.0031,0.00723 -0.0031,0.0062 -0.0031,0.010335 -0.001,0.00413 0,0.022738 10e-4,0.019637 0.0021,0.023771 0.0052,0.00723 0.0072,0.015503 0,0.00517 -0.0041,0.012402 -0.0052,0.0093 -0.0052,0.012402 0,-0.00207 0,0.044442 v 0.054777 q 0,0.083716 -0.0021,0.086816 -0.0031,0.00517 -0.01447,0.0093 -0.01033,0.00413 -0.01447,0.0093 -0.0093,0.01447 -0.0021,0.053744 0.01033,0.048576 0.01447,0.060978 0.01034,0.026872 0.01034,0.040308 0,0.027905 0,0.023771 0,0.00413 -0.0031,0.0093 -0.0031,0.0062 -0.0031,0.00827 -0.0021,0.0093 0.0021,0.015503 0.0041,0.0093 0.0052,0.01447 0,0.00103 -0.0041,0.011369 -0.0052,0.010335 -0.0052,0.011369 -0.0041,0.018604 0,0.03204 0.0031,0.014469 0.01344,0.022738 -0.01137,0.00413 -0.0217,0.015503 -0.01137,0.013436 -0.0072,0.023771 0.0021,0.00207 0.0093,0.00723 0.0072,0.0031 0.0072,0.0093 0,0.00413 -0.0052,0.013436 -0.0062,0.0093 -0.0041,0.01757 10e-4,0.00413 0.0052,0.015503 0.0031,0.0093 0.0031,0.015503 0.001,0.0062 0,0.088884 0,0.015503 0.0041,0.041341 0.0031,0.028939 0.0041,0.041341 0,0.0093 -0.0021,0.054777 -0.001,0.036174 0.0021,0.054777 0.0186,0.089917 0.03514,0.1105877 0.06718,0.08475 0.120923,0.088884 0.03514,0.00207 0.05581,0.010335 -0.07958,0.038241 -0.112655,0.029972 -0.01447,-0.0031 -0.04031,-0.012402 -0.02171,-0.00827 -0.04134,-0.011369 -0.05891,-0.010335 -0.06615,-0.010335 -0.0124,0.00103 -0.02997,-0.0031 -0.0217,-0.00413 -0.02894,-0.00413 -0.0072,-0.00103 -0.02481,-0.00517 -0.01654,-0.0031 -0.02584,-0.0031 -0.0031,-0.00103 -0.02997,0.0062 -0.01447,0.0031 -0.04444,0.00103 -0.03204,-0.0031 -0.04547,0 -0.0124,0.0031 -0.02377,0.010335 -0.0124,0.0093 -0.0248,0.012402 -0.01034,0.0031 -0.02791,0.0093 -0.02067,0.00827 -0.02791,0.010335 -0.01964,0.00723 -0.03927,0.0031 -0.02067,-0.00827 -0.02894,-0.010335 -0.02067,-0.00723 -0.02481,-0.011369 -0.0083,-0.0062 -0.01757,-0.018604 l -0.0052,-0.023771 q 0.0217,0.018604 0.03721,0.013436 0.0155,-0.00517 0.01964,-0.014469 0.0041,-0.0093 0,-0.050643 0,-0.010335 -0.0041,-0.03514 -0.0041,-0.022738 -0.0041,-0.03514 10e-4,-0.071314 0,-0.08785 -0.0021,-0.063045 0.0021,-0.069247 0.01447,-0.022738 0.0124,-0.031006 -0.001,-0.00723 -0.0062,-0.023771 -0.01344,-0.048576 -0.01447,-0.057878 -0.0031,-0.036174 0.02067,-0.053744 -0.001,-0.00827 -0.01344,-0.013436 -0.01137,-0.00413 -0.01034,-0.016536 10e-4,-0.00413 0.0052,-0.00723 0.0041,-0.00413 0.0041,-0.00723 0.0021,-0.00827 -0.0021,-0.022738 -0.0041,-0.014469 -0.01137,-0.015503 -0.0021,0 -0.02067,0.00413 -0.0062,0.00103 -0.05581,-0.00413 -0.0155,-0.00207 -0.01757,0.010335 0.001,-0.0062 0.001,0.026872 0,0.040308 0,0.047542 0,0.00827 -0.0041,0.023771 -0.0031,0.015503 -0.0041,0.022738 0,0.00517 0.001,0.023771 0.0021,0.015503 0,0.023771 -0.0072,0.026872 -0.0072,0.021704 0,0 0.0021,0.0062 0.0031,0.0062 0.0031,0.0093 0,0.00207 -0.0031,0.00723 -0.0031,0.00517 -0.0021,0.010335 0,0.00207 0.0062,0.023771 0.01033,0.031006 0.0083,0.039274 0,0 -0.0093,0.037207 -0.0072,0.025838 -0.0072,0.032039 0.001,0.015503 0.0083,0.050643 0.0031,0.010335 0.0052,0.033073 0.0031,0.022738 0.0052,0.033073 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6850" /><path
             d="m -18.01829,3.2912977 q 0.0186,-0.00103 0.06821,0.01757 0.05168,0.019637 0.06718,0.020671 0.0186,0.00103 0.05374,0.00103 0.03617,0 0.05271,0.00103 0.0031,0.00827 0.01344,0.00517 0.01344,-0.00413 0.02584,-0.010335 0.02894,-0.010335 0.05374,-0.0062 0.0072,0.00103 0.01757,0.00413 0.01137,0.00413 0.01757,0.00517 -0.001,0 0.07338,0 h 0.05684 q 0.01137,0 0.02481,-0.00103 0.0041,0.00103 0.01033,0.00413 0.0072,0.0031 0.0093,0.0031 0.01654,0.00413 0.04237,0.00207 0.0124,0.00103 0.02377,-0.00207 0.0031,0 0.03514,-0.00207 0.02377,-0.00103 0.03411,-0.00413 0.03617,-0.012402 0.06408,-0.025838 0.144694,-0.07028 0.147795,-0.072347 -0.0155,0.010335 -0.03101,0.075448 -0.0052,0.018604 -0.0072,0.054777 -0.0021,0.036174 -0.0062,0.053744 -0.02377,0.1002524 -0.03411,0.1302248 -0.0248,0.073381 -0.01757,0.2625167 -0.01034,-0.028939 -0.07958,-0.056844 -0.04134,-0.016536 -0.04961,-0.01757 -0.01757,-0.0031 -0.02481,-0.00207 -0.0052,0.00103 -0.01137,0.0031 -0.0062,0.0031 -0.0083,0.00413 -0.01034,0.00207 -0.07131,0.00207 -0.05064,0 -0.05271,0.00103 -0.001,0.00103 -0.001,0.067179 0,0.043408 -10e-4,0.050643 0.0083,-0.00827 0.07441,-0.025838 0.02584,-0.0062 0.06925,0.00517 0.03824,0.0093 0.05581,0.00517 0.04341,-0.012402 0.05995,-0.042375 -0.0052,-0.013436 -0.0052,0.1374595 0,0.083716 -10e-4,0.080615 0.0031,0.013436 0.0083,0.046509 0.0052,0.028939 0.0093,0.045475 0.001,0.0093 0.0072,0.026872 0.0062,0.018604 0.0083,0.025838 10e-4,0.0031 -0.001,0.016536 -0.0021,0.012402 0.001,0.015503 -0.0041,-0.00827 -0.05581,-0.036174 -0.03824,-0.021704 -0.05788,-0.018604 -0.0083,0.00207 -0.0186,0.0093 -0.01034,0.00827 -0.01654,0.0093 10e-4,0 -0.05684,0 h -0.06201 q -0.01964,0 -0.02377,0.00413 -0.0041,0.00413 -0.001,0.023771 -10e-4,-0.010335 0.0072,0.1043866 0,0.00517 0.0062,0.021704 0.0052,0.015503 0.0041,0.021704 10e-4,-0.00517 -0.0093,0.014469 0.0052,0.0031 0.04651,-0.00517 0.01344,-0.0031 0.02584,-0.00207 0.0041,0.00103 0.01344,0.0093 0.0093,0.00723 0.01344,0.00723 0.0052,0.00103 0.0155,-0.0062 0.01033,-0.00827 0.01757,-0.00827 0.0031,0.0062 0.01137,0.00723 0.01447,0.0031 0.02894,0 0.02481,-0.00413 0.06201,-0.015503 0.05271,-0.015503 0.06098,-0.01757 0.02997,-0.00827 0.04754,-0.025838 0.0031,-0.00413 0.01137,-0.018603 0.0072,-0.011369 0.01344,-0.016536 0.0031,0.0093 -0.0052,0.062012 -0.0031,0.018604 -0.0021,0.1250571 0,0.028939 -0.01654,0.062012 -0.0031,0.014469 -0.01034,0.028939 -0.0021,0.00517 -0.0052,0.01757 -0.0021,0.013436 -0.0041,0.01757 0,0.00103 -0.0155,0.018604 -0.0093,0.011369 -0.001,0.023771 0.0083,0.00207 0.01447,0.0093 0.0031,0.00413 0.0031,0.012402 -0.001,0.010335 0,0.013436 0.0031,0.00827 0.01447,0.031006 0.01034,0.018604 0.0124,0.031006 0.0021,0.018604 0.0062,0.034107 -0.01447,-0.00517 -0.04754,-0.018604 -0.03307,-0.012402 -0.04961,-0.01757 0.01034,0.0031 -0.04547,-0.0062 -0.0083,-0.00103 -0.02274,-0.00723 -0.0155,-0.00723 -0.0217,-0.0093 -0.07131,-0.016536 -0.110588,-0.00413 -0.03617,0.011369 -0.07131,0.011369 -0.0072,0 -0.01757,0 -0.0021,0 -0.01137,-0.00413 -0.0093,-0.0031 -0.0083,-0.0031 -0.0083,0 -0.02274,0.0093 -0.01344,0.00827 -0.02067,0.00827 -0.01137,0 -0.01654,-0.010335 -0.01344,-0.00827 -0.01964,-0.0093 -0.02687,-0.0031 -0.101286,0.010335 -0.02171,0.0031 -0.07131,-0.00207 -0.04651,-0.00517 -0.07028,0.00103 -0.0062,0.00103 -0.02067,0.00723 -0.01447,0.0062 -0.02274,0.00827 -0.001,0 -0.04031,0.015503 -0.03721,0.013436 -0.08268,0.020671 0.05168,-0.048576 0.05891,-0.068213 0.0031,-0.010335 0.0186,-0.016536 0.01447,-0.0062 0.01757,-0.016536 0.03101,-0.1136883 0.03307,-0.1250571 0.0021,-0.00827 0.01137,-0.043408 0.0072,-0.025838 0.0072,-0.043408 10e-4,-0.016536 -0.0041,-0.044442 -0.0041,-0.028939 -0.0041,-0.043408 0,-0.1415937 0,-0.1591637 -10e-4,-0.015503 -0.0052,-0.047542 -0.0041,-0.029972 -0.0041,-0.046509 0,-0.045475 0,-0.045475 0.001,-0.0062 0.0041,-0.016536 0.0041,-0.010335 0.0052,-0.01757 0.0021,-0.013436 -0.0041,-0.039274 -0.0062,-0.024805 -0.0031,-0.037207 0.0052,-0.032039 0.0041,-0.03514 -0.0021,-0.0093 -0.0062,-0.022738 -0.0052,-0.016536 -0.0072,-0.022738 -0.0021,-0.00723 -0.0021,-0.08785 V 3.6551003 q 0,-0.1343589 -0.0083,-0.1850019 -0.0021,-0.0093 -0.03307,-0.018603 -0.02997,-0.0093 -0.03101,-0.018604 -0.001,-0.012402 -0.0072,-0.029972 -0.0072,-0.021704 -0.0093,-0.029972 -0.001,-0.00517 -0.001,-0.018604 0,-0.011369 -0.0021,-0.01757 -0.01447,-0.042375 -0.04444,-0.048576 0.05168,0.010335 0.05478,0.0031 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6852" /></g><g
           aria-label="Count"
           id="text3835-2-1-5-6"
           style="font-size:3.52778px;line-height:1.25"><path
             d="m -21.653158,6.1272377 q -0.127469,-0.048231 -0.26355,-0.058567 -0.156752,-0.012058 -0.406522,0.07407 -0.194648,0.063734 -0.339342,0.00517 l 0.06029,-0.020671 q 0.02928,-0.00517 0.04306,-0.037896 0.0017,-0.00689 0.01378,-0.044786 0.0034,-0.00689 0.0086,-0.00172 0.0034,0.00517 0.0034,-0.00172 -0.0017,-0.01378 -0.0069,-0.036174 -0.0086,-0.025838 -0.0086,-0.036174 -0.0069,-0.032728 0.01206,-0.08096 0.01723,-0.039619 0.0086,-0.062012 -0.0017,-0.00345 -0.0052,-0.010335 -0.0052,-0.00689 -0.0069,-0.010335 -0.0069,-0.01378 0.0052,-0.018948 -0.0086,-0.015503 -0.0086,-0.063734 0,-0.00172 -0.0052,-0.029283 -0.0052,-0.00689 -0.0034,-0.01378 -0.0069,-0.024116 -0.0052,-0.015503 -0.01378,-0.056844 -0.0534,-0.065457 -0.0052,0 -0.02928,0 -0.02412,0.00172 -0.02928,0 -0.01034,0 -0.01034,0.010335 0,0.00689 -0.0086,0.00517 -0.03962,-0.010335 -0.05512,0.00861 -0.01034,0.012058 -0.01034,0.070625 0,0.00689 0.0017,0.020671 0.0034,0.015503 0.0034,0.022393 0.0017,0.00861 -0.01206,0.029283 -0.0017,0.00172 -0.01206,0.010335 -0.0086,0.00861 -0.0086,0.012058 0.0017,0.00517 0.0086,0.00861 0,0.00517 0.0017,0.01378 0,0.010335 0.0017,0.015503 0.0034,0.022393 0.0052,0.084405 0.0017,0.015503 0.01206,0.034451 0.0052,0.010335 0.0052,0.031006 0,0.08096 -0.0069,0.099908 -0.0086,0.018948 -0.01034,0.031006 0,-0.012058 0.01034,0.041341 0.0069,0.055122 0.0069,0.2239314 v 0.072347 q 0,0.043064 -0.02239,0.056844 0.04134,0.046509 0.0069,0.068902 0,-0.00172 0.01895,0.027561 0.01206,0.020671 0.0086,0.031006 -0.03101,0.060289 -0.02584,0.08096 0,0.00861 0.0069,0.022393 0.0069,0.015503 0.0069,0.022393 0,-0.00345 0,0.058567 0,0.049954 0,0.037896 0,0.00861 -0.0034,0.020671 -0.0034,0.01378 -0.0052,0.020671 0.0017,-0.00517 0.0017,0.072347 0,0.00517 0.0017,0.017225 0.0017,0.010335 0.0017,0.017225 -0.0017,0.00172 -0.0052,0.00861 -0.0017,0.015503 0.0017,0.031006 0.01034,0.053399 0.04134,0.062012 0.0069,0.00172 0.02067,0 0.0155,0 0.02239,0 0.02756,0.00517 0.03273,0.00345 0.0069,-0.00172 0.01722,-0.00861 0.01206,-0.00861 0.0155,-0.010335 0.03617,-0.020671 0.05168,-0.041341 -0.0069,0.00861 -0.0086,-0.072347 -0.0052,-0.2049834 -0.0086,-0.2170412 -0.0086,-0.037896 0.0034,-0.068902 0.0069,-0.00345 0.0069,-0.00861 -0.0017,0.00172 -0.0069,-0.017225 -0.0034,-0.00689 -0.0052,-0.00689 -0.0017,0.00172 -0.0034,-0.00689 -0.0069,-0.020671 0.0052,-0.058567 0.0086,-0.017225 -0.05857,-0.1205785 0.177423,-0.029283 0.244602,-0.00861 0.142972,0.044786 0.222209,0.032728 -0.01206,0.00345 0.07407,-0.024116 0.02928,-0.010335 0.09819,-0.025838 0.08441,-0.017226 0.148139,-0.00861 0.09474,0.018948 0.09302,0.018948 -0.04823,0.1119657 -0.04306,0.09474 -0.0034,0.01378 0,0.025838 0.0034,0.010335 -0.0017,0.024116 -0.0017,0.00861 -0.0052,0.027561 -0.0034,0.018948 -0.0069,0.029283 -0.0052,0.020671 -0.02239,0.037896 0.02239,0.01378 0.03617,0.015503 -0.0017,0.00689 -0.0155,0.018948 -0.02928,0.036173 -0.02412,0.032728 0.01895,0.022393 0.0155,0.070625 0,0.017225 -0.0017,0.091295 0,0.055122 -0.0069,0.08785 -0.0155,0.068902 -0.0086,0.093018 0.01034,0.037896 0.0069,0.049954 0,-0.00345 -0.01722,0.031006 -0.0086,0.017226 -0.01378,0.022393 0.0052,-0.00689 -0.02067,0.017225 -0.02412,0.027561 -0.01723,0.022393 0,0.00172 -0.03962,0.031006 -0.0086,0.00861 -0.02756,0.031006 -0.01723,0.018948 -0.02928,0.029283 -0.06373,0.055121 -0.05857,0.055121 -0.0069,-0.010335 -0.0155,-0.00172 -0.01723,0.017226 -0.01206,0.015503 -0.0017,0 -0.01034,0.00345 -0.0069,0.00172 -0.0086,0.00345 -0.0086,0.00861 -0.01723,0.022393 -0.02584,0.037896 -0.06718,0.062012 -0.01034,0.00689 -0.01895,0.018948 -0.01206,0.015503 -0.0155,0.018948 -0.0052,0.00517 -0.03962,0.024116 -0.07062,0.053399 -0.08613,0.056844 -0.0069,0.00172 -0.02928,0 -0.02239,-0.00172 -0.02756,0 -0.0069,0 -0.03617,0 -0.02584,-0.00172 -0.03445,0 -0.03101,0.00345 -0.04134,0.00172 -0.0155,-0.00172 -0.04306,-0.00172 -0.01378,0 -0.04479,-0.00345 -0.02928,-0.00517 -0.04479,-0.00517 -0.09819,0 -0.106798,0 0.0017,0 -0.04134,-0.00689 h -0.04134 q -0.07751,0.00689 -0.06546,0.00689 h -0.05168 q -0.01895,0 -0.03273,-0.017226 -0.03962,0.017226 -0.0379,0.017226 -0.0034,0.00172 -0.03962,-0.00689 -0.0017,0 -0.03617,0.00689 -0.0086,0.00172 -0.02928,0.00345 -0.01895,0.00172 -0.02928,0.00345 -0.02756,0.00517 -0.03101,-0.00345 0,-0.00172 -0.0017,-0.012058 0,-0.010335 -0.0017,-0.017225 -0.0052,0 -0.01378,-0.00345 -0.0017,-0.018948 -0.02756,-0.048231 -0.01034,-0.01378 -0.03445,-0.027561 -0.03101,-0.018948 -0.0379,-0.025838 -0.0086,-0.00345 -0.01723,-0.015503 -0.01034,-0.01378 -0.01378,-0.017226 -0.0086,-0.010335 -0.02928,-0.031006 -0.02756,-0.031006 -0.06201,-0.063734 -0.04651,-0.039619 -0.0689,-0.082682 l -0.02412,-0.043064 q -0.0017,-0.00345 0,-0.039619 0,-0.00861 0.02756,-0.1050755 -0.0017,0.00861 -0.01206,-0.070625 -0.0069,-0.029283 -0.0069,-0.041341 0.0017,-0.027561 0,-0.031006 0,-0.00345 -0.0069,-0.015503 -0.0069,-0.012058 -0.0086,-0.018948 -0.0034,-0.015503 0,-0.051677 0.0034,-0.032728 -0.0017,-0.048231 -0.0069,-0.018948 -0.0069,-0.020671 0,-0.00861 0.01378,-0.044786 0.0086,-0.027561 0.01722,-0.079237 0.0017,-0.00689 0.0017,-0.025838 0,-0.017226 0.0017,-0.027561 0.0052,-0.025838 0.0052,-0.070625 0,-0.058567 0,-0.062012 -0.0017,-0.00517 -0.0086,-0.027561 -0.0034,-0.00689 -0.0034,-0.020671 -0.0017,-0.01378 -0.0034,-0.018948 -0.0155,-0.048231 -0.0069,-0.063734 0.0069,-0.00861 0.01378,-0.015503 0.0017,-0.00517 0.0034,-0.015503 0.0017,-0.00345 0.01206,-0.015503 0.0086,-0.010335 0.01033,-0.018948 -0.0069,-0.00172 -0.02239,0.00172 -0.01378,0.00517 -0.02067,-0.00172 0.0017,-0.00861 0.01895,-0.031006 0.01378,-0.018948 0.0069,-0.034451 -0.0052,-0.00172 -0.0069,0.00345 0,-0.00861 -0.0069,-0.025838 -0.01034,-0.020671 -0.01034,-0.027561 0,0.00172 -0.0155,-0.1240235 -0.01895,-0.099908 -0.01895,-0.1136882 0,-0.012058 0.0052,-0.034451 0.0052,-0.020671 0.0052,-0.032728 0,-0.032728 0.0069,-0.089573 0.0069,-0.063734 0.0086,-0.089573 0,-0.010335 0.0034,-0.027561 0.0052,-0.017225 0.0052,-0.025838 0.0017,-0.034451 0.0017,-0.034451 0,0.00345 0.0069,-0.063734 0.0017,-0.012058 0.0052,-0.039619 0.0034,-0.024116 0.0034,-0.039619 V 5.396877 q 0,-0.065457 0.02756,-0.1136882 0.0034,-0.00861 0.01378,-0.022393 0.01206,-0.015503 0.0155,-0.022393 0.0069,-0.00861 0.01378,-0.027561 0.01034,-0.020671 0.01378,-0.029283 0.0069,-0.012058 0.02067,-0.031006 0.0155,-0.022393 0.02067,-0.032728 0.02067,-0.029283 0.04306,-0.031006 -0.0069,0 0.06718,0.041341 0,-0.00172 -0.0052,-0.031006 -0.0052,-0.018948 0.01206,-0.018948 0.0017,-0.010335 0.0155,-0.020671 0.01722,-0.015503 0.02067,-0.018948 0.02584,-0.043064 0.04134,-0.053399 -0.0052,0.00345 0.06201,-0.027561 0.01723,-0.00861 0.06546,-0.025838 0.04134,-0.015503 0.06546,-0.027561 0.05684,-0.024116 0.06201,-0.025838 0.0086,0 0.01895,-0.00172 0.01206,0 0.01722,0 0.03101,-0.00517 0.05168,-0.00517 0.0086,0 0.0155,-0.00345 0.01033,-0.00345 0.01722,-0.00517 -0.0017,0.00172 0.09474,0.00172 0.07579,0 0.09991,0.00689 0.0155,0.00345 0.06201,-0.00172 0.04651,-0.00345 0.06373,0.00172 0.01034,0.00172 0.02067,0.025838 0.0086,0.024116 0.02067,0.024116 0.0155,0 0.02239,-0.01378 0.0052,-0.01378 0.02239,-0.015503 0.02067,-0.00172 0.03101,-0.012058 0.01033,-0.00861 0.03445,-0.00861 0.10163,0 0.144694,0.043064 0.0052,0.00517 0.03101,0.017225 0.02411,0.012058 0.02756,0.017226 0.01206,0.010335 0.03445,0.032728 0.02412,0.022393 0.03445,0.032729 0.01895,0.017225 0.05168,0.036174 0.0069,0.00517 0.0155,0.020671 0.0052,0.012058 0.0052,0.034451 0,0.020671 0.0034,0.031006 0.0017,0 0.05684,-0.025838 0.03273,0.022393 0.03617,0.055122 0,0.00345 0.01723,0.043064 0,0.00689 -0.01723,0.022393 -0.01895,0.015503 -0.0155,0.020671 0.02412,0 0.08957,0.053399 0.0034,0.00345 0.01034,0.012058 0.0017,0.00345 0.0069,0.010335 0.0069,0.00861 0.0069,0.012058 0.01034,0.01378 0.01206,0.043064 0,0.018948 0.0086,0.056844 0.0069,0.037896 0.0086,0.056844 -0.0017,-0.01378 -0.0155,0.079237 -0.0052,0.022393 0.02584,0.1533068 0.01378,0.063734 0.01378,0.072347 v 0.044786 q 0,0.01378 0,0.043064 0.0017,0.029283 0.0017,0.043064 0.0017,0.086127 0.08441,0.194648 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6819" /><path
             d="m -20.869398,5.5639642 q 0,0.00345 -0.02412,0.051677 -0.01378,0.027561 -0.0034,0.063734 0.0034,0.010335 0.0069,0.031006 0.0017,0.020671 0.0052,0.031006 0.0034,0.012058 0.0034,0.037896 -0.0017,0.024116 0.0034,0.037896 0.02067,0.068902 0.02067,0.1136882 v 0.2738853 q 0,0.022393 -0.01206,0.072347 -0.0069,0.024116 0.0052,0.068902 0.01206,0.044786 0.0034,0.067179 -0.0017,0.00689 -0.01033,0.025838 -0.0086,0.015503 -0.01034,0.027561 -0.0017,0.00689 -0.0069,0.024116 -0.0052,0.017225 -0.0052,0.025838 -0.0017,0.00345 0,0.017225 0.0017,0.010335 0,0.017225 0,0.00517 -0.0052,0.010335 -0.0069,0.00517 -0.0069,0.00861 -0.0086,0.027561 0.01723,0.053399 0.03101,0.029283 0.03101,0.053399 -0.0034,0.2549372 0,0.3031686 0.0069,0.106798 0.07062,0.1154108 0.07235,0.012058 0.07235,-0.062012 V 6.8851592 q 0,-0.062012 0.0034,-0.07407 0.0034,-0.017225 0.0155,-0.056844 0.01206,-0.037896 0.01378,-0.058567 0,0.00172 -0.0086,-0.060289 -0.01034,-0.075792 0.0086,-0.096463 0,0 0.03101,-0.015503 0.01378,-0.00689 -0.0034,-0.024116 -0.0069,-0.00517 -0.02239,-0.012058 -0.0155,-0.00517 -0.02239,-0.010335 0.0086,-0.00172 0.02756,-0.01378 0.0155,-0.00861 0.02756,-0.010335 -0.0017,-0.010335 -0.02239,-0.015503 -0.02067,-0.00345 -0.02411,-0.012058 0,0.00172 0,-0.09474 V 6.1169024 q 0,-0.039619 -0.0086,-0.070625 -0.0069,-0.018948 0.0069,-0.070625 0.0017,-0.010335 0,-0.029283 -0.0017,-0.01378 0.0034,-0.025838 0.0034,-0.00689 0.01723,-0.018948 0.01378,-0.012058 0.0155,-0.020671 -0.05512,-0.027561 -0.05684,-0.043064 0.0017,0.00517 0.01033,-0.034451 0,-0.00689 0,-0.018948 0,-0.01378 0,-0.018948 0,-0.017226 -0.0155,-0.044786 -0.0069,-0.015503 -0.01378,-0.039619 -0.0069,-0.034451 -0.0086,-0.041341 -0.01206,-0.032728 -0.01033,-0.022393 -0.0017,-0.00517 -0.0017,-0.015503 0.0017,-0.012058 0,-0.017226 -0.01033,-0.046509 -0.03273,-0.053399 -0.02928,-0.00861 -0.0534,0.00689 -0.04134,0.025838 -0.04306,0.025838 z m 1.004246,1.1885588 q -0.0017,0.00861 -0.0034,0.068902 -0.0017,0.053399 -0.0086,0.067179 -0.0086,0.017226 0.0034,0.079237 0.0086,0.060289 -0.0052,0.086127 -0.0086,0.012058 -0.02067,0.022393 -0.0034,0.010335 -0.0017,0.022393 -0.0034,0.01378 -0.01378,0.027561 -0.02239,0.029283 -0.05684,0.048231 -0.0052,0.00345 -0.02412,0.00861 -0.01722,0.00689 -0.02412,0.010335 -0.0155,0.012058 -0.01206,0.034451 0.0034,0.025838 -0.0034,0.034451 l -0.02067,0.00345 q -0.0155,0.015503 -0.02067,0.020671 -0.02067,0.017226 -0.02756,0.022393 -0.01206,0.012058 -0.03617,0.031006 -0.02584,0.020671 -0.03617,0.029283 -0.0052,0.00517 -0.02239,0.01378 -0.01378,0.00861 -0.02067,0.015503 -0.0034,0.00345 -0.01723,0.034451 -0.01034,0.022393 -0.05512,0.068902 -0.07579,0.08096 -0.191203,0.086127 -0.02928,0.00172 -0.111966,-0.012058 -0.09129,-0.015503 -0.215319,-0.018948 -0.0379,0 -0.04995,-0.00689 -0.04306,-0.025838 -0.03445,-0.025838 -0.0155,0 -0.02411,0.01378 -0.01034,0.015503 -0.0155,0.017226 -0.0034,0.00172 -0.02928,-0.00689 0.0052,-0.00689 -0.07407,0.012058 -0.0034,0 -0.01206,0.00345 -0.0086,0.00345 -0.01378,0.00517 -0.04134,-0.00172 -0.04651,0 -0.108521,0 -0.139527,-0.029283 -0.01722,-0.015503 -0.0534,-0.046509 -0.03445,-0.029283 -0.0534,-0.046509 -0.01722,-0.015503 -0.03617,-0.044786 -0.02412,-0.036174 -0.03273,-0.046509 -0.0069,-0.00861 -0.02756,-0.022393 -0.02067,-0.015503 -0.02756,-0.024116 -0.0069,-0.00689 -0.02239,-0.024116 -0.0155,-0.015503 -0.02239,-0.022393 -0.0069,-0.00689 -0.02756,-0.024116 -0.01723,-0.01378 -0.02412,-0.025838 -0.0086,-0.010335 -0.02067,-0.053399 -0.0017,-0.00345 -0.0069,-0.010335 -0.0052,-0.00517 -0.0069,-0.010335 -0.0017,-0.00689 0,-0.020671 0,-0.01378 -0.0017,-0.020671 -0.0086,-0.025838 -0.0069,-0.034451 0.0069,-0.02067 0.01034,-0.046509 0.0017,-0.034451 -0.0034,-0.056844 -0.01034,-0.044786 -0.01723,-0.048231 0.01723,-0.022393 0.02067,-0.1050754 V 6.771471 q -0.0017,-0.00861 -0.01034,-0.010335 -0.0017,-0.00861 -0.0034,-0.024116 0,-0.015503 -0.0017,-0.024116 -0.0086,-0.036174 -0.01034,-0.032728 0.0017,-0.012058 0.01034,-0.018948 0.01033,-0.00861 0.01206,-0.015503 0.0017,-0.00172 -0.01895,-0.031006 -0.02928,-0.039619 -0.01723,-0.091295 0.01033,-0.044786 -0.0069,-0.122301 -0.0052,-0.024116 0.01206,-0.070625 0.0052,-0.010335 0.0069,-0.027561 0.0034,-0.020671 0.0052,-0.029283 0,-0.00345 0.0052,-0.00861 0.0052,-0.00517 0.0052,-0.01378 -0.0034,-0.010335 -0.01034,-0.024116 -0.0052,-0.012058 -0.0017,-0.037896 0.0017,-0.025838 -0.0069,-0.07407 -0.0086,-0.049954 -0.0069,-0.07407 0.0017,-0.01378 0.02411,-0.051677 0.01895,-0.034451 0.01378,-0.051676 -0.0017,-0.00861 -0.01206,-0.024116 -0.0086,-0.015503 -0.01034,-0.025838 -0.0034,-0.012058 0.0069,-0.051676 0.0017,-0.010335 0.0017,-0.1102432 0,-0.082682 -0.0017,-0.093018 -0.01034,-0.034451 -0.01034,-0.049954 0.0017,-0.063734 0,-0.053399 0.0017,-0.00861 0.01034,-0.020671 -0.0034,0.01378 -0.01034,-0.060289 -0.0034,-0.044786 0.0017,-0.051677 0.04134,-0.056844 0.05168,-0.060289 0.01034,-0.00517 0.03445,0 0.02412,0.00689 0.03273,0.00517 0.0017,0 0.02584,0.00172 0.01378,0 0.01206,-0.012058 0.0017,-0.00172 0.0086,-0.010335 0.0086,-0.00861 0.01206,-0.01378 0.01722,-0.015503 0.02756,0 0.0017,-0.015503 -0.01206,-0.036174 -0.01378,-0.022393 -0.01378,-0.034451 0,0 0.01723,-0.031006 0.0017,-0.00345 0.0052,-0.015503 0.0017,-0.010335 0.0052,-0.015503 0.0069,-0.012058 0.03962,-0.027561 0.04134,-0.020671 0.04651,-0.024116 0.03273,-0.024116 0.0689,-0.039619 0.05857,-0.024116 0.158475,-0.024116 0.06029,0 0.07579,0.00345 0.03962,0.00689 0.07062,0 -0.01034,0.00172 0.08441,0.00861 0.02412,0.00172 0.05512,-0.00861 0.04134,-0.012058 0.05512,-0.01378 0.0034,0 0.01723,0.00172 0.01206,0.00172 0.01895,0 0.0052,-0.00172 0.01033,-0.00689 0.0052,-0.00689 0.0086,-0.00861 0.01378,-0.00517 0.0379,0.00172 0.02412,0.00689 0.03617,0 0.0086,-0.00345 0.0155,-0.00861 0.0069,-0.00689 0.0069,-0.00689 0.0069,-0.00345 0.02928,0.00689 0.07235,0.031006 0.120579,0.022393 0.01378,-0.00345 0.06546,-0.020671 0.0379,-0.01378 0.0689,-0.012058 0.03101,0.00172 0.07235,0.017225 0.0155,0.00689 0.03101,0.022393 0.02239,0.020671 0.02928,0.025838 0.02928,0.018948 0.08785,0.08785 0.02067,0.025838 0.02067,0.025838 -0.0052,-0.00517 0.03617,0.012058 -0.01206,-0.00517 0.06373,0.036174 0.04306,0.022393 0.08096,0.09474 0.0017,0.00345 0.01378,0.044786 0.0017,0.00689 0.01034,0.024116 0.0086,0.017226 0.01206,0.025838 -0.0017,-0.00861 -0.01034,0.079237 -0.0017,0.00689 0.0017,0.025838 0.0017,0.015503 -0.0017,0.024116 0,0.00689 -0.0069,0.015503 -0.0052,0.00861 -0.0069,0.01378 -0.0052,0.027561 0,0.099908 0.0017,0.010335 0.0086,0.037896 0.0052,0.024116 0.0052,0.039619 0,0.051677 -0.0017,0.060289 -0.0017,0.00345 -0.0052,0.010335 -0.0052,0.00689 -0.0069,0.012058 -0.0017,0.01378 0.01033,0.043064 0.01034,0.022393 0.02756,0.032728 -0.0017,0.012058 -0.02412,0.018948 -0.02239,0.00517 -0.02239,0.018948 0,0 0.01033,0.010335 0.0086,0.010335 0.01034,0.012058 0.0034,0.010335 0.0017,0.020671 0.0017,0.017225 -0.0069,0.058567 -0.0086,0.036173 -0.0052,0.056844 0.0017,0.00861 0.0069,0.020671 0.0052,0.01378 0.0052,0.020671 0,0.00172 -0.01378,0.053399 0.0017,-0.00517 0.0017,0.051676 0,0.051677 -0.0086,0.084405 -0.0052,0.012058 -0.0034,0.048231 0,0.017226 0.01206,0.044786 0.01206,0.024116 0.01206,0.043064 0,0.024116 0.01034,0.1378039 0.0017,0.015503 0.0086,0.056844 0.0069,0.034451 0.0052,0.055122 0,0.01378 -0.0052,0.036174 -0.0069,0.024116 -0.0069,0.036174 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6821" /><path
             d="m -17.915227,5.007581 q 0.0034,0.00689 -0.0155,0.039619 -0.0017,0.00689 -0.0086,0.020671 -0.0052,0.015503 -0.0086,0.022393 -0.01206,0.025838 -0.02928,0.056844 -0.0017,0.00689 -0.02239,0.032728 -0.0155,0.022393 -0.01895,0.034451 -0.0069,0.017226 -0.0052,0.051677 0.0034,0.037896 0,0.051677 -0.0052,0.02067 -0.01033,0.056844 -0.0052,0.037896 -0.0086,0.056844 -0.0052,0.031006 0,0.055122 0.0086,0.037896 0.0086,0.091295 0,0.034451 0.0017,0.031006 0,0.010335 -0.01206,0.012058 -0.01378,0.018948 -0.0034,0.031006 0.02067,0.029283 0.07062,0.051677 -0.0379,0.027561 -0.09129,0.039619 0.0017,0.010335 0.0155,0.01378 0.01378,0.00345 0.01723,0.00689 0.01206,0.012058 0,0.048231 -0.01378,0.043064 -0.01034,0.1102431 0.0017,0.01378 0.01034,0.036174 0.01034,0.027561 0.01206,0.037896 0.0034,0.010335 0.0017,0.034451 -0.0017,0.024116 0,0.036173 0.01206,0.046509 0.01033,0.053399 -0.01033,0.043064 -0.01033,0.062012 0.0017,0.043064 -0.0017,0.055122 -0.0017,0.00345 -0.0052,0.010335 -0.0034,0.00689 -0.0052,0.012058 0.0017,0.017226 0,0.020671 0,0.017226 0.01033,0.041341 0.01206,0.027561 0.01378,0.039619 0,0.00172 -0.02412,0.1016303 -0.0017,0.00861 -0.01034,0.041341 -0.0069,0.025838 -0.01034,0.041341 -0.0069,0.041341 -0.01206,0.043064 0.01895,0.043064 0.03101,0.1102431 0.0069,0.049954 -0.01206,0.089573 -0.03273,0.067179 -0.03273,0.072347 0,0.041341 0.01206,0.072347 0.01378,0.025838 0.01206,0.029283 0,0.00861 -0.0155,0.018948 -0.0155,0.01378 -0.01895,0.018948 -0.0017,0.00689 0.0069,0.044786 0.0034,0.00689 -0.02928,0.060289 -0.02756,0.043064 -0.03617,0.051676 -0.07924,0.084405 -0.153306,0.039619 -0.01034,0.01378 -0.01206,0.048231 0,0.032729 -0.01378,0.044786 -0.0069,0 -0.01722,-0.00517 -0.01034,-0.00517 -0.01723,-0.00517 -0.0155,0.051677 -0.01378,0.049954 -0.0052,0.00517 -0.0155,0.012058 -0.01206,0.00517 -0.01723,0.010335 -0.0689,0.060289 -0.134358,0.08785 -0.08613,0.036174 -0.153307,0.020671 l -0.03617,-0.00861 q -0.0069,0 -0.01895,0.00517 -0.01378,0.00517 -0.02067,0.00517 -0.04995,0.00689 -0.103353,0 -0.0069,0 -0.02928,-0.00517 -0.0155,-0.00517 -0.02928,-0.00517 h -0.07235 q -0.07062,0 -0.08268,0.00345 -0.03962,0.00689 -0.05857,0.00689 -0.02412,0 -0.06201,-0.017225 -0.0069,-0.00345 -0.02756,-0.00689 -0.01895,-0.00517 -0.02756,-0.00861 -0.01378,-0.00689 -0.02928,-0.025838 -0.01895,-0.022393 -0.02928,-0.029283 -0.03962,-0.027561 -0.03962,-0.043064 -0.03101,0 -0.0534,-0.027561 -0.04306,-0.053399 -0.03617,-0.048231 -0.113688,-0.1016304 -0.110243,-0.098185 -0.02067,-0.024116 -0.02412,-0.039619 -0.0034,-0.01378 -0.0017,-0.036173 0.0034,-0.029283 0.0017,-0.036174 0,-0.017226 -0.01034,-0.049954 -0.01206,-0.032728 -0.01378,-0.049954 0,-0.012058 -0.0052,-0.036174 -0.0052,-0.024116 -0.0052,-0.037896 -0.0017,-0.051676 -0.0034,-0.060289 -0.01034,-0.051677 -0.01034,-0.051677 0.0017,-0.00861 0.0069,-0.029283 0.0052,-0.018948 0.0069,-0.029283 0.0017,-0.025838 -0.0017,-0.08785 -0.0034,-0.056844 0,-0.08785 0.0017,-0.00861 0.0069,-0.024116 0.0069,-0.015503 0.0069,-0.025838 0,-0.00861 -0.0034,-0.01378 -0.0052,-0.00517 -0.0069,-0.00861 -0.0017,-0.00861 -0.0017,-0.08096 -0.0017,-0.029283 0.0017,-0.037896 0.0017,-0.00517 0.01378,-0.020671 0.0086,-0.01378 0.0086,-0.022393 0,0.012058 -0.03445,-0.031006 -0.0034,-0.00345 -0.0034,-0.099908 0.0017,-0.018948 0.0069,-0.056844 0.0069,-0.036174 0.0069,-0.056844 -0.0017,-0.106798 -0.0017,-0.1205784 0.0017,-0.027561 0.01378,-0.08785 0.01034,-0.056844 0.01034,-0.089573 0,-0.060289 -0.01378,-0.098185 -0.02928,-0.079237 -0.01895,-0.1033529 0.01378,-0.025838 -0.0052,-0.060289 -0.01378,-0.024116 0.0052,-0.062012 0.0086,-0.015503 -0.01206,-0.075792 -0.01378,-0.043064 -0.01378,-0.043064 -0.0017,-0.00517 -0.0052,-0.01378 -0.0034,-0.010335 -0.0052,-0.012058 -0.0017,-0.010335 -0.03445,-0.1343588 -0.0069,-0.022393 -0.02411,-0.051677 -0.02067,-0.037896 -0.02756,-0.053399 -0.0052,-0.015503 -0.02067,-0.046509 -0.0155,-0.029283 -0.02067,-0.046509 0.0052,-0.00172 0.05512,0.018948 -0.01206,-0.00345 0.09646,0.024116 0.06029,0.017226 0.08268,0.017226 0.06546,0.00517 0.05168,0.00172 0.08613,0.01378 0.146416,-0.00861 0.04651,-0.018948 0.105076,-0.012058 0.05684,0.00861 0.04479,0.00861 -0.0034,0 0.03101,0 0.01033,0 0.02239,0.00517 0.01723,0.00517 0.02412,0.00517 0.02756,0.00517 0.09818,-0.010335 0.02239,-0.00517 0.0689,-0.020671 0.04306,-0.015503 0.06718,-0.020671 0.06546,-0.01378 0.136081,0.00517 -0.06029,0.012058 -0.07579,0.029283 -0.0052,0.00517 -0.01034,0.015503 -0.0052,0.010335 -0.0086,0.01378 -0.01895,0.022393 -0.03617,0.068902 -0.0017,0.00517 -0.0017,0.093018 0,0.00345 0.02067,0.08096 0.0052,0.017226 0,0.037896 -0.0086,0.00345 -0.01033,0.012058 0,0.00345 0.0017,0.010335 0,0.00689 0,0.010335 -0.0034,0.00861 -0.01033,0.015503 -0.0052,0.012058 -0.0017,0.025838 -0.0017,0.00517 -0.0069,0.015503 -0.0052,0.00861 -0.0069,0.015503 -0.0017,0.00689 0,0.018948 0,0.01378 -0.0017,0.018948 -0.0086,0.060289 -0.0086,0.077515 0,0.012058 0,0.046509 -0.0017,0.031006 0,0.048231 0,0.022393 0.0155,0.051677 0.0069,0.017225 -0.0034,0.039619 -0.01378,0.025838 -0.01206,0.034451 0.0017,0.00861 0.0069,0.012058 -0.0034,0.00689 -0.0086,0.018948 0.0034,0.00517 0.01206,0.012058 0.0086,0.00517 0.01034,0.010335 0.0017,0.010335 -0.0069,0.017226 -0.0052,0.012058 0.0086,0.020671 0.01378,0.024116 0.01206,0.096463 -0.0017,0.020671 0.0034,0.046509 0.0086,0.020671 0.01033,0.031006 -0.0017,0.00861 -0.0069,0.015503 -0.0052,0.00861 -0.0069,0.01378 -0.0017,0.00689 0,0.020671 0.0034,0.01378 0.0017,0.020671 -0.0017,0.00689 -0.0069,0.018948 -0.0052,0.012058 -0.0069,0.018948 0.0017,-0.017226 -0.0017,0.1136882 -0.0034,0.037896 0.01378,0.060289 -0.04823,0 -0.02756,0.039619 0.0069,0.012058 0.02239,0.031006 0.01378,0.018948 0.0155,0.024116 -0.0052,-0.012058 -0.01033,0.060289 0,-0.00689 0,0.072347 0,0.062012 0.0017,0.058567 -0.01206,0.056844 -0.01206,0.062012 0,0.044786 0.02239,0.1016304 0.02067,0.049954 0.09474,0.051676 0.03273,0 0.04479,-0.024116 0.01378,-0.02067 0.0155,-0.037896 0.0069,-0.037896 0,-0.060289 -0.01206,-0.053399 -0.01206,-0.051677 -0.0017,0.00345 0.02756,-0.036174 0.01895,-0.027561 0.02067,-0.058567 0.0017,-0.041341 -0.0017,-0.053399 -0.01206,0.00861 -0.02239,0.012058 -0.02239,-0.00517 -0.0034,-0.1102431 0.0052,-0.01378 0.0034,-0.029283 0.0017,-0.00861 0.0086,-0.012058 0.0034,-0.017226 0,-0.029283 -0.01723,-0.065457 -0.01895,-0.062012 0.0069,-0.037896 0.01034,-0.048231 0.01378,-0.051677 0.01206,-0.043064 0,0.010335 0,-0.037896 0,-0.027561 -0.0069,-0.082682 -0.0069,-0.051676 -0.0052,-0.08096 0,-0.044786 -0.0086,-0.07407 -0.0155,-0.046509 -0.0155,-0.079237 0,-0.043064 0.0017,-0.041341 -0.0017,0 -0.02412,-0.017226 0.0017,-0.017226 0.01895,-0.048231 0.02412,-0.037896 0.02756,-0.044786 0.0017,-0.00517 0.01206,-0.017225 0.0086,-0.012058 0.01034,-0.015503 0.0017,-0.00689 -0.01034,-0.039619 -0.01378,-0.037896 -0.01033,-0.049954 0.01033,-0.036174 0.01033,-0.031006 0,-0.012058 -0.0069,-0.034451 -0.0052,-0.024116 -0.0052,-0.036174 0,-0.029283 -0.0379,-0.1636421 -0.0052,-0.01378 -0.01895,-0.060289 -0.01206,-0.037896 -0.01723,-0.060289 -0.0017,-0.00517 -0.01034,-0.024116 -0.0086,-0.020671 -0.01206,-0.029283 -0.01378,-0.039619 -0.0017,-0.049954 0.02067,0.022393 0.06546,0.037896 0.06029,0.024116 0.09302,0.022393 0.0379,0 0.296279,0 0.02067,0.00172 0.0534,-0.00345 0.03445,-0.00517 0.05168,-0.00517 0.01378,-0.00172 0.118856,0 0.05168,0 0.106798,-0.020671 0.06029,-0.022393 0.08441,-0.041341 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6823" /><path
             d="m -17.703353,4.8491065 q 0.04651,0 0.124023,0.00689 0.08613,0.00861 0.124024,0.00861 0.04134,0.00172 0.122301,0.024116 0.08096,0.022393 0.124023,0.024116 0.151585,0.00517 0.211874,-0.020671 0.03273,-0.012058 0.09819,-0.010335 0.02412,0 0.192926,-0.018948 0.0069,-0.00517 -0.02239,0.049954 -0.0069,0.01378 -0.0379,0.068902 -0.02412,0.043064 -0.03101,0.070625 -0.0034,0.022393 0.01034,0.053399 0.01378,0.015503 0.01895,0.027561 0.0034,0.012058 0.0034,0.037896 0,0.029283 0.0017,0.037896 0.01378,0.062012 0.01378,0.084405 0,0.034451 0.03273,0.079237 0.01206,0.010335 0.02067,0.031006 0.0034,0.00517 0.02239,0.017226 0.0155,0.010335 0.02067,0.017225 0.0086,0.015503 0,0.031006 -0.01206,0.020671 -0.01206,0.027561 0,0.00345 0.03101,0.048231 0.01206,0.022393 0.0155,0.062012 0.0034,0.037896 0.02756,0.086127 0.02928,0.055122 0.03445,0.077515 0.01378,0.051677 0.01723,0.060289 0.0034,0.010335 0.0155,0.031006 0.01206,0.018948 0.01722,0.031006 0.06201,0.1533068 0.08268,0.1567519 0.0086,-0.031006 0,-0.077515 -0.01034,-0.022393 -0.0155,-0.046509 0,-0.015503 0.0086,-0.046509 0.01034,-0.032728 0.01034,-0.046509 0.0034,-0.060289 0,-0.098185 0,0.00689 -0.03101,-0.082682 -0.0086,-0.027561 0.0086,-0.068902 0.02067,-0.051677 0.02239,-0.068902 0,-0.010335 -0.01378,-0.079237 -0.0034,-0.017226 0.0034,-0.041341 0.01034,-0.029283 0.01034,-0.041341 0.0086,-0.141249 -0.06546,-0.2807754 -0.0086,-0.015503 -0.02584,-0.053399 -0.01723,-0.034451 -0.02756,-0.053399 -0.0086,-0.015503 -0.02928,-0.036174 -0.02067,-0.024116 -0.02928,-0.036174 -0.04134,-0.053399 -0.03962,-0.051677 0.01033,0.00861 0.04306,0.015503 0.04306,0.00689 0.04651,0.00861 0.136081,0.048231 0.225654,0.048231 0.03962,0 0.09819,-0.020671 0.06546,-0.022393 0.09819,-0.025838 -0.01723,0.00172 0.282498,-0.062012 0.275607,-0.060289 0.397908,-0.055122 -0.160197,0.055122 -0.251492,0.1670873 -0.02239,0.025838 -0.07235,0.1395264 0.0034,-0.00345 -0.02928,0.1136883 -0.0034,0.010335 -0.01723,0.037896 -0.01033,0.022393 -0.01378,0.037896 -0.01034,0.053399 -0.0155,0.062012 -0.03445,0.07407 -0.03445,0.1102431 0.0017,0.022393 0.0086,0.063734 0.0086,0.043064 0.0086,0.063734 0,0.010335 -0.0017,0.048231 -0.0017,0.031006 0.0017,0.048231 0.0017,0.00689 0.0086,0.01378 0.0052,0.00689 0.0052,0.015503 0,0.00689 -0.0069,0.022393 -0.01034,0.017225 -0.01206,0.022393 -0.01378,0.00517 -0.0086,0.018948 0,0.00689 0.0086,0.027561 0.0069,0.022393 0.0069,0.032728 -0.0017,0.022393 -0.01722,0.062012 -0.0155,0.041341 -0.01723,0.065457 -0.0017,0.017226 -0.01033,0.063734 -0.0069,0.041341 -0.0069,0.065457 l 0.02067,0.1136882 q 0.01206,0.048231 0.01034,0.060289 -0.0017,0.00861 -0.0086,0.031006 -0.0052,0.018948 -0.0052,0.032728 0,0.018948 0.0069,0.048231 0.0086,0.031006 0.0086,0.044786 0.0069,0.041341 0.02928,0.1188559 0.03445,0.1240235 -0.02239,0.077515 0.01723,0.022393 0.0086,0.058567 -0.0155,0.065457 -0.0155,0.058567 0,0.017226 0.0017,0.065457 0,0.041341 -0.0034,0.063734 -0.0034,0.020671 -0.0086,0.056844 -0.0052,0.036174 -0.0086,0.055122 -0.0034,0.015503 -0.0086,0.041341 -0.0086,0.048231 0.0086,0.099908 0,0.012058 -0.0069,0.032728 -0.0069,0.018948 -0.0069,0.031006 l 0.01378,0.046509 q 0.0017,0.010335 0.0017,0.025838 0,0.015503 0.0017,0.022393 0.0017,0.00861 0.0086,0.015503 0.0069,0.00861 0.0086,0.015503 0.0034,0.010335 -0.01378,0.060289 -0.01895,0.067179 0.07752,0.1171333 0.06373,0.032728 0.204983,0.068902 -0.04823,0.039619 -0.199815,0.039619 -0.124024,0.00172 -0.208429,-0.017225 -0.01895,-0.00345 -0.10163,-0.036174 -0.0689,-0.025838 -0.105076,-0.025838 h -0.313504 q -0.0379,0.00172 -0.04479,0.00345 -0.0034,0 -0.01206,0.00861 -0.0086,0.00517 -0.01722,0.00517 0.03617,-0.043064 0.02584,-0.2377117 0,-0.022393 -0.01723,-0.056844 -0.0155,-0.031006 -0.0155,-0.055122 0,-0.037896 -0.0034,-0.060289 0.0017,0.00345 -0.01033,-0.018948 -0.0069,-0.010335 0.01206,-0.018948 -0.0052,-0.010335 -0.0155,-0.029283 -0.01206,-0.022393 -0.0155,-0.029283 -0.0086,-0.018948 -0.01378,-0.056844 -0.0052,-0.036173 -0.01378,-0.055121 -0.05168,-0.1050755 -0.05512,-0.1274686 -0.0034,-0.018948 0,-0.055122 0.0034,-0.037896 0.0017,-0.055122 -0.0034,-0.015503 -0.02067,-0.034451 -0.0086,-0.010335 -0.0379,-0.027561 -0.0379,-0.024116 -0.04306,-0.027561 -0.02756,-0.022393 -0.03101,-0.051677 0,0.012058 0,-0.063734 0,-0.022393 -0.01722,-0.09474 -0.01034,-0.056844 -0.03273,-0.07407 0.0017,0.027561 0.0017,0.26355 0,0.00689 0.0017,0.055122 0.0034,0.046509 0.0034,0.075792 0,0.096463 -0.0379,0.09474 0.0017,0.00689 0.0155,0.025838 0.01206,0.015503 0.01206,0.029283 -0.01033,0.00517 -0.01378,0.018948 0,0.00689 0.01378,0.036174 0.02239,0.046509 0.02067,0.091295 0,-0.00689 -0.01723,0.077515 -0.0052,0.020671 0.0379,0.1739775 0.01206,0.025838 0.01206,0.056844 0.0017,0.00861 0.02928,0.049954 0.0017,0.00345 0.04651,0.049954 0.03962,0.041341 0.0379,0.051677 -0.09991,-0.034451 -0.146416,-0.032729 -0.02412,0 -0.06546,-0.00861 -0.04479,-0.00689 -0.06718,-0.00689 -0.04995,0 -0.09819,0.01378 -0.06029,0.022393 -0.04995,0.017226 -0.05684,0.018948 -0.04823,0.017226 -0.02239,0.00517 -0.07407,0.00689 -0.05168,0.00172 -0.07579,0.00689 -0.06201,0.015503 -0.130914,0.015503 -0.124023,0 -0.11541,0.00172 -0.0086,-0.00172 -0.03617,-0.010335 -0.02239,-0.00517 -0.03962,-0.00689 0.01034,0.00172 -0.163642,0.010335 0.01723,-0.018948 0.108521,-0.048231 0.08613,-0.027561 0.103353,-0.056844 0.0534,-0.089573 0.05857,-0.1136883 0.02067,-0.098185 0.01895,-0.1550294 0,-0.025838 0.0086,-0.070625 0.0086,-0.046509 0.0086,-0.072347 0,-0.049954 -0.0155,-0.1429716 -0.0155,-0.096463 -0.01723,-0.1429715 -0.0017,-0.022393 0.0155,-0.1550294 0.0052,-0.032728 -0.0052,-0.086127 -0.01034,-0.063734 -0.01034,-0.08785 0,-0.022393 0,-0.032728 -0.0017,-0.00689 -0.0069,-0.018948 -0.0052,-0.012058 -0.0069,-0.015503 -0.0069,-0.039619 0.01723,-0.1240235 0.0034,-0.00861 0.01722,-0.046509 0.01206,-0.031006 0.01378,-0.048231 0,-0.089573 -0.03445,-0.125746 -0.04823,-0.049954 0,-0.1429716 0.03273,-0.062012 0.02067,-0.1395264 -0.0034,-0.024116 -0.0155,-0.070625 -0.01378,-0.051677 -0.01895,-0.077515 -0.0017,-0.012058 -0.0017,-0.036174 -0.0017,-0.024116 -0.0034,-0.036174 -0.0069,-0.029283 -0.02756,-0.07407 -0.02756,-0.055122 -0.03273,-0.072347 -0.01723,-0.046509 -0.02067,-0.093018 0,-0.00861 0.0034,-0.041341 0.0017,-0.025838 -0.0017,-0.039619 0.0034,0.00861 -0.02928,-0.032728 -0.0069,-0.00861 -0.01723,-0.031006 -0.01034,-0.022393 -0.0155,-0.031006 -0.0069,-0.00861 -0.02756,-0.010335 -0.02239,-0.00172 -0.02928,-0.012058 -0.0052,-0.00689 -0.06718,-0.051677 -0.05684,-0.044786 -0.06373,-0.056844 0.0069,-0.00172 0.06718,0.010335 0.05857,0.01378 0.06718,0.012058 0.01034,-0.00172 0.03273,-0.00861 0.01895,-0.00689 0.03273,-0.00861 0.06718,-0.00345 0.14814,0.015503 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6825" /><path
             d="m -13.584739,4.8094878 q -0.0534,0.055122 -0.06373,0.067179 -0.05168,0.063734 -0.0534,0.067179 -0.0052,0.017225 -0.0069,0.049954 -0.0034,0.037896 -0.0069,0.051676 -0.0034,0.015503 -0.0034,0.1119657 v 0.1429716 q 0,0.1653647 0.01723,0.2101509 0.01722,0.043064 0.02067,0.056844 0.0034,0.01378 0.0034,0.043064 -0.0017,0.029283 0.0034,0.043064 0,0.00172 0.0086,0.1136882 0.0017,0.00689 0.0069,0.025838 0.0069,0.017226 0.0052,0.027561 -0.01378,-0.00345 -0.03273,-0.029283 -0.02239,-0.032728 -0.02928,-0.037896 0,0 -0.05512,-0.034451 -0.01206,-0.00861 -0.0379,-0.020671 -0.02412,-0.012058 -0.0379,-0.020671 -0.04306,-0.031006 -0.08268,-0.034451 -0.06373,-0.00517 -0.10852,-0.012058 -0.08785,-0.010335 -0.07924,-0.010335 -0.08957,0.00345 -0.07924,0 -0.01378,0.00517 -0.02239,0.053399 -0.0034,0.01378 -0.0017,0.046509 0.0034,0.031006 -0.0017,0.046509 -0.0017,0.00345 -0.0069,0.010335 -0.0052,0.00517 -0.0069,0.010335 0,-0.00345 0,0.032728 0,0.015503 -0.0069,0.044786 -0.0052,0.029283 -0.0069,0.044786 -0.0017,0.062012 -0.0086,0.089573 0.0017,-0.010335 0.0086,0.056844 0.0017,0.012058 0.0086,0.043064 0.0052,0.027561 0.0052,0.043064 0,0.017225 -0.0086,0.032728 -0.01206,0.020671 -0.0155,0.032728 l 0.02239,0.056844 q -0.0017,0 -0.02412,0.122301 -0.0069,0.025838 -0.0017,0.043064 0.0034,0.00689 0.0086,0.012058 0.0052,0.00517 0.0069,0.010335 -0.0017,-0.00172 -0.0017,0.079237 0,0.063734 -0.0017,0.077515 -0.0017,0.00689 -0.0069,0.022393 -0.0034,0.01378 -0.0034,0.022393 0,0.00517 0,0.022393 0.0017,0.012058 0,0.020671 -0.01378,0.063734 -0.01378,0.068902 v 0.1446941 q 0,0.01378 -0.0052,0.029283 -0.0069,0.017226 -0.0086,0.027561 -0.0017,0.020671 0.0052,0.051676 0.0069,0.037896 0.0086,0.051677 0.0017,0.053399 0.03617,0.1257461 0.01378,0.031006 0.0155,0.082682 0,0.051677 0.0155,0.08096 0.01034,0.018948 0.0689,0.056844 0.06029,0.036173 0.0689,0.055122 0.03617,0.08096 0.03617,0.08785 -0.08957,-0.041341 -0.163642,-0.058567 -0.01723,-0.00345 -0.04479,-0.00861 -0.03273,-0.00517 -0.04651,-0.00689 -0.09474,-0.020671 -0.127468,-0.020671 h -0.201538 q -0.118856,0 -0.132637,-0.00172 -0.04479,-0.00861 -0.04479,-0.00861 h -0.04995 q -0.03445,0 -0.111965,0.027561 -0.0913,0.032728 -0.110244,0.036173 -0.03273,0.00689 -0.07235,0.00172 -0.03962,-0.00689 -0.07235,-0.00172 -0.05684,0.010335 -0.0689,0.015503 0.0534,-0.015503 0.101631,-0.075792 0.07924,-0.096463 0.07924,-0.096463 0.05684,-0.053399 0.05512,-0.160197 0,-0.041341 0.01378,-0.067179 0.01378,-0.025838 0.01378,-0.037896 0.0017,-0.025838 -0.03101,-0.1119657 -0.01033,-0.027561 0.03101,-0.1223009 0.0086,-0.017226 0.0052,-0.070625 -0.0017,-0.046509 0.0052,-0.051677 -0.05857,-0.07407 -0.0379,-0.1843127 0.01378,-0.079237 0.01378,-0.08785 0,-0.1136882 -0.0017,-0.1033529 0.0017,-0.010335 0.0086,-0.032729 0.0052,-0.022393 0.0069,-0.032728 0,0.00689 0,-0.043064 V 6.0703936 q 0,-0.039619 -0.0034,-0.051677 -0.0069,-0.031006 0,-0.044786 0.0034,-0.00861 0.02239,-0.025838 0.01895,-0.017225 0.02067,-0.025838 0.0034,-0.01378 -0.01378,-0.034451 -0.02239,-0.024116 -0.02412,-0.029283 0.0086,-0.00861 0.02239,-0.032728 0.01378,-0.020671 0.02584,-0.029283 -0.0034,-0.00861 -0.02756,-0.027561 -0.02412,-0.020671 -0.02412,-0.048231 0,-0.017226 0.01378,-0.055122 0.01378,-0.034451 0.01206,-0.053399 -0.06373,-0.012058 -0.16881,-0.01378 -0.03273,0 -0.04134,0.00345 -0.0052,0 -0.02067,0.010335 -0.01378,0.00689 -0.02067,0.00689 -0.0069,0 -0.02239,-0.00345 -0.01378,-0.00517 -0.02584,-0.00345 0.01206,0 -0.02928,0.00861 -0.0069,0.00172 -0.02239,0.00517 -0.01206,0.00345 -0.01895,0.00517 -0.02584,0.012058 -0.06718,0.025838 -0.05684,0.020671 -0.115411,0.09474 -0.02239,-0.051677 0,-0.1360814 0.03617,-0.1481392 0.0379,-0.1515843 0.0155,-0.044786 0.01206,-0.065457 -0.0017,-0.00861 -0.0069,-0.017225 -0.0052,-0.010335 -0.0069,-0.015503 -0.0034,-0.012058 0,-0.034451 0.0034,-0.025838 0.0017,-0.036174 -0.0034,-0.018948 -0.01378,-0.053399 -0.0017,-0.00517 -0.0069,-0.00861 -0.0034,-0.00517 -0.0052,-0.010335 0.01033,-0.015503 0.01206,-0.032729 0.0034,-0.024116 -0.0034,-0.046509 -0.01722,-0.058567 -0.03962,-0.099908 -0.01034,-0.018948 -0.01034,-0.099908 0,-0.137804 -0.0034,-0.1808677 0.0086,0.00517 0.01895,0.034451 0.01034,0.029283 0.02067,0.034451 0.0052,0.00517 0.05684,0.022393 0.01723,0.00517 0.09646,0.031006 0.146417,0.046509 0.204983,0.046509 0.04306,0 0.08441,-0.010335 0.0069,-0.00172 0.01895,-0.010335 0.01033,-0.00689 0.01895,-0.010335 0.0086,-0.00172 0.05684,0.00689 0.01895,0.00345 0.04479,-0.00172 0.03445,-0.00689 0.04479,-0.00861 0.04306,-0.00172 0.09646,0.010335 0.02239,0.00517 0.07062,-0.00861 0.06718,-0.020671 0.196371,-0.00345 0.01206,0.00172 0.0379,0.00172 0.02411,-0.00172 0.03617,0 0.0069,0.00172 0.02756,0.00689 0.0155,0.00517 0.02584,0.00345 0.01206,-0.00861 0.02928,-0.010335 0.05168,-0.00689 0.0534,-0.00861 0.01033,0.00172 0.02756,0.017225 0.0155,0.01378 0.02412,0.01378 -0.0086,0 0.02928,-0.018948 0.01378,-0.00689 0.03617,0.00172 0.02584,0.010335 0.03617,0.00517 0.0052,-0.00172 0.01034,-0.00861 0.0052,-0.00689 0.0086,-0.00861 0.01034,-0.00517 0.04306,0 0.05684,0.00861 0.09991,0.00861 0.03101,0 0.08613,-0.00517 0.05685,-0.00689 0.08613,-0.00689 0.04995,0.00172 0.115411,-0.024116 0.172255,-0.063734 0.151584,-0.063734 z"
             style="font-family:Ghoulish;-inkscape-font-specification:Ghoulish"
             id="path6827" /></g></g></g></g><script
     id="script84347"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script4087"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script13518"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script17072"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script8521"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script4290"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script5729"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script14349"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script2797"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script2620"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script4237"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script16770"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script16928"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
